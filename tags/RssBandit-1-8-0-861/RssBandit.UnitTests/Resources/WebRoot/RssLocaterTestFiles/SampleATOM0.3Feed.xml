<?xml version="1.0" encoding="utf-8"?>
<feed xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="0.2" xml:lang="en-us" xmlns="http://purl.org/atom/ns#">
  <title>Dare Obasanjo aka Carnage4Life</title>
  <link>http://www.25hoursaday.com/weblog/</link>
  <modified>2004-03-24T10:17:34.5000000-08:00</modified>
  <tagline>Young, Black and Working for The Man</tagline>
  <generator name="newtelligence dasBlog 1.5.3337.0">http://www.dasblog.net</generator>
  <author>
    <name>Dare Obasanjo</name>
  </author>
  <entry>
    <title>Java vs. C#, The Battle for the Linux Desktop</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=a7fb8435-a89b-4644-9c5d-10ebbfb3a2ba</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=a7fb8435-a89b-4644-9c5d-10ebbfb3a2ba</id>
    <issued>2004-03-24T10:17:33.7031250-08:00</issued>
    <modified>2004-03-24T10:17:34.5000000-08:00</modified>
    <created>2004-03-24T10:17:33.7031250-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
          <a href="http://primates.ximian.com/~miguel/">Miguel</a> pointed me to an interesting
      discussion between <a href="http://log.ometer.com/">Havoc Pennington</a> of RedHat and <a href="http://www.advogato.org/person/lupus/">Paolo
      Molaro</a>, a lead developer of the Mono project. Although I exchanged mail
      with Miguel about this thread about a week ago I've been watching the discussion as
      opposed to directly commenting on it because I've been trying to figure out if this
      is just a discussion between a couple of Open Source developers or a larger discussion
      between RedHat and Novell being carried out by proxy. 
   </p>
        <p>
      Anyway, the root of the discussion is Havoc's entry entitled <a href="http://ometer.com/desktop-language.html">Java,
      Mono, or C++?</a> where he starts of by pointing out that a number of the large
      Linux desktop projects are interested in migrating from C/C++ to managed code. Specifically
      he writes 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
            <em>In the Linux desktop world, there's widespread sentiment that high-level language
      technologies such as garbage collection, sandboxed code, and so forth would be valuable
      to have and represent an improvement over C/C++. </em>
          </p>
          <p>
            <em>Several desktop projects are actively interested in this kind of technology: </em>
          </p>
          <ul>
            <li>
              <em>GNOME: many developers feel that this is the right direction </em>
            </li>
            <li>
              <em>Mozilla: to take full advantage of XUL, it has to support more than just JavaScript </em>
            </li>
            <li>
              <em>OpenOffice.org: has constantly flirted with Java, and is considering using Java
         throughout the codebase </em>
            </li>
            <li>
              <em>Evolution: has considered writing new code and features in Mono, though they are
         waiting for a GNOME-wide decision </em>
            </li>
          </ul>
          <p>
            <em>Just these four projects add up to probably 90% of the lines of code in a Linux
      desktop built around them</em>
          </p>
        </blockquote>
        <p>
      Havoc then makes the argument that the Open Source community will have to make a choice
      between Java/JVM or C#/CLI. He argues against choosing C#/CLI by saying 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
            <em>Microsoft has set a clever trap by standardizing the core of the CLI and C# language
      with ECMA, while keeping proprietary the class libraries such as ASP.NET and XAML.
      There's the appearance of an open managed runtime, but it's an incomplete platform,
      and no momentum or standards body exists to drive it to completion in an open manner...Even
      if we use some unencumbered ideas or designs from the .NET world, we should never
      define our open source managed runtime as a .NET clone.</em>
          </p>
        </blockquote>
        <p dir="ltr">
      and argues for Java/JVM by writing 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p dir="ltr">
            <em>Java has broad industry acceptance, historically driven by Sun and IBM; it's by
      far the most-used platform in embedded and on the UNIX/Linux enterprise server...One
      virtue of Java is that it's at least somewhat an open standard; the Java Community
      Process isn't ideal, but it does cover all the important APIs. The barest core of
      .NET is an ECMA standard, but the class libraries of note are Microsoft-specific...It's
      unclear that anyone but Microsoft could have significant influence over the ECMA spec
      in any case...</em>
          </p>
          <p>
            <em>Also worth keeping in mind, OO.org is already using Java. </em>
          </p>
          <p>
            <em>Combining Java and Linux is interesting from another standpoint: it merges the
      two major Microsoft-alternative platforms into a united front.</em>
          </p>
        </blockquote>
        <p dir="ltr">
      At this point it is clear that Havoc does agree with what Miguel and the rest of the
      Mono folks have been saying for years about needing a managed code environment to
      elevate the state of the art in desktop application development on UNIX-based Open
      Source platforms. I completely disagree with him that Sun's JCP process is somehow
      more of an open standard than ECMA. That just seems absurd. He concludes the
      article with 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
            <strong>
              <em>What Next?</em>
            </strong>
          </p>
          <p>
            <em>For some time, the gcj and Classpath teams have been working on an open source
      Java runtime. Perhaps it's time to ramp up this effort and start using it more widely
      in free software projects. How long do we wait for a proprietary JDK to become GPL
      compatible before we take the plunge with what we have? </em>
          </p>
          <p>
            <em>The first approach I'd explore for GNOME would be Java, but supporting a choice
      of gcj or IKVM or the Sun/IBM JDKs. The requirement would be that only the least common
      denominator of these three can be used: only the subset of the Java standard completed
      in GNU Classpath, and avoiding features specific to one of the VMs. Over time, the
      least common denominator becomes larger; Classpath's goal is to complete the entire
      Java standard.</em>
          </p>
        </blockquote>
        <p dir="ltr">
      There is also some stuff about needing to come up with an alternative to XAML so that
      GNOME and co. stay competitive but that just seems like the typical Open Source need
      to clone everything a proprietary vendor does without thinking it through. There was
      no real argument as to why he thought it would be a good idea, just a need to play
      catchup with Microsoft. 
   </p>
        <p dir="ltr">
      Now on to the responses. Paolo has <a href="http://www.advogato.org/person/lupus/diary.html?start=10">two</a> <a href="http://www.advogato.org/person/lupus/diary.html?start=11">responses</a> to
      Havoc's call to action. Both posts argue that technically Mono is as mature as
      the Open Source Java/JVM projects and has niceties such as P/Invoke that make communication
      between native and managed code straightforward. Secondly, his major point is that
      there is no reason to believe that while Microsoft will eventually sue the Mono project
      for violating patents on .NET Framework technologies that Sun would not do the same
      with Java technologies. Not only has Sun sued before when it felt Java was being threatened
      (the lengthy lawsuit with Microsoft) but unlike Microsoft it has never given any Java
      technology to a standards body to administer in a royalty free manner as Microsoft
      has done with C# and the CLI. Miguel also followed up with his post <a href="http://primates.ximian.com/~miguel//texts/gtkjava.html">Java,
      Gtk and Mono</a> which shows that it is possible to write Java code against Mono
      which points out that language choice is separate from the choice of which runtime
      (JVM vs. CLI) you use. He also echoes Paolo's sentiments on Sun and Microsoft's behavior
      with regards to software patents and their technologies in his post <a href="http://primates.ximian.com/~miguel//texts/patents.html">On
      Software Patents</a>. 
   </p>
        <p dir="ltr">
      Havoc has a number of <a href="http://log.ometer.com/2004-03.html#21">followup posts</a> where
      he points out various other options people have mailed him and where he points
      out that his primary worry is that the current state of affairs will lead
      to fragmentation in the Open Source desktop world.  Miguel responds in his
      post <a href="http://primates.ximian.com/~miguel/all.html#3%2F21%2F04%2012%3A00%3A00%20a">On
      Fragmentation, reply</a> with the followng opening 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
            <em>Havoc, you are skipping over the fact that a viable compromise for the community
      is not a viable compromise for some products, and hence why you see some companies
      picking a particular technology as I described at length below.</em>
          </p>
        </blockquote>
        <p dir="ltr">
      which I agree with completely. Even if the Open Source community agreed to go with
      C#/CLI I doubt that Sun would choose anything besides Java for their “Java Desktop
      System”. If Havoc is saying having companies like Sun on board with whatever
      decision he is trying to arrive at is a must then he's already made the decision to
      go with Java and the JVM. Given that Longhorn will have managed APIs (aka WinFX) Miguel
      believes that the ability to migrate from Windows programming to Linux programming
      [based on Mono] would be huge.  I agree, one of the reasons Java became
      so popular was the ease with which one could migrate from platform to platform and
      preserve one's knowledge since Java was somewhat Write Once Run Anywhere (WORA). However
      this never extended to building desktop applications which Miguel is now trying to
      tap into by pushing Linux desktop development to be based on Mono. 
   </p>
        <p dir="ltr">
      I have no idea how Microsoft would react to the outcome that Miguel envisions but
      it should be an interesting ride. 
   </p>
        <p dir="ltr">
       
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>MSDN Magazine Article on Blogging and RSS</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=a8490cbe-7252-4a74-ac59-5b91effaada4</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=a8490cbe-7252-4a74-ac59-5b91effaada4</id>
    <issued>2004-03-24T08:50:05.1718750-08:00</issued>
    <modified>2004-03-24T08:50:06.1718750-08:00</modified>
    <created>2004-03-24T08:50:05.1718750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
          <a href="http://skonnard.com/">Aaron Skonnard</a> has a new MSDN magazine article
      entitled <a href="http://msdn.microsoft.com/msdnmag/issues/04/04/XMLFiles/default.aspx">All
      About Blogs and RSS</a> where he does a good job of summarizing the various XML technologies
      around weblogs and syndication. It is a very good FAQ and one I definitely will be
      pointing folks to in future when asked about blogging technologies.  
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Design Guidelines for Working with XML in the .NET Framework</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b121bed1-1d33-4fff-90fd-8eac4978c3d7</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b121bed1-1d33-4fff-90fd-8eac4978c3d7</id>
    <issued>2004-03-24T08:19:07.7187500-08:00</issued>
    <modified>2004-03-24T08:19:11.4218750-08:00</modified>
    <created>2004-03-24T08:19:07.7187500-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      My recent Extreme XML column entitled <a href="http://msdn.microsoft.com/library/en-us/dnexxml/html/xml03172004.asp">Best
      Practices for Representing XML in the .NET Framework </a> is up on MSDN. The
      article was motivated by <a href="http://blogs.msdn.com/kcwalina/">Krzysztof Cwalina</a> who
      asked the XML team for design guidelines for working with XML in WinFX. There had
      been and currently is a bit of inconsistency in how APIs in the .NET Framework represent
      XML and this is the first step in trying to introduce a set of best practices and
      guidelines. 
   </p>
        <p dir="ltr" style="MARGIN-RIGHT: 0px">
      As stated in the article there are three primary situations when developers need to
      consider what APIs to use for representing XML. The situations and guidelines are
      briefly described below: 
   </p>
        <p dir="ltr" style="MARGIN-RIGHT: 0px">
        </p>
        <ul type="disc">
          <li>
            <p>
              <b>Classes with fields or properties that hold XML:</b> If a class has a field or
            property that is an XML document or fragment, it should provide mechanisms for manipulating
            the property as both a string and as an <b>XmlReader</b>. 
         </p>
          </li>
          <li>
            <p>
              <b>Methods that accept XML input or return XML as output:</b> Methods that accept
            or return XML should favor returning <b>XmlReader</b> or <b>XPathNavigator</b> unless
            the user is expected to be able to edit the XML data, in which case <b>XmlDocument</b> should
            be used. 
         </p>
          </li>
          <li>
            <p>
              <b>Converting an object to XML:</b> If an object wants to provide an XML representation
            of itself for serialization purposes, then it should use the <b>XmlWriter</b> if it
            needs more control of the XML serialization process than what is provided by the <b>XmlSerializer</b>.
            If the object wants to provide an XML representation of itself that enables it to
            participate fully as a member of the XML world, such as allow XPath queries or XSLT
            transformations over the object, then it should implement the <b>IXPathNavigable</b> interface. 
         </p>
          </li>
        </ul>
        <p>
        </p>
        <p>
      A piece of criticism I got from <a href="http://www.netcrucible.com/blog/">Joshua
      Allen</a> was that the guidelines seemed to endorse a number of approaches instead
      of defining the <em>one true approach. </em>The reason for this is that there isn't
      one XML API that satisfies the different scenarios described above. In Whidbey
      we will be attempting to collapse the matrix of choices by expanding the capabilities
      of XML cursors so that there shouldn't be a distinction between situations where an
      API exposes an API like <strong>XmlDocument</strong> or one like <strong>XPathNavigator</strong>.  
   </p>
        <p>
      One of the interesting design questions we've gone back and forth on is whether we
      have both a read-only XML cursor and read-write XML cursor (i.e. <a href="http://longhorn.msdn.microsoft.com/lhsdk/ref/ns/system.xml/c/xpathnavigator2/xpathnavigator2.aspx">XPathNavigator2</a> and <a href="http://longhorn.msdn.microsoft.com/lhsdk/ref/ns/system.xml/c/xpatheditor/xpatheditor.aspx">XPathEditor</a>)
       or a single XML cursor class which has a flag that indicates whether it is read-only
      or not (i.e. the approach taken by the <a href="http://msdn.microsoft.com/library/en-us/cpref/html/frlrfSystemIOStreamClassTopic.asp">System.IO.Stream
      class</a> which has CanRead and CanWrite properties). In Whidbey
      beta 1 we've gone with the former approach but there is discussion on whether
      we should go with the latter approach in beta 2. I'm curious as to which approach
      developers using System.Xml would favor. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Countdown to the XML Developer Center on MSDN </title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=9edadd9d-4779-4b63-add3-84403553ea40</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=9edadd9d-4779-4b63-add3-84403553ea40</id>
    <issued>2004-03-17T07:15:17.6825171-08:00</issued>
    <modified>2004-03-17T07:15:19.2450171-08:00</modified>
    <created>2004-03-17T07:15:17.6825171-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      In less than a week we'll be launching the XML Developer Center on MSDN and replacing
      the site at <a href="http://msdn.microsoft.com/xml">http://msdn.microsoft.com/xml</a>.
      The main differences between the XML Developer Center and what exists now will be 
   </p>
        <ol>
          <li>
            <p>
            The XML Developer Center will provide an entry point to working with XML in Microsoft products
            such as Office and SQL Server.
         </p>
          </li>
          <li>
            <p>
            The XML Developer Center will have an RSS feed. 
         </p>
          </li>
          <li>
            <p>
            The XML Developer Center will pull in content from my <a href="http://blogs.msdn.com/dareobasanjo">work
            weblog</a>. 
         </p>
          </li>
          <li>
            <p>
            The XML Developer Center will provide links to recommended books, mailing lists and
            weblogs. 
         </p>
          </li>
          <li>
            <p>
            The XML Developer Center will have content focused on explaining the fundamentals
            of the core XML technologies such as XML Schema, XPath, XSLT and XQuery. 
         </p>
          </li>
          <li>
            <p>
            The XML Developer Center will provide sneak peaks at advances in XML technologies
            at Microsoft that will be shipping future releases of the .NET Framework, SQL Server
            and Windows. 
         </p>
          </li>
        </ol>
        <p>
      During the launch the feature article will be the first in a series by <a href="http://blogs.msdn.com/mfussell">Mark
      Fussell</a> detailing the changes we've made to the System.Xml namespaces in Whidbey.
      His first article will focus on the core System.Xml classes like XmlReader and XPathNavigator.
      A follow up article is scheduled that will talk about additions to System.Xml since
      the last version of the .NET Framework such as XQuery. Finally, either Mark or <a href="http://blogs.msdn.com/mattavis">Matt
      Tavis</a> will write an article about the changes coming to System.Xml.Serialization
      such as the various hooks for allowing custom code generation from XML schemas such
      as <a href="http://msdn.microsoft.com/library/en-us/cpref/html/frlrfsystemxmlserializationixmlserializableclasstopic.asp">IXmlSerializable</a> (which
      is no longer an unsupported interface) and <font size="2">SchemaImporterExtensions. 
      </font></p>
        <p>
      I'll also be publishing our guidelines for exposing XML in .NET applications as
      well during the launch. If there is anything else you'd like to see on the XML Developer
      Center let me know. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Processing RSS isn't Black Magic</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=94c5256d-adbd-459b-ac0a-921d71837441</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=94c5256d-adbd-459b-ac0a-921d71837441</id>
    <issued>2004-03-17T06:39:57.2450171-08:00</issued>
    <modified>2004-03-17T09:19:31.4168921-08:00</modified>
    <created>2004-03-17T06:39:57.2450171-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      Both <a href="http://www.freeke.org/ffg/tech/computers/os/all/escapingthemadness.html">Dave
      Walker</a> and <a href="http://www.tbray.org/ongoing/When/200x/2004/03/16/EscMad">Tim
      Bray</a> state their aggregators of choice barfed when trying to read a post
      entitled <a href="http://www.tbray.org/ongoing/When/200x/2004/03/15/EndTAG">&lt;/TAG&gt;</a> because
      their aggregators of choice didn't know how to deal with tags in content. Weird. <a href="http://www.rssbandit.org/">RSS
      Bandit</a> dealt with it fine. Screenshot below. 
   </p>
        <p>
          <img src="/weblog/content/binary/rssbandit_endtag.GIF" border="0" />
        </p>
        <p>
      Combining this with <a href="/weblog/PermaLink.aspx?guid=6eb03279-9344-4d67-afc0-fb8e2c64878a">Arve
      Bersvendsen's comments from yesterday</a> I suspect that the main problems that
      people complain about when processing RSS is due to sloppy programming.
      I am amused that Tim Bray thinks <a href="http://www.virtuelvis.com/archives/175.html#cid413">adding
      a lot more complexity</a> is the solution to the problem. I guess that's why I don't
      work on standards bodies. :) 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Misunderstanding XML and Other RSS Follies</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=6eb03279-9344-4d67-afc0-fb8e2c64878a</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=6eb03279-9344-4d67-afc0-fb8e2c64878a</id>
    <issued>2004-03-16T13:02:44.8980000-08:00</issued>
    <modified>2004-03-16T13:02:46.7105000-08:00</modified>
    <created>2004-03-16T13:02:44.8980000-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      I just noticed that Arve Bersvendsen has written a post entitled <a href="http://www.virtuelvis.com/archives/175.html">11
      ways to valid RSS</a> where he states he has seen 11 different ways of providing
      content in an RSS feed namely 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <h4>Content in the description element
   </h4>
          <p>
      I have so far identified five different variants of content in the <code>&lt;description&gt;</code> element:
   </p>
          <ol>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/desc-a.xml">
                <font color="#0000a0">Plaintext
         as CDATA with HTML entities</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fdesc-a.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/desc-b.xml">
                <font color="#0000a0">HTML
         within CDATA</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fdesc-b.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/desc-c.xml">
                <font color="#0000a0">HTML
         escaped with entities</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fdesc-c.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/desc-d.xml">
                <font color="#0000a0">Plain
         text in CDATA</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fdesc-d.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/desc-e.xml">
                <font color="#0000a0">Plaintext
         with inline HTML using escaping</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fdesc-e.xml"><font color="#0000a0">Validate</font></a></li>
          </ol>
          <h4>&lt;content:encoded&gt;
   </h4>
          <p>
      I have encountered and identified two different ways of using <code>&lt;content:encoded&gt;</code>:
   </p>
          <ol>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/content-f.xml">
                <font color="#0000a0">Using
         entities</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fcontent-f.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/content-g.xml">
                <font color="#0000a0">Using
         CDATA</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fcontent-g.xml"><font color="#0000a0">Validate</font></a></li>
          </ol>
          <h4>XHTML content
   </h4>
          <p>
      Finally, I have encountered and identified four different ways in which people has
      specified XHTML content:
   </p>
          <ol>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/xhtml-h.xml">
                <font color="#0000a0">Using
         &lt;xhtml:body&gt;</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fxhtml-h.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/xhtml-i.xml">
                <font color="#0000a0">Using
         &lt;xhtml:div&gt;</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fxhtml-i.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/xhtml-j.xml">
                <font color="#0000a0">Using
         &lt;body&gt; with default namespace</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fxhtml-j.xml"><font color="#0000a0">Validate</font></a></li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/xhtml-k.xml">
                <font color="#0000a0">Using
         &lt;div&gt; with default namespace</font>
              </a> - <a href="http://feedvalidator.org/check.cgi?url=http%3A%2F%2Fwww.virtuelvis.com%2Fdownload%2Frss-tests%2Fxhtml-k.xml"><font color="#0000a0">Validate</font></a></li>
          </ol>
        </blockquote>
        <p dir="ltr">
      At first these seem like a lot until you actually try to program against this using
      an XML parser. In which case, the first thing you notice is that there is no difference
      programming against CDATA vs. escaped entities since they are both syntactic sugar. 
      For example, the XML infoset and data models compatible with it such as the XPath
      data model do not differentiate character content that is written as character references,
      CDATA sections or entered directly. So the following 
   </p>
        <pre>
          <code> &lt;test&gt;&lt;![CDATA[ ]]&gt;2&lt;/test&gt; &lt;test&gt;&amp;#160;2&lt;/test&gt;
   &lt;test&gt; 2&lt;/test&gt;</code>
        </pre>
        <p dir="ltr">
      are all equivalent. More directly if you loaded all three into an instance of <a href="http://msdn.microsoft.com/library/en-us/cpref/html/frlrfSystemXmlXmlDocumentClassTopic.asp">System.Xml.XmlDocument</a> and
      checked their InnerText property they'd all return the same result. So this reduces
      Arve's first two elements to 
   </p>
        <blockquote>
          <h4>Content in the description element
   </h4>
          <p>
      I have so far identified <strike>five</strike><font color="#ff0000">two</font> different
      variants of content in the <code>&lt;description&gt;</code> element:
   </p>
          <ol>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/desc-a.xml">
                <font color="#0000a0">HTML</font>
              </a>
            </li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/desc-d.xml">
                <font color="#0000a0">Plain
         text </font>
              </a>
            </li>
          </ol>
          <h4>&lt;content:encoded&gt;
   </h4>
          <p>
      I have encountered and identified <strike>two different ways</strike><font color="red">one
      way</font> of using <code>&lt;content:encoded&gt;</code>:
   </p>
          <ol>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/content-f.xml">Containing escaped
         HTML content</a>
            </li>
          </ol>
        </blockquote>
        <p dir="ltr">
      If your code makes any distinctions other than these then it is a sign that you have
      (a) misunderstood how to process RSS or (b) are using a crappy XML parser. When I
      first started working on <a href="http://www.rssbandit.org/">RSS Bandit</a> I also
      was confused by these distinctions but after a while things became clearer. The only
      problem here is the description element since you can't tell whether it is HTML or
      not without guessing. Since RSS Bandit always provides the content to an embedded
      web browser this isn't a problem but I can see how it could be one for aggregators
      that don't know how to process HTML (although I've never seen one before). 
   </p>
        <p dir="ltr">
      Another misunderstanding by Arve seems to be how namespaces work in XML. A
      few years ago I wrote an <a href="http://msdn.microsoft.com/library/en-us/dnexxml/html/xml05202002.asp">XML
      Namespaces and How They Affect XPath and XSLT </a>where I wrote 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
      A <a href="http://www.w3.org/TR/REC-xml-names/#dt-qname">qualified name</a>, also
      known as a <a href="http://www.w3.org/TR/REC-xml-names/#NT-QName">QName</a>, is an
      XML name called the local name optionally preceded by another XML name called the
      prefix and a colon (':') character...The prefix of a qualified name must have been
      mapped to a namespace URI through an in-scope namespace declaration mapping the prefix
      to the namespace URI. A qualified name can be used as either an attribute or element
      name. 
   </p>
          <p>
      Although QNames are important mnemonic guides to determining what namespace the elements
      and attributes within a document are derived from, they are rarely important to XML
      aware processors. For example, the following three XML documents would be treated
      identically by a range of XML technologies including, of course, XML schema validators. 
   </p>
          <pre class="code">&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"&gt;
        &lt;xs:complexType id="123" name="fooType"/&gt;
&lt;/xs:schema&gt;
</pre>
          <pre class="code">&lt;xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"&gt;
        &lt;xsd:complexType id="123" name="fooType"/&gt;
&lt;/xsd:schema&gt;
</pre>
          <pre class="code">&lt;schema xmlns="http://www.w3.org/2001/XMLSchema"&gt;
        &lt;complexType id="123" name="fooType"/&gt;
&lt;/schema&gt;
</pre>
        </blockquote>
        <p dir="ltr">
      Bearing this information in mind this reduces Arve's example to 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <h4>XHTML content
   </h4>
          <p>
      Finally, I have encountered and identified <strike>four</strike><font color="red">two</font> different
      ways in which people has specified XHTML content:
   </p>
          <ol>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/xhtml-h.xml">
                <font color="#0000a0">Using
         &lt;xhtml:body&gt;</font>
              </a>
            </li>
            <li>
              <a href="http://www.virtuelvis.com/download/rss-tests/xhtml-i.xml">
                <font color="#0000a0">Using
         &lt;xhtml:div&gt;</font>
              </a>
            </li>
          </ol>
        </blockquote>
        <p dir="ltr">
      Thus with judicious use of an XML parser (which makes sense since RSS is an XML format),
      Arve's list of eleven ways of providing content in RSS is actually whittled down
      to five. I assume Arve is unfamiliar with XML processing which led to his initial
      confusion. 
   </p>
        <p dir="ltr">
      NOTE: Before anyone bothers to start pointing out that Atom somehow frees aggregator
      author from this myriad of options I'll point out that Atom has <strong>more</strong> ways
      of encoding content than these. Even ignoring the inconsequential differences in syntactic
      sugar in XML (escaped tags vs. unescaped tags in CDATA sections) the various combinations
      of the &lt;summary&gt; and &lt;content&gt; elements, the mode attribute (escaped vs.
      xml) and MIME types (text/plain, text/html, application/xhtml+xml) more than
      double the number of variations possible in RSS. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Exploring Naked Objects</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b32b65a4-75f2-4d96-b4d4-d2ec8076d4dc</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b32b65a4-75f2-4d96-b4d4-d2ec8076d4dc</id>
    <issued>2004-03-16T09:10:46.5698750-08:00</issued>
    <modified>2004-03-16T09:10:50.0386250-08:00</modified>
    <created>2004-03-16T09:10:46.5698750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      While hanging around <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_1">TheServerSide.com</a> I
      discovered a series on <a href="http://www.nakedobjects.org/">Naked Objects.</a> It's
      an interesting idea that eschews separating application layers in GUIs (via MVC)
      or server applications (presentation/business logic/data access layers) and instead
      only coding domain model objects which then have a standard GUI autogenerated for
      them. There are currently five articles in the series which are listed below with
      my initial impressions of each article provided below. 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
            <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_1">Part
      1: The Case for Naked Objects: Getting Back to the Object-Oriented Ideal</a>
            <br />
            <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_2">Part
      2: Challenging the Dominant Design of the 4-Layer Architecture</a>
            <br />
            <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_3">Part
      3: Write an application in Java and deploy it on .Net</a>
            <br />
            <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_4">Part
      4: Modeling simultaneously in UML, Java, and User Perspectives</a>
            <br />
            <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_5">Part
      5: Fat is the new Thin: Building Rich Internet Applications with Naked Objects</a>
          </p>
        </blockquote>
        <p dir="ltr">
          <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_1">Part
      1</a> points out that in many N-tier server-side applications there are four layers;
      persistence, the domain model, the controller and presentation. The
      author points out that object-relational mapping frameworks are now popular as
      a mechanism for collapsing the domain model and persistence layer. Naked objects
      comes from the other angle and attempts to collapse the domain model, control and
      presentation layers. The article also argues that the current practices in application
      development efforts such as web services and component based architectures which
      separate data access from the domain model reduce many of the benefits of object oriented
      programming. 
   </p>
        <p dir="ltr">
      In a typical naked objects application, the framework uses reflection to determine
      the methods of an object and render them using a generic graphical user interface
      (<a href="http://www.theserverside.com/articles/content/NakedObjectSeries_1/Figure2.jpg">screenshot</a>).
      This encourages objects to be 'behaviourally complete' all significant actions
      that can be performed on the object must exist as methods on the object. 
   </p>
        <p dir="ltr">
      The author states that there are six benefits of using naked objects 
   </p>
        <ul>
          <li>
         Higher development productivity through not having to write a user interface 
      </li>
          <li>
         More maintainable systems through the enforced use of behaviourally-complete objects. 
      </li>
          <li>
         Improved usability deriving from a pure object-oriented user interface 
      </li>
          <li>
         Easier capture of business requirements because the naked objects would constitute
         a common language between developers and users. 
      </li>
          <li>
         Improved support for test-driven development</li>
          <li>
         It facilitates cross-platform development</li>
        </ul>
        <p>
      What I found interesting about the first article in the series is that the author
      rails against separating the domain model from data access layer but it seems naked
      objects are more about blending the GUI layer with the domain model. There seem
      to be some missing pieces to the article. Perhaps the implication is that one should
      use object-relational mapping technologies in combination with naked objects to collapse
      an application from 4 layers to a single 'behaviorally complete' domain
      model? 
   </p>
        <p>
          <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_2">Part
      2</a> focuses on implementing the functionality of a 4 layer application using
      naked objects. One of the authors had written a tutorial application for a book that
      which was software for running  an auto servicing shop which performed tasks
      like booking-in cars for service and billing the customer. The conclusion after
      the rewrite was that the naked objects implementation took less lines of code and
      had less classes than the previous implementation which had 4 layers. Also it took
      less time to add new functionality such as obtaining the customer's sales history
      to the application in the naked objects implementation than in the 4 layer implementation. 
   </p>
        <p>
      There are caveats, one was that the user interface was not as rich as the one
      where the developer had an explicit presentation layer as opposed to relying on a
      generic autogenerated user interface. Also complex operations such as 'undoing'
      a business action were not supported in the naked objects implementation.  
   </p>
        <p>
          <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_3">Part
      3</a> points out that if you write a naked objects implementation targetting Java
      1.1 then you can compile it using <a href="http://msdn.microsoft.com/vjsharp">J#</a> without
      modification. Thus porting from Java to .NET should be a cinch as long as you use
      only Java 1.1. Nothing new here. 
   </p>
        <p>
          <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_4">Part
      4</a> points out that naked objects encourages “code first design” which
      the authors claim is a good thing. They also point out if one really wants to get
      UML diagrams out of a naked objects application they can use tools like <a href="http://www.borland.com/together/">Together</a> which
      can generate UML from source code. 
   </p>
        <p>
      I'm not sure I agree that banging out code first and writing use cases or design documents
      afterwards is a software development methodology worth encouraging. 
   </p>
        <p>
          <a href="http://www.theserverside.com/articles/article.tss?l=NakedObjectSeries_5">Part
      5</a> trots out the old saw about rich internet applications and how much better they
      are than the limiting HTML-based browser applications. The author points out that
      with the writing a Java applet which uses the naked objects framework gives a richer
      user experience than an HTML-based application. However as mentioned in previous articles
      you could build an even richer client interface with an explicit presentation layer
      instead of relying on the generic user interface provided by the naked objects framework.  
   </p>
        <p>
      Interesting ideas. I'm not sure how well they'd scale up to building real-world applications
      but it is always good to challenge assumptions so developers don't get complacent. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Tim Bray now Works at Sun </title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=71fafd14-b326-4406-a84f-9c7ef08a1748</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=71fafd14-b326-4406-a84f-9c7ef08a1748</id>
    <issued>2004-03-15T08:35:59.3511250-08:00</issued>
    <modified>2004-03-15T09:34:48.4292500-08:00</modified>
    <created>2004-03-15T08:35:59.3511250-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      It what seems to be the strangest news story I've read this year I find out <a href="http://www.infoworld.com/article/04/03/15/HNsunxmlguru_1.html">Sun
      snatches up XML guru</a> what I found particularly interesting in the story was
      the following excerpt
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p class="ArticleBody" page="1">
      One of the areas Bray expects to work on is developing new applications for Web logs,
      or "blogs," and the RSS (Resource Description Framework Site Summary) technology that
      grew out of them. "I think that this is potentially a game-changer in some respects,
      and there are quite a few folks at Sun who share that opinion," he said. 
   </p>
          <p class="ArticleBody" page="1">
      Though RSS is traditionally thought of as a Web publishing tool, it could be used
      for much more than keeping track of the latest posts to blogs and Web sites, Bray
      said. "I would like to have an RSS feed to my bank account, my credit card, and my
      stock portfolio," he said. 
   </p>
        </blockquote>
        <p class="ArticleBody" dir="ltr" page="1">
      Personally I think it's a waste of Tim Bray's talents having him work on RSS or it's
      competitor du jour, Atom, but it should be fun seeing whether he can get Sun out of
      it's XML funk as well stop them from spreading poisonous ideas like <a href="http://java.sun.com/developer/technicalArticles/WebServices/fastWS/">replacing
      XML with ASN.1</a>.
   </p>
        <p class="ArticleBody" dir="ltr" page="1">
          <strong>Update:</strong> Tim Bray has a post about his new job entitled <a href="http://www.tbray.org/ongoing/When/200x/2004/03/15/SunnyBoy">Sunny
      Boy</a> where he writes 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p class="ArticleBody" dir="ltr" page="1">
      That aside, I’m comfy being officially a direct competitor of Microsoft. On
      the technical side, I find <strong>the APIs inelegant</strong>, the UI aesthetics
      juvenile, and the <a href="http://www.tbray.org/ongoing/When/200x/2003/05/28/CSS-IE">neglect
      of the browser</a> maddening. 
   </p>
        </blockquote>
        <p class="ArticleBody" dir="ltr" page="1">
      Sounds like fighting words. This should be fun. :) 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>The Microsoft Technical Recruiting Weblog</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=219c113c-e91c-4fc5-8331-83a9fc4fd985</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=219c113c-e91c-4fc5-8331-83a9fc4fd985</id>
    <issued>2004-03-14T20:27:39.2730000-08:00</issued>
    <modified>2004-03-14T20:27:40.5073750-08:00</modified>
    <created>2004-03-14T20:27:39.2730000-08:00</created>
  </entry>
  <entry>
    <title>The RSS Bandit Documentation Project</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=9efd2d0f-ee73-4c24-b81f-2476817c3a80</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=9efd2d0f-ee73-4c24-b81f-2476817c3a80</id>
    <issued>2004-03-14T20:02:33.8355000-08:00</issued>
    <modified>2004-03-14T20:02:35.6167500-08:00</modified>
    <created>2004-03-14T20:02:33.8355000-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      After lots of procrastination we now have <a href="http://www.rssbandit.org/docs/">online
      documentation for RSS Bandit</a>. As usual, The current table of contents is just
      a place holder and the real content is Phil Haack's <a href="http://www.rssbandit.org/docs/html/getting_started.htm">Getting
      Started with RSS Bandit</a>. The table of contents for the documentation I plan to
      write [once the MSDN XML Developer Center launches in about a week or so] is laid
      out below. 
   </p>
        <p>
        </p>
        <ul>
          <li>
         Bandit Help</li>
          <ul>
            <li>
            Getting Started 
            <ul><li>
                  What is an RSS feed?</li><li>
                  What is an Atom feed?</li><li>
                  The RSS Bandit user interface</li><li>
                  Subscribing to a feed</li><li>
                  Locating new feeds</li><li>
                  Displaying feeds</li><li>
                  Changing the web browser security settings</li><li>
                  Configuring proxy server settings</li></ul></li>
            <li>
            Using RSS Bandit from Multiple Computers 
            <ul><li>
                  Synchronization using FTP</li><li>
                  Synchronization using a dasBlog weblog</li><li>
                  Synchronization using a local or network file</li></ul></li>
            <li>
            Advanced Topics 
            <ul><li>
                  Customizing the Way Feeds Look using XSLT</li><li>
                  Creating Search Folders 
               </li><li>
                  Adding Integration with your Favorite Search Engine</li><li>
                  Building and Using RSS Bandit plugins</li></ul></li>
            <li>
            Frequently Asked Questions</li>
            <li>
            How to Give Provide Feedback</li>
            <li>
            Contributing to RSS Bandit</li>
          </ul>
        </ul>
        <p>
      If you are an <a href="http://www.rssbandit.org/">RSS Bandit</a> user I'd love to
      get your feedback
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Geekiest Wedding Proposal of All Time?</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=5114791f-6a19-46e9-8a10-6b86fc34f1fa</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=5114791f-6a19-46e9-8a10-6b86fc34f1fa</id>
    <issued>2004-03-14T19:25:56.6323750-08:00</issued>
    <modified>2004-03-14T19:35:53.8980000-08:00</modified>
    <created>2004-03-14T19:25:56.6323750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      I'm not sure which takes the cake for geekiest weeding proposal, popping  the
      question on a <a href="http://www.wired.com/news/culture/0,1284,62598,00.html">customized
      PC case</a> or on a <a href="http://www.magiclibrary.net/rarities-garfield.html">custom
      Magic: The Gathering<sup>TM</sup> card</a>. 
   </p>
        <p>
      Anyone else have some particularly geeky wedding proposals to share? 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>LiveJournal RSS Feeds Now Support HTTP Authentication</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=72e951c1-c5c3-4384-b9ea-2f4ebecef735</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=72e951c1-c5c3-4384-b9ea-2f4ebecef735</id>
    <issued>2004-03-12T18:50:45.4761250-08:00</issued>
    <modified>2004-03-12T18:50:46.2261250-08:00</modified>
    <created>2004-03-12T18:50:45.4761250-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      It is now possible to use <a href="http://www.rssbandit.org/">RSS Bandit</a> to read
      protected <a href="http://www.livejournal.com/">Live Journal</a> feeds now that
      they support HTTP authentication. Brad Fitzpatrick <a href="http://www.livejournal.com/community/lj_dev/627644.html">wrote</a></p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p dir="ltr" style="MARGIN-RIGHT: 0px">
            <strong>
              <em>
                <font face="Arial" size="4">Digest auth for RSS<br /></font>
              </em>
            </strong>Aparently this was never announced:<br /><br /><a href="http://www.livejournal.com/users/USER/data/rss?auth=digest"><font color="#0000cc">http://www.livejournal.com/users/USER/d<wbr />ata/rss?auth=digest</font></a><br /><br />
      Get RSS feeds (including protected entries) by authenticating with HTTP Digest Auth.
      Good for aggregators.<br /></p>
        </blockquote>
        <p dir="ltr" style="MARGIN-RIGHT: 0px">
      Good indeed. Given that I agitated for this in a <a href="/weblog/PermaLink.aspx?guid=1dfcbd43-cd4f-4153-b31c-3198c5c3c34e">previous
      post</a> I'd like to thank the LiveJournal folks for implementing this feature. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Better Together vs. Release Early, Release Often</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=53bbabeb-c634-4a87-9e19-5ecd8539ce3e</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=53bbabeb-c634-4a87-9e19-5ecd8539ce3e</id>
    <issued>2004-03-12T11:12:16.1792500-08:00</issued>
    <modified>2004-03-12T11:12:16.8511250-08:00</modified>
    <created>2004-03-12T11:12:16.1792500-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      I've written about this before but a recent mail from David Stutz and rumblings about
      slipped dates pushed this topic to the forefront of my mind today. If you
      have competition whose mantra is to ship "little components that can be combined together"
      and "release early, release often" is it wise to counter this with a strategy that
      involves integrating monolithic applications into even larger applications those multiplying
      the complexity and dealing with integration issues? 
   </p>
        <p>
      On the one hand, no one can argue that the success of <a href="http://www.microsoft.com/office">Microsoft
      Office</a> isn't related to the fact that it is a suite of programs that work well
      together but on the other hand as <a href="http://www.synthesist.net/writing/onleavingms.html">David
      Stutz wrote in his farewell email</a></p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
      As the quality of this software improves, there will be less and less reason to pay
      for core software-only assets that have become stylized categories over the years:
      Microsoft sells OFFICE (the suite) while people may only need a small part of Word
      or a bit of Access. Microsoft sells WINDOWS (the platform) but a small org might just
      need a website, or a fileserver. It no longer fits Microsoft's business model to have
      many individual offerings and to innovate with new application software. Unfortunately,
      this is exactly where free software excels and is making inroads. One-size-fits-all,
      one-app-is-all-you-need, one-api-and-damn-the-torpedoes has turned out to be an imperfect
      strategy for the long haul. 
   </p>
          <p class="dsBodyText">
      Digging in against open source commoditization won't work - it would be like digging
      in against the Internet, which Microsoft tried for a while before getting wise. Any
      move towards cutting off alternatives by limiting interoperability or integration
      options would be fraught with danger, since it would enrage customers, accelerate
      the divergence of the open source platform, and have other undesirable results. Despite
      this, Microsoft is at risk of following this path, due to the corporate delusion that
      goes by many names: "better together," "unified platform," and "integrated software."
      There is false hope in Redmond that these outmoded approaches to software integration
      will attract and keep international markets, governments, academics, and most importantly,
      innovators, safely within the Microsoft sphere of influence. But they won't . 
   </p>
          <p class="dsBodyText">
      Exciting new networked applications are being written. Time is not standing still.
      Microsoft must survive and prosper by learning from the open source software movement
      and by borrowing from and improving its techniques. Open source software is as large
      and powerful a wave as the Internet was, and is rapidly accreting into a legitimate
      alternative to Windows. It can and should be harnessed. To avoid dire consequences,
      Microsoft should favor an approach that tolerates and embraces the diversity of the
      open source approach, especially when network-based integration is involved. 
   </p>
        </blockquote>
        <p class="dsBodyText" dir="ltr">
      I don't agree with the general implication of David's comments but I do
      believe there is a grain of truth in what he writes. The issues aren't as black and
      white as he paints them but his opinions can't be written off either. The writing
      is definitely on the wall, I just wonder if anyone is reading it. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Hanging out at Microsoft Research and Sharing Information in RSS Bandit with Friends</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=ec44ff25-efc7-49a2-b42a-79289a2410ce</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=ec44ff25-efc7-49a2-b42a-79289a2410ce</id>
    <issued>2004-03-12T09:42:09.2261250-08:00</issued>
    <modified>2004-03-12T09:42:10.3667500-08:00</modified>
    <created>2004-03-12T09:42:09.2261250-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      I hung out with <a href="http://research.microsoft.com/~lilich/">Lili Cheng</a> on
      Tuesday and we talked about various aspects of social software and weblogging technologies.
      She showed me <a href="http://mywallop.com/">Wallop</a> while I showed her <a href="http://www.rssbandit.org/">RSS
      Bandit</a> and we were both suitably impressed by each other. She liked the fact that <a href="/weblog/content/binary/blog_conversation.GIF">in
      RSS Bandit you can view weblogs as conversations</a> while I liked the fact that unlike
      other social software I've seen Wallop embraced blogging and content syndication. 
   </p>
        <p>
      We both felt there was more to social software than projects like <a href="http://www.orkut.com/">Orkut</a> and
      she had an interesting insight; Orkut and tools like it turned the dreary process
      of creating a contact list into something fun. And that's about it. I thought
      to myself that if a tool like Outlook allowed me to create contact lists in an
      Orkut-style manner instead of the tedious process that exists today that would really
      a killer feature. She also showed me a number of other research projects created by
      the Microsoft Research <a href="http://research.microsoft.com/scg/">Social Computing
      Group</a>. The one I liked best was MSR connections which can infer the relationships
      between people based on public information exposed via Active Directory. The
      visualizations produced were very interesting and quite accurate as well.  She
      also showed me a project called Visual Summaries which implemented an idea similar
      to <a href="http://www.docuverse.com/blog/donpark/EntryViewPage.aspx?guid=6080f857-4784-4679-8e41-c6881ed933ce">Don
      Park's Friendship Circle</a> using automatically inferred information. 
   </p>
        <p>
      One of the things Lili pointed out to me about aggregators and blogging is that people
      like to share links and other information with friends. She asked about how RSS Bandit
      enables that I mentioned the ability to export feed lists to OPML and email people
      blog posts as well as the ability to invoke <a href="http://www.wbloggar.com/">w.bloggar</a> from
      RSS Bandit. This did get me to thinking that we should do more in this space. One
      piece of low hanging fruit is that users should be able to export a category in their
      feed list to OPML instead of being limited to the exporting the whole feedlist since
      they only want to share a subset of their feed. I have this problem because <a href="http://blogs.msdn.com/mfussell">my
      boss</a> has asked to try out my feed list but I've hesitated to send it to him since
      I know I subscribe to a bunch of stuff he won't find relevant. I also find some of
      the ideas in Joshua Allen's post about <a href="http://www.netcrucible.com/blog/PermaLink.aspx?guid=28c1d39a-8c12-4f47-8b8b-3dd07abfec8d">FOAF
      + De.licio.us </a> to be very interesting if you substitute browser integration
      with RSS Bandit integration. He wrote  
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
            <em>To clarify, by better browser integration I meant mostly integration with the
      de.licio.us functionality.  For example, here are some of the things I would
      like to see: </em>
          </p>
          <p style="MARGIN-LEFT: 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1">
            <em>
              <span style="FONT-FAMILY: Symbol">
                <span style="mso-list: Ignore">·<span style="FONT: 7pt 'Times New Roman'">        </span></span>
              </span> Access
      to my shared bookmarks from directly in the favorites menu of IE; and adding to favorites
      from IE automatically adds to de.licio.us (I’m aware of the bookmarklet) </em>
          </p>
          <p style="MARGIN-LEFT: 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1">
            <em>
              <span style="FONT-FAMILY: Symbol">
                <span style="mso-list: Ignore">·<span style="FONT: 7pt 'Times New Roman'">        </span></span>
              </span> When
      browsing a page, any hyperlinks in the page which are also entries in your friends’
      favorites lists would be emphasized with stronger or larger typeface </em>
          </p>
          <p style="MARGIN-LEFT: 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1">
            <em>
              <span style="FONT-FAMILY: Symbol">
                <span style="mso-list: Ignore">·<span style="FONT: 7pt 'Times New Roman'">        </span></span>
              </span> When
      browsing a page, some subtle UI cue would be given for pages that are in your friends’
      favorites lists </em>
          </p>
          <p style="MARGIN-LEFT: 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1">
            <em>
              <span style="FONT-FAMILY: Symbol">
                <span style="mso-list: Ignore">·<span style="FONT: 7pt 'Times New Roman'">        </span></span>
              </span> When
      visiting a page that is in your favorites list, you could check a toolbar button to
      make the page visible to friends only, everyone, or nobody </em>
          </p>
          <p style="MARGIN-LEFT: 0.5in; TEXT-INDENT: -0.25in; mso-list: l0 level1 lfo1">
            <em>
              <span style="FONT-FAMILY: Symbol">
                <span style="mso-list: Ignore">·<span style="FONT: 7pt 'Times New Roman'">        </span></span>
              </span> When
      visiting a page which appears in other people’s favorites, provide a way to
      get at recommendations “your friends who liked this page also liked these other
      pages”, or “your friends recommend these pages instead of the one you
      are visiting” </em>
          </p>
          <p>
            <em>I honestly think the idea becomes much more compelling when you share <span style="FONT-STYLE: italic">all</span> page
      visits, and not just favorites.  You can cluster, find people who have similar
      tastes or even people who have opposite tastes.  And the “trace paths”
      could be much more useful</em>
          </p>
        </blockquote>
        <p dir="ltr">
      Ahhh, so many ideas yet so little free time. :) 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>On Merging RSS and Atom</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=f840efa7-3871-4973-884c-d9301528c45b</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=f840efa7-3871-4973-884c-d9301528c45b</id>
    <issued>2004-03-11T08:54:36.9761250-08:00</issued>
    <modified>2004-03-11T08:54:39.7105000-08:00</modified>
    <created>2004-03-11T08:54:36.9761250-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      Dave Winer has a proposal for <a href="http://blogs.law.harvard.edu/crimson1/2004/03/08#a1243">merging
      RSS and ATOM</a>. I'm stunned. It takes a bad idea (coming up with a redundant XML
      syndication format that is incompatible with existing ones) and merges it with a worse
      idea (have all these people who dislike Dave Winer have to work with him). 
   </p>
        <p>
      After <a href="http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=67ac6fa6-1b50-480f-b73e-0000676f3497">adding
      Atom support to RSS Bandit</a> a thought crystallized in my head which had been forming
      for a while; Atom really is just another flavor of RSS with different tag names. It
      looks like I'm not the only aggregator author to come to this conclusion, Luke Huttemann
      also came to the same conclusion when describing <a href="http://www.hutteman.com/weblog/2004/02/25-165.html">SharpReader
      implementation of Atom</a>. What this means in practice is that once you've written
      some code that handles one flavor of RSS be it RSS 0.91, <a href="http://www.purl.org/rss/1.0/spec">RSS
      1.0</a>, or <a href="http://blogs.law.harvard.edu/tech/rss">RSS 2.0</a> then adding
      support for other flavors isn't that hard and they basically all have the same information
      just hidden in different tag names (pubDate vs. dc:date, admin:errorsReportsTo vs.
      webMaster, author vs. dc:creator, etc). To the average user of any popular aggregator
      there isn't any noticeable difference when subscribed to an RSS 1.0 feed
      vs. an RSS 2.0 feed or an RSS 2.0 feed vs. an  Atom feed. 
   </p>
        <p>
      And just like with RSS, aggregators will special case popular ATOM feeds with weird
      behavior that isn't described in any spec or interprets the specs in an unconventional
      manner. As Phil Ringnalda points out <a href="http://philringnalda.com/blog/2004/03/how_not_to_do_an_atomsummary.php">Blogger
      ATOM feeds claim that the summary contains XHTML when in fact they contain plain text</a>.
      This doesn't sound like a big deal until you realize that in XHTML whitespace isn't
      significant (e.g. newlines are treated as spaces) which leads to poorly formatted
      content when the aggregator displays the content as XHTML when it truth it is plain
      text. <a href="http://www.intertwingly.net/blog/index.atom">Sam Ruby's ATOM feed</a> contains
      relative links in the &lt;url&gt; and &lt;link&gt; elements but doesn't use <code>xml:base</code>.
      There is code in most aggregators to deal with weird but popular RSS feeds and it
      seems Atom is already gearing up to be the same way. Like I said, just another flavor
      of RSS. :) 
   </p>
        <p>
      As an aside I find it interesting that currently <a href="http://www.intertwingly.net/blog/index.rss2">Sam
      Ruby's RSS 2.0 feed</a> provides a much better user experience for readers than his <font color="#0000ff"><u>ATOM
      feed</u></font><font color="#003300">. The following information is in Sam's RSS feed
      but not his Atom feed </font></p>
        <ul>
          <li>
         Email address of the webmaster of the site. [who to send error reports to]</li>
          <li>
         The number of comments per entry</li>
          <li>
         An email address for sending a response to an entry</li>
          <li>
         An web service endpoint for posting comments to an entry from an aggregator</li>
          <li>
         An identifier for the tool that generated the feed</li>
          <li>
         The trackback URL of each entry</li>
        </ul>
        <p>
      What this means is that if you subscribe to Sam's RSS feed with an aggregator
      such as <a href="http://www.sharpreader.net/">SharpReader</a> or <a href="http://www.rssbandit.org/">RSS
      Bandit</a> you'll get a better user experience than if you used his Atom feed. Of
      course, Sam could easily put all the namespace extensions in his RSS feed in his Atom
      feed as well in which case the user experience subscribing to either feed would be <strong>indistinguishable.</strong></p>
        <p>
      Arguing about XML syndication formats is meaningless because the current crop that
      exist all pretty much do the same thing. On that note, I'd like to point out that
      websites that provide multiple syndication formats are quite silly. Besides confusing people
      trying to subscribe to the feed there isn't any reason to provide an XML syndication
      feed in more than one format. Particularly silly are the ones that provide both RSS
      and Atom feeds (like mine). 
   </p>
        <p>
      Blogger has it right here by providing only one feed format per blog (RSS or Atom).
      Where they screwed up is by forcing users to make the choice instead of making
      the choice for them. That's on par with asking whether they want the blog served
      up using HTTP 1.0 or HTTP 1.1. I'm sure there are some people that care but for the
      most part it is a pointless technical question to shove in the face of your users. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Generics, Parametric Polymorphism and Statically Typed Languages Like C# and Java</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=ec2608d8-3ca6-4dcc-a756-3023859ff94b</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=ec2608d8-3ca6-4dcc-a756-3023859ff94b</id>
    <issued>2004-03-11T07:43:52.6323750-08:00</issued>
    <modified>2004-03-11T07:43:56.2261250-08:00</modified>
    <created>2004-03-11T07:43:52.6323750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      I just read a post by Bruce Eckel entitled <a href="http://mindview.net/WebLog/log-0050">Generics
      Aren't</a> where he writes 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
      My experience with "parameterized types" comes from C++, which was based on ADA's
      generics... In those languages, when you use a type parameter, that parameter takes
      on a <i>latent</i> type: one that is implied by how it is used, but never explicitly
      specified.
   </p>
          <p>
      In C++ you can do the equivalent: 
   </p>
          <pre>class Dog {
public:
  void talk() { }
  void reproduce() { }
};

class Robot {
public:
  void talk() { }
  void oilChange() { }
};

template&lt;class T&gt; void speak(T speaker) {
  speaker.talk();
}

int main() {
  Dog d;
  Robot r;
  speak(d);
  speak(r);
}
</pre>
          <p>
      Again, <code>speak()</code> doesn't care about the type of its argument. But it still
      makes sure – at compile time – that it can actually send those messages.
      But in Java (and apparently C#), you can't seem to say "any type." The following won't
      compile with JDK 1.5 (note you must invoke the compiler with the <code>source -"1.5" </code>flag
      to compile Java Generics): 
   </p>
          <pre>public class Communicate  {
  public &lt;T&gt; void speak(T speaker) {
    speaker.talk();
  }
}
</pre>
          <p>
      However, this <i>will:</i></p>
          <pre>
            <code>public class Communicate { public &lt;T&gt; void speak(T speaker) {
   speaker.toString(); // Object methods work! } }</code>
          </pre>
          <p>
      Java Generics use "erasure," which drops everything back to <code>Object</code> if
      you try to say "any type." So when I say <code>&lt;T&gt;</code>, it doesn't really
      mean "anything" like C++/ADA/Python etc. does, it means "Object." Apparently the "correct
      Java Generic" way of doing this is to define an interface with the speak method in
      it, and specify that interface as a constraint. this compiles: 
   </p>
          <p>
      interface Speaks { void speak(); }<br /><br />
      public class Communicate  {<br />
        public &lt;T extends Speaks&gt; void speak(T speaker) {<br />
          speaker.speak();<br />
        }<br />
      }<br /></p>
          <p>
      What this says is that "<code>T</code> must be a subclass or implementation of <code>Speaks</code>."
      So my reaction is "If I have to specify a subclass, why not just use the normal extension
      mechanism and avoid the extra clutter and confusion?" 
   </p>
          <p>
      You want to call it "generics," fine, implement something that looks like C++ or Ada,
      that actually produces a latent typing mechanism like they do. But don't implement
      something whose sole purpose is to solve the casting problem in containers, and then
      insist that on calling it "Generics."
   </p>
        </blockquote>
        <p dir="ltr">
      Although Bruce didn't confirm whether the above limitation exist in the C# implementation
      of generics he is right that they have the same limitations as Java generics. The
      article <a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_vstechart/html/csharp_generics.asp">An
      Introduction to C# Generics </a> on MSDN describes the same limitations
      Bruce encountered with Java generics and shows how to work around them using
      constraints as Bruce discovered. If you read the problem statement described in the
      article on MSDN it seems the main goal of C# generics is to solve the casting problem
      in containers. 
   </p>
        <p dir="ltr">
      What I find interesting about Bruce's post is the implication that to properly implement
      generics one most provide <a href="http://www.rubygarden.org/ruby?DuckTyping">duck
      typing</a>. I've always thought the behavior of templates in C++ was weird in that
      one could pass in a parameter and not enforce constraints on the behavior
      of the type. Yet it isn't really dynamic or latent typing because there is compile
      time checking to see if the type supports those methods or operations. 
   </p>
        <p dir="ltr">
      A few years ago I wrote an article entitled <a href="http://www.kuro5hin.org/story/2001/3/7/175022/2820">C++
      in 2005: Can It Become A Java Beater? </a> in which I gave some opinions on an <a href="http://www.linuxworld.com/story/32929.htm">interview
      with Bjarne Stroustrup</a> where he discussed various language features he'd like
      to see in C++. One of those features was constraints on template arguments, below
      is an excerpt from my article on this topic 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p dir="ltr">
            <strong>Constraints for template arguments<br /><br /></strong>Bjarne: <i>This can be simply, generally, and elegantly expressed in C++
      as is. </i><br /><br />
      Templates are a C++ language facility that enable <a href="http://citeseer.nj.nec.com/musser89generic.html">generic
      programming</a> via <a href="http://www.pmg.lcs.mit.edu/papers/thetaref/node8.html">parameteric
      polymorphism</a>. The principal idea behind generic programming is that many functions
      and procedures can be abstracted away from the particular data structures on which
      they operate and thus can operate on any type. 
      <br /><br />
      In practice, the fact that templates can work on any type of object can lead to unforeseen
      and hard to detect errors in a program. It turns out that although most people like
      the fact that template functions can work on many types without the data having to
      be related via inhertance (unlike Java), there is a clamor for a way to specialize
      these functions so that they only accept or deny a certain range of types. 
      <br /><br />
      The most common practice for constraining template arguments is to have a <code>constraints()</code> function
      that tries to assign an object of the template argument class to a specified base
      class's pointer. If the compilation fails then the template argument did not meet
      the requirements. 
   </p>
        </blockquote>
        <p dir="ltr">
      The point I'm trying to get at is that both C++ users and its inventor felt that the being
      able to constrain the operations you could perform on the parameterized type
      as opposed to relying on duck typing was a desirable feature. 
   </p>
        <p dir="ltr">
      The next thing I want to point out is that Bruce does mention that generic programming
      in C++ was based on Ada's generics so I decided to spend some time reading up on them
      to see if they also supported duck typing. I read <a href="http://www.it.bton.ac.uk/staff/je/adacraft/ch12.htm">Chapter
      12</a> of the book <a href="http://www.it.bton.ac.uk/staff/je/adacraft/contents.htm">Ada
      95: The Craft of Object-Oriented Programming</a> where we learn 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
      In the case of a linked list package, we want a linked list of any type. Linked lists
      of arrays, records, integers or any other type should be equally possible. The way
      to do this is to specify the item type in the package declaration as <b>private</b>,
      like this:
   </p>
          <pre>    generic
        type Item_Type is private;
    package JE.Lists is
        ...
    end JE.Lists;
</pre>
          <p>
            <font color="#ff0000">The only operations that will be allowed in the package body
      are those appropriate to private types, namely assignment (:=) and testing for equality
      and inequality (= and /=).</font> When the package is instantiated, any type that
      meets these requirements can be supplied as the actual parameter. This includes records,
      arrays, integers and so on; the only types excluded are limited types...
   </p>
          <p>
      As you can see, the way you declare your generic type parameters puts restrictions
      on what operations you can perform on the type inside the package as well as what
      types you can supply as parameters. Specifying the parameter as ‘range &lt;&gt;’
      allows the package to use all the standard operations on integer types but restricts
      you to supplying an integer type when you instantiate the package. Specifying the
      parameter as ‘private’ gives you greater freedom when you instantiate
      the package but reduces the range of operations that you can use inside the package
      itself. 
   </p>
        </blockquote>
        <p dir="ltr">
      So it looks like Ada gave you two options, neither of which look like what you can
      do in C++. You could either pass in any type then the only operations allowed on the
      type were equality and assignment or you could pass in a constrained type. Thus it
      doesn't look like Ada generics had the weird mix of static and duck typing that C++
      templates have. 
   </p>
        <p dir="ltr">
      I am as disappointed as Bruce that neither C# nor Java support dynamic typing like
      languages such as Python or Smalltalk but I don't think parametric polymorphism
      via generics has ever been used to solve this problem. As I have pointed out
      neither Ada nor C++ actually give him the functionality he wants so I wouldn't
      be too hard on Java or C# if I was in his shoes. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>On Thought Leadership in the Java and .NET Developer Communities</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=4c93ead0-e175-4e3e-b33f-ae94493bb3af</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=4c93ead0-e175-4e3e-b33f-ae94493bb3af</id>
    <issued>2004-03-10T11:18:50.9448750-08:00</issued>
    <modified>2004-03-10T11:18:50.9448750-08:00</modified>
    <created>2004-03-10T11:18:50.9448750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      Sam Ruby <a href="http://www.intertwingly.net/blog/1731.html">writes</a></p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
       <a href="http://www.sauria.com/blog/2004/03/09#852"><font color="#0000cc">Ted
      Leung</font></a>: <em>If I'm looking for thought leadership from the community, in
      the Java community, I'm looking towards the non Sun bloggers -- these are the folks
      doing AOP, Groovy, SGen, Prevalence, WebWork, etc. This shows the rich ecosystem that
      has grown up around Java. If I look at the .NET community, I pretty much look for
      the MS bloggers.</em></p>
          <p xmlns="http://www.w3.org/1999/xhtml">
      Let's not confuse cause and effect here.  There used to be plenty of .Net bloggers
      who didn't work for Microsoft. 
   </p>
        </blockquote>
        <p dir="ltr" xmlns="http://www.w3.org/1999/xhtml">
      It seems Sam and Ted have different ideas of what thought leadership is from me. When
      I think of thought leadership I think of ideas that add to the pool of common
      practices or impact the way developers work and think. Examples of thought
      leadership are the ideas in the GoF's <a href="http://www.amazon.com/exec/obidos/ASIN/0201633612/qid=1078945203/">Design
      Patterns</a> or the writings of <a href="http://www.joelonsoftware.com/">Joel Spolsky</a>. 
   </p>
        <p dir="ltr" xmlns="http://www.w3.org/1999/xhtml">
      I read a lot of blogs from Microsoft and non-Microsoft people about .NET development
      and I see more thought leadership from non-Microsoft people than I do from Microsoft
      people. What I see from Microsoft people is what I'll term <em>accidental thought
      leadership</em>. Basically if I'm the developer or PM that designed or implemented
      component X then it stands to reason that I'm better placed to talk about it than
      others. Similarly if I'm one of the folks designing or implementing future technology
      Y then it stands to reason I'd be the best placed to talk about Longhorn/Indigo/Avalon/WinFS/Whidbey/Yukon/etc.
      Also the other thing is that it more interesting to read about upcoming future
      technology than it is to read about how best to use existing technology
      which is why people tend to flock to the blogs of the folks working on future stuff
      and ignore the Microsoft bloggers talking about existing technologies until they need
      a workaround for some bug.
   </p>
        <p dir="ltr" xmlns="http://www.w3.org/1999/xhtml">
      Personally, the only real thought leadership I've seen from the 200 or so
      Microsoft blogs I've read have come from folks like <a href="http://blogs.gotdotnet.com/emeijer/">Erik
      Meijer</a> and <a href="http://www.gotdotnet.com/team/dbox/">Don Box</a>. I see a
      lot of Microsoft people blogging about SOA but to me most of them are warmed over
      ideas that folks like Pat Helland have been talking about for years. When I think
      of thought leadership in the .NET world I'm more likely to think of <a href="http://samgentile.com/blog/">Sam
      Gentile</a> or <a href="http://staff.newtelligence.net/clemensv/">Clemens Vastersr</a> than
      I am to think of some blue badge carrying employee at the Redmond campus.  
   </p>
        <p dir="ltr" xmlns="http://www.w3.org/1999/xhtml">
      What I do find interesting is that a Sun employee, <a href="http://www.webmink.net/2004_03_07_oldblog.htm#107889853142342880">Simon
      Phipps</a>, is actually trying to use this to score points and claim that the
      lack of Sun bloggers with insightful posts is due to a "wide community as you'd expect
      from the openness of the JCP". When Microsoft folks weren't blogging and directly
      interacting with our developer community people railed because they felt the company
      was aloof and distant from its developers. Now we try to participate more and it is
      a sign that “it's a closed-source <a href="http://www.intertwingly.net/blog/1731.html">dictatorship</a> -
      no amount of <a href="http://radio.weblogs.com/0001011/2004/03/09.html#a6954">pushing
      up-hill</a> will fix that”. I guess you can't win them all. :)  
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>A Look Behind the Scenes at Real Networks</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=9a39c9d1-8d6f-4cd9-8c00-6b48bbe20451</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=9a39c9d1-8d6f-4cd9-8c00-6b48bbe20451</id>
    <issued>2004-03-09T15:03:31.0182500-08:00</issued>
    <modified>2004-03-09T15:03:32.1901250-08:00</modified>
    <created>2004-03-09T15:03:31.0182500-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      I recently started using <a href="http://www.realplayer.com/">Real Player</a> again
      after a few years of not using it and it does seem a lot less user hostile. It seems
      that this is the result of some internal turmoil at Real Networks. Below are links
      to some interesting readings about behind the scenes at Real and how it ended up affecting
      their product
   </p>
        <ul>
          <li>
            <a href="http://jogin.com/weblog/archives/000504/">Real Obnoxious</a>
          </li>
          <li>
            <a href="http://jogin.com/weblog/archives/000513/">Real Reply</a>
          </li>
          <li>
            <a href="http://jogin.com/weblog/archives/000515/">Real Proof</a>
          </li>
        </ul>
        <p>
      This seems to have been making the rounds in a couple of popular blogs. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>On The Upcoming XML Developer Center on MSDN</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=35121198-5d20-4546-8f9b-0c3c1d55ab22</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=35121198-5d20-4546-8f9b-0c3c1d55ab22</id>
    <issued>2004-03-09T07:39:46.3307500-08:00</issued>
    <modified>2004-03-09T07:39:47.3151250-08:00</modified>
    <created>2004-03-09T07:39:46.3307500-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      MSDN has a number of <a href="http://msdn.microsoft.com/developercenters/">Developer
      Centers</a> for key developer topics such as <a href="http://msdn.microsoft.com/webservices/">XML
      Web Services</a> and <a href="http://msdn.microsoft.com/vcsharp/">C#</a>. There are
      also node home pages for lesser interesting [according to MSDN] topics such as <a href="http://msdn.microsoft.com/scripting/default.asp">Windows
      Scripting Host</a> or <a href="http://msdn.microsoft.com/sqlxml/">SQLXML</a>. Besides
      the fact that developer centers are highlighted more prominently on MSDN as key topics
      the main differences between the developer centers and the node home pages are 
   </p>
        <ol>
          <li>
            <p>
            Developer Centers have a snazzier look and feel than node home pages. 
         </p>
          </li>
          <li>
            <p>
            Developer Centers have an RSS feed. 
         </p>
          </li>
          <li>
            <p>
            Developer Centers can pull in blog content (e.g. <a href="http://msdn.microsoft.com/vcsharp/">Duncan
            Mackenzie's blog on the C# Developer Center</a>)
         </p>
          </li>
        </ol>
        <p>
      I've been working on getting a Developer Center on MSDN that provides a single place
      for developers to find out about XML technologies and products at Microsoft for about
      a year or more. The Developer Center is now about two weeks from being launched.
      There are only two questions left to answer. 
   </p>
        <p>
      The first question is what the tagline for the Developer Center should be. Examples
      of existing taglines are 
   </p>
        <ul>
          <li>
            <p>
            Microsoft Visual C# Developer Center: An innovative language and tool for building
            .NET-connected solutions
         </p>
          </li>
          <li>
            <p>
            Data Access and Storage Developer Center: Harnessing the power of data
         </p>
          </li>
          <li>
            <p>
            Web Services Developer Center: Connecting systems and sharing information
         </p>
          </li>
          <li>
            <p>
            .NET Architecture Developer Center: Blueprint for Success
         </p>
          </li>
        </ul>
        <p>
      I need something similar for the XML Developer Center but my mind's been drawing a
      blank. My two top choices are currently “The language of information interchange”
      or “Bridging gaps across platforms with the ubiqitous data format”. In
      my frivilous moments, I've also considered “Unicode + Angle Brackets = Interoperability”.
      Any comments on which of the three taglines I have in mind sounds best or suggestions
      for taglines would be much appreciated. 
   </p>
        <p>
      The second issue is how much we should talk about unreleased technologies. I personally
      dislike talking about technologies before they ship because history has taught me
      that projects slip or get cut when you least expect them to do so. For example, when
      I was first hired fulltime at Microsoft about two years ago we were working on <a href="http://www.w3.org/TR/xquery/">XQuery</a> which
      was supposed to be in version 2.0 of the .NET Framework. At the time the assumption
      was that they'd both (XQuery &amp; the next version of the .NET Framework) be done
      by the end of 2003. It is now 2004 and it is optimistic to expect that either XQuery
      or the next version of the .NET Framework will both be done at the end of this year.
      If we had gone off our initial assumptions and started writing about XQuery and the
      classes we were designing for the .NET Framework (e.g. <a href="http://longhorn.msdn.microsoft.com/lhsdk/ref/ns/system.xml.query/%20c/xqueryprocessor/xqueryprocessor.aspx">XQueryProcessor</a> )
      in 2002 and 2003 on MSDN then we'd currently have a number of outdated and incorrect
      articles on MSDN. On the other hand this does mean that while you won't find articles
      on XQuery on MSDN you do find articles like <a href="http://www-106.ibm.com/developerworks/xml/library/x-xquery.html">An
      Introduction to XQuery</a>, <a href="http://www-106.ibm.com/developerworks/xml/library/x-xdxqry.html">XML
      for Data: An early look at XQuery</a> ,<a href="http://otn.oracle.com/oramag/oracle/03-may/o33devxml.html">X
      is for XQuery</a>, and <a href="http://otn.oracle.com/oramag/oracle/04-jan/o14dev_xml.html">XQuery
      Tricks and Traps </a> on the developer websites of our competitors like IBM and
      Oracle. All four of those articles contain information that is either outdated or
      will be outdated when the W3C is done with the XQuery recommendation. However they
      do provide developers with a glimpse and an understanding of the fundamentals of XQuery. 
   </p>
        <p>
      The question I have is whether it would be valuable for our developers if we wrote
      articles about technologies that haven't shipped and whose content may differ from
      what we actually ship? Other developer centers on MSDN have decided to go this route
      such as the <a href="http://msdn.microsoft.com/longhorn/">Longhorn Developer Center</a> and <a href="http://msdn.microsoft.com/webservices/">Web
      Services Developer Center</a> which regularly feature content that is a year or more
      away from shipping. I personally think this is unwise but I am interested in what
      the Microsoft developer community thinks of providing content about upcoming releases
      versus focusing on existing releases. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>From the Creators of Halo Comes...</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=195aa5d6-36f1-427b-96cf-e36c8a140f14</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=195aa5d6-36f1-427b-96cf-e36c8a140f14</id>
    <issued>2004-03-08T23:38:13.3776250-08:00</issued>
    <modified>2004-03-08T23:38:14.4245000-08:00</modified>
    <created>2004-03-08T23:38:13.3776250-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      ...<a href="http://www.bungie.com/products/pimps/pimpsatsea.htm">Pimps at Sea</a>. 
   </p>
        <p>
      Thanks to <a href="http://www.hulver.com/scoop/story/2004/2/25/5648/27212">Thaddeus
      Frogley</a> for the link.
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>My Short-Lived Fling With PubSub.com</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=99956321-b669-468f-9f61-e8bd579d45e7</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=99956321-b669-468f-9f61-e8bd579d45e7</id>
    <issued>2004-03-08T23:32:25.7682500-08:00</issued>
    <modified>2004-03-08T23:32:26.7838750-08:00</modified>
    <created>2004-03-08T23:32:25.7682500-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
          <a href="http://www.rssbandit.org/">RSS Bandit</a> provides users with the ability
      to perform searches from its toolbar and view the results in the same UI used for
      reading blogs if the results can be viewed as an RSS feed. This integration is provided
      for <a href="http://www.feedster.com/">Feedster</a> searches and I was considering
      adding other blog search engines to the default. <a href="http://www.rendelmann.info/blog/">Torsten</a> had
      given me a RSS link to some search results on PubSub and they seemed to be better
      than Feedster in some cases. So this evening I decided to try out <a href="http://www.pubsub.com/weblogs/">PubSub's
      weblog search</a> and see if there was a way to provide similar integration with
      RSS Bandit. Unfortunately, it turns out that one has to provide them
      with an email address before you can perform searches. 
   </p>
        <p>
      I guess they aren't in a rush to have any users. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Staged Beefs and Faked Reality TV Shows</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=5cd1bae4-4519-4bd2-9c8d-47a2c0132ab5</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=5cd1bae4-4519-4bd2-9c8d-47a2c0132ab5</id>
    <issued>2004-03-08T23:22:30.9870000-08:00</issued>
    <modified>2004-03-08T23:22:30.9870000-08:00</modified>
    <created>2004-03-08T23:22:30.9870000-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      I always thought that dis records created by dueling MCs over conjured up beefs designed
      to sell records (e.g. the <a href="http://www.mtv.com/bands/n/nas/news_feature_012102/">Nas
      vs. Jay-Z beef</a>) I was surprised to find out that the same thing now happens with
      R&amp;B songs. From an article on MTV.com entitled <a href="http://www.mtv.com/news/articles/1485538/20040303/eamon.jhtml?headlines=true">That
      Eamon Dis Track? Ho-Wopper Now Claims He Was Behind It </a>we read 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p dir="ltr" style="MARGIN-RIGHT: 0px">
            <span class="copyStory">
              <span class="bioLong">The beef between R&amp;B singer Eamon
      and his so-called ex-girlfriend, Frankee, continues to heat up on radio, as stations
      across the country follow up his hit "F--- It (I Don't Want You Back)" with her dis
      track, "FU Right Back." Frankee's song, which uses the exact same music as "F--- It
      (I Don't Want You Back)," calls Eamon out as being lousy in bed, having pubic lice
      and generally sucking as a boyfriend. And Eamon loves every word. In fact, he claims
      he approved the song before the public even heard it.<br /><br />
      Not only does he say Frankee was never his girl, he said she was handpicked by his
      staff to record a response to "F--- It  (I Don't Want You Back)" in order to
      create the illusion of a feud (see <a href="http://www.mtv.com/news/articles/1485501/03022004/eamon.jhtml">"Eamon's
      Alleged Old Flame Burns Him With Dis Track"</a>). "There was a big tryout, and I actually
      know some of the girls who wanted to do the song, but I never met Frankee in my life,"
      Eamon said. "I think it's corny to death, but it's funny."<br /></span>
            </span>
          </p>
        </blockquote>
        <p dir="ltr" style="MARGIN-RIGHT: 0px">
          <span class="copyStory">
            <span class="bioLong">I've listened to both songs, Eamon's
      is the better record although Frankee's version is kind of peppy. </span>
          </span>
        </p>
        <p dir="ltr" style="MARGIN-RIGHT: 0px">
          <span class="copyStory">
            <span class="bioLong">Speaking of faked endings there's the
      article I read this afternoon on Yahoo! about <a href="http://story.news.yahoo.com/news?tmpl=story&amp;cid=597&amp;ncid=772&amp;e=8&amp;u=/nm/20040308/tv_nm/television_lastcomic_dc">the
      finalists on the reality show 'Last Comic Standing' were pre-picked</a> which
      has caused some of the judges such as Drew Carey and Brett Butler to fire barbs at
      NBC. Brett Butler claimed "<em>As panel judges, we can say that (a) we were both surprised
      and disappointed at the results and (b) we had NOTHING to do with them</em>". It seems
      there was some fine print which indicated that the judges where just there for window
      dressing and the finalists were pre-picked. I guess this just goes to show you that
      you should always read the fine print. </span>
          </span>
        </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>On Software Patents</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b0e91e95-e232-42f8-865f-4e1a2a993b61</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b0e91e95-e232-42f8-865f-4e1a2a993b61</id>
    <issued>2004-03-07T10:26:42.9088750-08:00</issued>
    <modified>2004-03-07T12:02:16.2213750-08:00</modified>
    <created>2004-03-07T10:26:42.9088750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      There's currently a semi-interesting discussion about software patents on the XML-DEV
      mailing list sparked by a post by Dennis Sonoski entitled <a href="http://lists.xml.org/archives/xml-dev/200403/msg00142.html">W3C
      Suckered by Microsoft</a> where he rants angrily about why Microsoft is evil
      for not instantly paying $521 million dollars to Eolas and thereby starting
      a patent reform revolution. There are some interesting viewpoints voiced in the ensuing
      thread including <a href="http://lists.xml.org/archives/xml-dev/200403/msg00148.html">Tim
      Bray's suggestion</a> that Microsoft pay Tim Berners-Lee $5 million for arguing against
      the Eolas patent. 
   </p>
        <p>
      The thread made me think about what my position on filing software patents was given
      the vocal opposition to them on some online fora. I recently have gotten involved
      in patent discussions at work and I jotted down my thought processes as I was deciding
      whether filing for patents was a good idea or not. Belows are the pros and cons of
      filing for patents from my perspective in the trenches (so to speak). 
   </p>
        <p>
          <strong>PRO</strong>
        </p>
        <ol>
          <li>
         Having a patent or two on your resume is a nice ego and career boost. 
      </li>
          <li>
         As a shareholder at Microsoft it is in my best interests to file patents which allow
         the company defend itself from patent suits and reap revenue from patent licencing. 
      </li>
          <li>
         The modest financial incentive we get for filing patents would make for buying a few
         rounds of drinks with friends. 
      </li>
        </ol>
        <p>
          <strong>CON</strong>
        </p>
        <ol>
          <li>
         Filing patents involve having meetings with lawyers. 
      </li>
          <li>
         Patents are very political because you don't want to snub anyone who worked on the
         idea but also don't want to cheapen them by claiming that people who were peripherally
         involved were co-inventers. For example, is a tester who points out a design flaw
         in an idea now one of the co-inventers if it was a fundamental flaw?  
      </li>
          <li>
         There's a very slight chance that <a href="http://www.slashdot.org/">Slashdot</a> runs
         an article about a particular patent claiming that it is another evil plot by Microsoft.
         The fact that it is a slight chance is that the ratio of Slashdot articles about patents
         to those actually filed is quite small. 
      </li>
        </ol>
        <p>
      That was my thought process as I sat in on some patent meetings. Basically there is
      a lot of incentive to file patents for software innovations if you work for a company
      that can afford to do so. However the measure of degree of innovation is in the eye
      of the beholder [and up to prior art searches]. 
   </p>
        <p>
      I've seen a number of calls for patent reform for software but not any that have any
      feasible or concrete proposals behind them. Most of the proponents of patent reform
      I've seen usually argue something akin to “Some patent that doesn't seem innovative
      to me got granted so the system needs to be changed“. How the system should
      be changed and whether the new system will not have problems of its own are left as
      excercises for the reader. 
   </p>
        <p>
      There have been a number of provocative writings about patent reform, the
      most prominent in my memory being the FSF's <a href="http://www.gnu.org/philosophy/patent-reform-is-not-enough.html">Patent
      Reform Is Not Enough</a> and <a href="http://www.oreilly.com/news/amazon_patents.html">An
      Open Letter From Jeff Bezos On The Subject Of Patents</a>. I suspect that the changes
      suggested by Jeff Bezos in his open letter do a good job of straddling the line between
      those who want do away with software and business method patents and those that
      want to protect their investment. 
   </p>
        <p>
          <em>
            <strong>Disclaimer:</strong> The above statements are my personal opinions
      and do not represent my employer's view in anyway.</em> 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Some Thoughts on HP's Blog Epidemic Analyzer</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=e3720c51-b90a-49e5-b1e9-15d2d157a096</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=e3720c51-b90a-49e5-b1e9-15d2d157a096</id>
    <issued>2004-03-07T09:22:33.6588750-08:00</issued>
    <modified>2004-03-07T09:22:34.2370000-08:00</modified>
    <created>2004-03-07T09:22:33.6588750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      As pointed out in a recent Slashdot article some researchers at HP Labs have come
      up with what they have termed a <a href="http://www-idl.hpl.hp.com/blogstuff/index.html">Blog
      Epidemic Analyzer</a> which aims to “track how information propagates through
      networks. Specifically...how web based memes get passed on from one user to another
      in blog networks“. It sounds like an interesting idea, it would be cool to know
      who the first person to send out links about <a href="http://www.planettribes.com/allyourbase/index.shtml">All
      Your Base Are Belong To Us</a> or <a href="http://www.ikissyou.org/famous_site.html">I
      Kiss You</a>. I can also think of more serious uses of being able to track down the
      propagation of particular links across the World Wide Web.
   </p>
        <p>
      Unfortunately, it seems the researchers behind this are either being myopic or have
      to justify the cost of their research to their corporate masters by trying to compare
      what they've done to Google. From the  <a href="http://www-idl.hpl.hp.com/blogstuff/faq.html">Blog
      Epidemic Analyzer FAQ</a></p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <p>
            <strong>2. What's the point?</strong>
          </p>
          <p>
      There has been a lot of discussion over the fairness of blogs, powerlaws, and A-list
      bloggers (You can look at the discussion on <a href="http://www.corante.com/many/" target="newwin">Many2Many</a> for
      some of the highlights). The reality is that some blogs get all the attention. This
      means that with ranking algorithms like Technorati's and Google's Page Rank highly
      linked blogs end up at the top of search pages. Sometimes (maybe frequently) this
      is what you want. However, it is also possible that you don't want the most connected
      blog. Rather you would like to find the blog that discovers new information first. 
   </p>
        </blockquote>
        <p dir="ltr">
      The above answer makes it sound like these guys have no idea what they are talking
      about. Google and Technorati do vastly different things. The fact that Google's search
      engine lists highly linked blogs at the top of search results that they are tangentially
      related to is <b>a bug</b>. For example, the fact that <a href="http://www.russellbeattie.com/notebook/1006578.html">a
      random post</a> by Russell Beattie about a company now makes him the fifth result
      that comes up for a search for that comapny in Google isn't a feature, it's a bug.
      The goal of Google (and all search engines) is to provide the most relevant results
       for a particular search term. In the past, tying relevance to popularity was
      a good idea but with the advent of weblogs and the noise they've added to the World
      Wide Web this is becoming less and less of a good idea. Technorati on the other hand
      has one express purpose, measuring weblog popularity based on incoming links. 
   </p>
        <p dir="ltr">
      The HP iRank algorithm would be a nice companion piece to things like Technorati and <a href="http://www.blogpulse.com/">BlogPulse</a> but
      comparing it to Google seems like a stretch. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>RSS Bandit Breaks Language Barriers</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b7bf027b-a3a8-4b34-8745-add32f23fb8e</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=b7bf027b-a3a8-4b34-8745-add32f23fb8e</id>
    <issued>2004-03-06T16:56:10.1276250-08:00</issued>
    <modified>2004-03-07T08:53:33.0651250-08:00</modified>
    <created>2004-03-06T16:56:10.1276250-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      Torsten just finished creating a <a href="http://www.rendelmann.info/blog/PermaLink.aspx?guid=254813ae-fbde-4012-a4c4-ac6c3665da22">German
      version of RSS Bandit</a>. This should make it into the next release which should
      please our various German users. As Torsten mentioned we are looking for volunteers
      to do other languages. We will need at least two volunteers per language so that there
      can be some degree of error checking and the like. 
   </p>
        <p>
      To get started with translating RSS Bandit, <strike>only one file</strike><font color="red">a
      number of files</font> need translating and these include <a href="http://cvs.sourceforge.net/viewcvs.py/rssbandit/CurrentWork/Source/RssBandit/Resources/RSSBanditText.resx">RSSBanditText.resx</a>, <a href="http://cvs.sourceforge.net/viewcvs.py/rssbandit/CurrentWork/Source/RssBandit/WinGui/Forms/">the
      resource files for the main GUI</a>, and <a href="http://cvs.sourceforge.net/viewcvs.py/rssbandit/CurrentWork/Source/RssBandit/WinGui/Dialogs/">the
      resource files for the various dialog boxes</a>. An example of a translated <strike>version
      of that</strike> document is Torsten's German translation; <a href="http://cvs.sourceforge.net/viewcvs.py/rssbandit/CurrentWork/Source/RssBandit/Resources/RSSBanditText.de.resx">RSSBanditText.de.resx</a>. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>What Did the Five Fingers Say to the Face?</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=2a33989c-f359-4373-84ab-921a3b6e184f</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=2a33989c-f359-4373-84ab-921a3b6e184f</id>
    <issued>2004-03-06T16:26:11.0338750-08:00</issued>
    <modified>2004-03-06T16:26:12.2526250-08:00</modified>
    <created>2004-03-06T16:26:11.0338750-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      Folks at work have been cracking up about the Rick James skit on a recent episode
      of the <a href="http://www.davechapelle.com/chappelles-show.htm">Dave Chapelle show</a>.
      Linked below are two video clips from the show. Pure comic genius. 
   </p>
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
          <div align="left">
            <p>
              <strong>
                <em>Chappelle's Show: MORE of Charlie Murphy's True Hollywood Stories</em>
              </strong>
            </p>
            <p>
              <em>
                <strong>Rick James </strong>asks the philosophical question “What did the
         five fingers say to the face?” in this all-new </em>
              <a href="rtsp://a1703.v9950f.c9950.g.vr.akamaistream.net/ondemand/7/1703/9950/v001/comedystor.download.akamai.com/9951/chappelle/204_rickjames2_300.rm">
                <em>Charlie
         Murphy-inspired clip</em>
              </a>
              <em>. 
         <br /><br />
         Eddie Murphy's brother Charlie tells the tale of <strong>Rick James</strong>: </em>
              <a href="rtsp://a1703.v9950f.c9950.g.vr.akamaistream.net/ondemand/7/1703/9950/v001/comedystor.download.akamai.com/9951/chappelle/204_rickjames_300.rm">
                <em>Habitual
         line-stepper.</em>
              </a>
            </p>
          </div>
        </blockquote>
        <p dir="ltr">
      You will need to download <a href="http://www.real.com/freeplayer/?rppr=rnwk">RealPlayer</a> to
      view the video clips. Speaking of which it seems Real Player is much improved from
      the last time I used a couple of years ago. 
   </p>
      </body>
    </content>
  </entry>
  <entry>
    <title>Tax Season</title>
    <link>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=27938b27-2c74-45d8-a459-5f452f465742</link>
    <id>http://www.25hoursaday.com/weblog/PermaLink.aspx?guid=27938b27-2c74-45d8-a459-5f452f465742</id>
    <issued>2004-03-06T16:07:07.0807500-08:00</issued>
    <modified>2004-03-06T16:07:07.0807500-08:00</modified>
    <created>2004-03-06T16:07:07.0807500-08:00</created>
    <content type="text/html" mode="xml">
      <body xmlns="http://www.w3.org/1999/xhtml">
        <p>
      For the past few years I've had my taxes done by <a href="http://www.hrblock.com/">H
      &amp; R Block</a> and each year their prices get steeper. This year the price
      tag would have been a bit shy of $200. Considering that all the tax preparer did was
      enter some values into some fields after being prompted by the tax preparation software
      that seemed a bit steep. A couple of folks have recommended <a href="http://www.turbotax.com/index.php">TurboTax</a> so
      I've decided to give it a try this year. At a cost of about $30, it seems this year
      I'll not have the ripped of feeling I usually do after filing my taxes. 
   </p>
        <p>
       
   </p>
      </body>
    </content>
  </entry>
</feed>