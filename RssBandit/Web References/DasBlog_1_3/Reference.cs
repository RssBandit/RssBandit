//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.0.3705.288.
// 
namespace RssBandit.DasBlog_1_3 {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ConfigEditingServiceSoap", Namespace="urn:schemas-newtelligence-com:dasblog:config-services")]
    public class ConfigEditingService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ConfigEditingService() {
            this.Url = "http://localhost/dasBlog1.3/ConfigEditingService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-newtelligence-com:dasblog:config-services/GetFiles", RequestNamespace="urn:schemas-newtelligence-com:dasblog:config-services", ResponseNamespace="urn:schemas-newtelligence-com:dasblog:config-services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetFiles(string username, string password) {
            object[] results = this.Invoke("GetFiles", new object[] {
                        username,
                        password});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFiles(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFiles", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetFiles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-newtelligence-com:dasblog:config-services/ReadFile", RequestNamespace="urn:schemas-newtelligence-com:dasblog:config-services", ResponseNamespace="urn:schemas-newtelligence-com:dasblog:config-services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public System.Byte[] ReadFile(string fileName, string username, string password) {
            object[] results = this.Invoke("ReadFile", new object[] {
                        fileName,
                        username,
                        password});
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadFile(string fileName, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReadFile", new object[] {
                        fileName,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Byte[] EndReadFile(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-newtelligence-com:dasblog:config-services/UpdateFile", RequestNamespace="urn:schemas-newtelligence-com:dasblog:config-services", ResponseNamespace="urn:schemas-newtelligence-com:dasblog:config-services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFile(string fileName, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] System.Byte[] content, string username, string password) {
            this.Invoke("UpdateFile", new object[] {
                        fileName,
                        content,
                        username,
                        password});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateFile(string fileName, System.Byte[] content, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateFile", new object[] {
                        fileName,
                        content,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateFile(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-newtelligence-com:dasblog:config-services/ReadNavigation", RequestNamespace="urn:schemas-newtelligence-com:dasblog:config-services", ResponseNamespace="urn:schemas-newtelligence-com:dasblog:config-services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("links", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("link", IsNullable=false)]
        public NavigationLink[] ReadNavigation(string username, string password) {
            object[] results = this.Invoke("ReadNavigation", new object[] {
                        username,
                        password});
            return ((NavigationLink[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadNavigation(string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ReadNavigation", new object[] {
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public NavigationLink[] EndReadNavigation(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((NavigationLink[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:schemas-newtelligence-com:dasblog:config-services/UpdateNavigation", RequestNamespace="urn:schemas-newtelligence-com:dasblog:config-services", ResponseNamespace="urn:schemas-newtelligence-com:dasblog:config-services", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateNavigation([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute("link", IsNullable=false)] NavigationLink[] links, string username, string password) {
            this.Invoke("UpdateNavigation", new object[] {
                        links,
                        username,
                        password});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateNavigation(NavigationLink[] links, string username, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateNavigation", new object[] {
                        links,
                        username,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateNavigation(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:schemas-newtelligence-com:dasblog:config-services")]
    public class NavigationLink {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string url;
    }
}
