//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace RssBandit.CLR20.com.newsgator.services4 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PostItemSoap", Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public partial class PostItem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private NGAPIToken nGAPITokenValueField;
        
        private System.Threading.SendOrPostCallback SetStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RatePostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinkCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PostItem() {
            this.Url = "http://services.newsgator.com/ngws/svc/PostItem.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public NGAPIToken NGAPITokenValue {
            get {
                return this.nGAPITokenValueField;
            }
            set {
                this.nGAPITokenValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetStateCompletedEventHandler SetStateCompleted;
        
        /// <remarks/>
        public event RatePostCompletedEventHandler RatePostCompleted;
        
        /// <remarks/>
        public event GetLinkCountCompletedEventHandler GetLinkCountCompleted;
        
        /// <remarks/>
        public event GetLinksCompletedEventHandler GetLinksCompleted;
        
        /// <remarks/>
        public event GetPostIdCompletedEventHandler GetPostIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/SetState", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PostState[] SetState(string locationName, string[] deletedPosts, string[] readPosts, string[] unreadPosts) {
            object[] results = this.Invoke("SetState", new object[] {
                        locationName,
                        deletedPosts,
                        readPosts,
                        unreadPosts});
            return ((PostState[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetState(string locationName, string[] deletedPosts, string[] readPosts, string[] unreadPosts, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetState", new object[] {
                        locationName,
                        deletedPosts,
                        readPosts,
                        unreadPosts}, callback, asyncState);
        }
        
        /// <remarks/>
        public PostState[] EndSetState(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PostState[])(results[0]));
        }
        
        /// <remarks/>
        public void SetStateAsync(string locationName, string[] deletedPosts, string[] readPosts, string[] unreadPosts) {
            this.SetStateAsync(locationName, deletedPosts, readPosts, unreadPosts, null);
        }
        
        /// <remarks/>
        public void SetStateAsync(string locationName, string[] deletedPosts, string[] readPosts, string[] unreadPosts, object userState) {
            if ((this.SetStateOperationCompleted == null)) {
                this.SetStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetStateOperationCompleted);
            }
            this.InvokeAsync("SetState", new object[] {
                        locationName,
                        deletedPosts,
                        readPosts,
                        unreadPosts}, this.SetStateOperationCompleted, userState);
        }
        
        private void OnSetStateOperationCompleted(object arg) {
            if ((this.SetStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetStateCompleted(this, new SetStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/RatePost", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RatePost(string url, int rating) {
            this.Invoke("RatePost", new object[] {
                        url,
                        rating});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRatePost(string url, int rating, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RatePost", new object[] {
                        url,
                        rating}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRatePost(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void RatePostAsync(string url, int rating) {
            this.RatePostAsync(url, rating, null);
        }
        
        /// <remarks/>
        public void RatePostAsync(string url, int rating, object userState) {
            if ((this.RatePostOperationCompleted == null)) {
                this.RatePostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRatePostOperationCompleted);
            }
            this.InvokeAsync("RatePost", new object[] {
                        url,
                        rating}, this.RatePostOperationCompleted, userState);
        }
        
        private void OnRatePostOperationCompleted(object arg) {
            if ((this.RatePostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RatePostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetLinkCount", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLinkCount(string postId) {
            object[] results = this.Invoke("GetLinkCount", new object[] {
                        postId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLinkCount(string postId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLinkCount", new object[] {
                        postId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetLinkCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLinkCountAsync(string postId) {
            this.GetLinkCountAsync(postId, null);
        }
        
        /// <remarks/>
        public void GetLinkCountAsync(string postId, object userState) {
            if ((this.GetLinkCountOperationCompleted == null)) {
                this.GetLinkCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinkCountOperationCompleted);
            }
            this.InvokeAsync("GetLinkCount", new object[] {
                        postId}, this.GetLinkCountOperationCompleted, userState);
        }
        
        private void OnGetLinkCountOperationCompleted(object arg) {
            if ((this.GetLinkCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinkCountCompleted(this, new GetLinkCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetLinks", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetLinks(string postId) {
            object[] results = this.Invoke("GetLinks", new object[] {
                        postId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLinks(string postId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetLinks", new object[] {
                        postId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetLinks(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLinksAsync(string postId) {
            this.GetLinksAsync(postId, null);
        }
        
        /// <remarks/>
        public void GetLinksAsync(string postId, object userState) {
            if ((this.GetLinksOperationCompleted == null)) {
                this.GetLinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLinksOperationCompleted);
            }
            this.InvokeAsync("GetLinks", new object[] {
                        postId}, this.GetLinksOperationCompleted, userState);
        }
        
        private void OnGetLinksOperationCompleted(object arg) {
            if ((this.GetLinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLinksCompleted(this, new GetLinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/ngws/svc/PostItem.asmx/GetPostId", RequestNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", ResponseNamespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPostId(string url) {
            object[] results = this.Invoke("GetPostId", new object[] {
                        url});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPostId(string url, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPostId", new object[] {
                        url}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPostId(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostIdAsync(string url) {
            this.GetPostIdAsync(url, null);
        }
        
        /// <remarks/>
        public void GetPostIdAsync(string url, object userState) {
            if ((this.GetPostIdOperationCompleted == null)) {
                this.GetPostIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostIdOperationCompleted);
            }
            this.InvokeAsync("GetPostId", new object[] {
                        url}, this.GetPostIdOperationCompleted, userState);
        }
        
        private void OnGetPostIdOperationCompleted(object arg) {
            if ((this.GetPostIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostIdCompleted(this, new GetPostIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx", IsNullable=false)]
    public partial class NGAPIToken : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/ngws/svc/PostItem.asmx")]
    public partial class PostState {
        
        private string postIDField;
        
        private int stateField;
        
        /// <remarks/>
        public string PostID {
            get {
                return this.postIDField;
            }
            set {
                this.postIDField = value;
            }
        }
        
        /// <remarks/>
        public int State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SetStateCompletedEventHandler(object sender, SetStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PostState[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PostState[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void RatePostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetLinkCountCompletedEventHandler(object sender, GetLinkCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinkCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinkCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetLinksCompletedEventHandler(object sender, GetLinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetPostIdCompletedEventHandler(object sender, GetPostIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591