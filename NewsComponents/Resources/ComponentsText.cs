// WARNING:
// This file was generated by the Microsoft DataWarehouse String Resource Tool 0.0.0.0
// from information in ComponentsText.strings.
// DO NOT MODIFY THIS FILE'S CONTENTS, THEY WILL BE OVERWRITTEN
// 
namespace NewsComponents.Resources
{
	using System;
	using System.Resources;
	using System.Globalization;
	
	
	class ComponentsText
	{
		
		public static CultureInfo Culture
		{
			get
			{
				return Keys.Culture;
			}
			set
			{
				Keys.Culture = value;
			}
		}
		
		public static string ExceptionUnsupportedAtomVersion
		{
			get
			{
				return Keys.GetString(Keys.ExceptionUnsupportedAtomVersion);
			}
		}
		
		public static string ExceptionUnknownXmlDialect
		{
			get
			{
				return Keys.GetString(Keys.ExceptionUnknownXmlDialect);
			}
		}
		
		public static string ExceptionSearchNoSearchCriteria
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSearchNoSearchCriteria);
			}
		}
		
		public static string ExceptionSearchQueryBuilder
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSearchQueryBuilder);
			}
		}
		
		public static string ExceptionSearchFatal
		{
			get
			{
				return Keys.GetString(Keys.ExceptionSearchFatal);
			}
		}
		
		public static string ExceptionHelpFeedTitle
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHelpFeedTitle);
			}
		}
		
		public static string ExceptionHelpFeedDesc
		{
			get
			{
				return Keys.GetString(Keys.ExceptionHelpFeedDesc);
			}
		}
		
		public static string ExceptionResourceAuthorization
		{
			get
			{
				return Keys.GetString(Keys.ExceptionResourceAuthorization);
			}
		}
		
		public static string ExceptionResourceGone
		{
			get
			{
				return Keys.GetString(Keys.ExceptionResourceGone);
			}
		}
		
		public static string ExceptionDirectoryNotExistsMessage(string directoryName)
		{
			return Keys.GetString(Keys.ExceptionDirectoryNotExistsMessage, directoryName);
		}
		
		public static string ExceptionRFC2822ParseGroupsMessage(string exceptionTypeName)
		{
			return Keys.GetString(Keys.ExceptionRFC2822ParseGroupsMessage, exceptionTypeName);
		}
		
		public static string ExceptionRFC2822InvalidTimezoneFormatMessage(string originalDateTimeString)
		{
			return Keys.GetString(Keys.ExceptionRFC2822InvalidTimezoneFormatMessage, originalDateTimeString);
		}
		
		public static string ExceptionNoProcessingHandlerMessage(string url)
		{
			return Keys.GetString(Keys.ExceptionNoProcessingHandlerMessage, url);
		}
		
		public static string ExceptionEnclosureCacheLimitReached(string fileName, int sizeLimit)
		{
			return Keys.GetString(Keys.ExceptionEnclosureCacheLimitReached, fileName, sizeLimit);
		}
		
		public static string ExceptionSearchQueryBuilderFatal(string error)
		{
			return Keys.GetString(Keys.ExceptionSearchQueryBuilderFatal, error);
		}
		
		public static string ExceptionLuceneSearchKindNotSupported(string typeOfSearch)
		{
			return Keys.GetString(Keys.ExceptionLuceneSearchKindNotSupported, typeOfSearch);
		}
		
		public static string ExceptionHelpFeedItemTitle(string typeOfError)
		{
			return Keys.GetString(Keys.ExceptionHelpFeedItemTitle, typeOfError);
		}
		
		public static string ExceptionNntpServerAuthenticationFailed(string nntpServer)
		{
			return Keys.GetString(Keys.ExceptionNntpServerAuthenticationFailed, nntpServer);
		}
		
		public class Keys
		{
			
			static ResourceManager resourceManager = new ResourceManager(typeof(ComponentsText).FullName, typeof(ComponentsText).Module.Assembly);
			
			static CultureInfo _culture = null;
			
			public const string ExceptionUnsupportedAtomVersion = "ExceptionUnsupportedAtomVersion";
			
			public const string ExceptionUnknownXmlDialect = "ExceptionUnknownXmlDialect";
			
			public const string ExceptionDirectoryNotExistsMessage = "ExceptionDirectoryNotExistsMessage";
			
			public const string ExceptionRFC2822ParseGroupsMessage = "ExceptionRFC2822ParseGroupsMessage";
			
			public const string ExceptionRFC2822InvalidTimezoneFormatMessage = "ExceptionRFC2822InvalidTimezoneFormatMessage";
			
			public const string ExceptionNoProcessingHandlerMessage = "ExceptionNoProcessingHandlerMessage";
			
			public const string ExceptionEnclosureCacheLimitReached = "ExceptionEnclosureCacheLimitReached";
			
			public const string ExceptionSearchNoSearchCriteria = "ExceptionSearchNoSearchCriteria";
			
			public const string ExceptionSearchQueryBuilder = "ExceptionSearchQueryBuilder";
			
			public const string ExceptionSearchQueryBuilderFatal = "ExceptionSearchQueryBuilderFatal";
			
			public const string ExceptionLuceneSearchKindNotSupported = "ExceptionLuceneSearchKindNotSupported";
			
			public const string ExceptionSearchFatal = "ExceptionSearchFatal";
			
			public const string ExceptionHelpFeedTitle = "ExceptionHelpFeedTitle";
			
			public const string ExceptionHelpFeedItemTitle = "ExceptionHelpFeedItemTitle";
			
			public const string ExceptionHelpFeedDesc = "ExceptionHelpFeedDesc";
			
			public const string ExceptionNntpServerAuthenticationFailed = "ExceptionNntpServerAuthenticationFailed";
			
			public const string ExceptionResourceAuthorization = "ExceptionResourceAuthorization";
			
			public const string ExceptionResourceGone = "ExceptionResourceGone";
			
			public static CultureInfo Culture
			{
				get
				{
					return _culture;
				}
				set
				{
					_culture = value;
				}
			}
			
			public static string GetString(string key)
			{
				return resourceManager.GetString(key, _culture);
			}
			
			public static string GetString(string key, object arg0)
			{
				return string.Format(System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0);
			}
			
			public static string GetString(string key, object arg0, object arg1)
			{
				return string.Format(System.Globalization.CultureInfo.CurrentCulture, resourceManager.GetString(key, _culture), arg0, arg1);
			}
		}
	}
}
