<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<!--(==============================================================)-->
<!--(Document created with RoboEditor. )============================-->
<!--(==============================================================)-->

<head>

<title>Customizing the Way Feeds Look using XSLT</title>

<!--(Meta)==========================================================-->

<meta name="template" content="Bandit Topic.htt">
<meta http-equiv=content-type content="text/html; charset=windows-1252">
<meta name="topic-status" content="In Progress">
<meta name="topic-priority" content="0">
<meta name="topic-time-estimate" content="0">
<meta name="topic-comment" content>
<meta name="topic-id" content="Customizing_the_Way_Feeds_Look_using_XSLT">
<meta name=generator content="RoboHELP by eHelp Corporation - www.ehelp.com">
<meta name=generator-major-version content=0.1>
<meta name=generator-minor-version content=1>
<meta name=filetype content=kadov>
<meta name=filetype-version content=1>
<meta name=page-count content=1>
<meta name=layout-height content=2370>
<meta name=layout-width content=668>


<!--(Links)=========================================================-->

<link rel="stylesheet" href="..\..\default.css">



</head>

<!--(Body)==========================================================-->


<body>

<!--kadov_tag{{<placeholder id="header">}}-->
<h1><!--kadov_tag{{<variable name=title
							x-format=default
							x-value="Customizing the Way Feeds Look using XSLT">}}-->Customizing 
 the Way Feeds Look using XSLT<!--kadov_tag{{</variable>}}--></h1>

<h2 id=toc>Table of contents</h2>

<ul>
	
	<li class=kadov-p
		class=kadov-p><a href="#preface">Preface</a></li>
	
	<li class=kadov-p
		class=kadov-p><a href="#basics">Basics</a></li>
	
	<li class=kadov-p
		class=kadov-p><a href="#elements">Elements</a></li>
	
	<li class=kadov-p
		class=kadov-p><a href="#bestpractice">Best practice</a></li>
	
	<li class=kadov-p
		class=kadov-p><a href="#getinvolved">Get involved</a></li>
</ul>

<h3 id=preface>Preface</h3>

<p>The Topic, &quot;<a href="../getting_started/displaying_feeds.htm">Displaying 
 Feeds</a>&quot; shows how to configure RSS Bandit to use different XSLT 
 Formatters to customize the look and feel of the Reading Pane. If you 
 look in the RSS Bandit installation folder, you'll find a <b>templates</b> 
 folder that contains various XSLT files.</p>

<p>This folder contains the RSS Bandit Item formatting samples. If you 
 start experimenting with these, ensure you use your own: copy/rename the 
 interesting one, and change it to apply your needs.</p>

<h3 id=basics>Basics</h3>

<p>You should be familiar with XSLT to be able to get it work. The input 
 of each XSLT stylesheet is a XML document fragment describing an RSS item. 
 The root element will be an <a href="http://blogs.law.harvard.edu/tech/rss#whatIsRss">RSS 
 2.0 <code>rss</code> element</a> followed by a single <code>channel</code> 
 element. The subelements of the item element depend on the information 
 provided by a particular RSS feed. </p>

<h3 id=elements>Elements</h3>

<p>The <a href="http://blogs.law.harvard.edu/tech/rss#requiredChannelElements">required 
 base elements</a> of the channel element are provided for custom formatting. 
 </p>

<p>Besides the <a href="http://blogs.law.harvard.edu/tech/rss#hrelementsOfLtitemgt">subelements 
 of the <code>item</code> element</a> specified in the RSS 2.0 specification 
 there may also be elements from other namespaces which correspond to various 
 RSS 2.0 modules. Brief descriptions of such modules and elements are provided 
 in the table below. </p>

<!--(Table)=========================================================-->
<table ID=Table1
		x-use-null-cells>

<tr>
<td><b style="font-weight: bold;">Module Name</b></td>
<td><b style="font-weight: bold;">Description</b></td></tr>

<tr>
<td><a href="http://web.resource.org/rss/1.0/modules/dc/">Dublin Core</a></td>
<td>The Dublin Core Metadata Element Set provides some standard metadata 
 elements for describing published content on the web.</td></tr>

<tr>
<td><a href="http://web.resource.org/rss/1.0/modules/content/">Content</a></td>
<td>A module for the actual content of websites, in multiple formats. The 
 most commonly used element from this module is <code>content:encoded</code></td></tr>

<tr>
<td><a href="http://web.resource.org/rss/1.0/modules/slash/">Slash</a></td>
<td>The Slash RSS 1.0 module augments the RSS core and Dublin Core module's 
 metadata with channel and item-level elements specific to <a href="http://slashcode.com/">SlashCode</a>-based 
 sites</td></tr>

<tr>
<td><a href="http://wellformedweb.org/story/9#autorss">CommentAPI</a></td>
<td>Describes the <code>wfw:comment</code> element which is used to provide 
 the location of the CommentAPI endpoint to aggregator software.</td></tr>

<tr>
<td><a href="http://www.intertwingly.net/blog/1299.html">XHTML in RSS 2.0</a></td>
<td>Specifies the use of the <code>xhtml:body</code> element to provide 
 content in an RSS feed.</td></tr>

<tr>
<td><a href="http://matt.blogs.it/specs/ENT/1.0/">Easy News Topics</a></td>
<td>ENT is provides a mechanism for describing how topic information can 
 be introduced into an RSS 2.0 news feed</td></tr>
</table>

<h3 id=bestpractice>Best practice</h3>

<p>At first you have to enable the usage of a custom formatter within the 
 options dialog: select the menu <span class=ModuleCaption>File|Options...</span> 
 and then the tab named &quot;<span class=ModuleCaption>Display</span>&quot;. 
 Ensure the checkbox &quot;<span class=ModuleCaption>Use a custom formatter</span>&quot; 
 is checked. Then play with the existing formatter stylesheets.</p>

<p>If you are familar with the differences, or you have your own ideas 
 born you can copy <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}-->the 
 <a href="identity.fdxsl">identity.fdxsl</a> to your templates folder. 
 After that select this one as your custom formatter and press OK. Now 
 you will see the plain unformatted text of any news item, channel or group. 
 If you Right-Click in the preview pane and select &quot;View Source&quot; 
 from the context menu, you will get the full XML content displayed valid 
 for the current selection.</p>

<p>Your stylesheet must contain sections matching each of the following 
 root element types:</p>

<ol style="list-style: decimal;"
	type=1>
	
	<li class=kadov-p
		class=kadov-p>&lt;newspaper type=&quot;<span style="font-weight: bold;">group</span>&quot;&gt;</li>
	
	<li class=kadov-p
		class=kadov-p>&lt;newspaper type=&quot;<span style="font-weight: bold;">channel</span>&quot;&gt;</li>
	
	<li class=kadov-p
		class=kadov-p>&lt;newspaper type=&quot;<span style="font-weight: bold;">newsitem</span>&quot;&gt;</li>
</ol>

<p>XML for option (1) is provided if you select a folder in your subscriptions, 
 XML for option (2) will be created on selection of a feed (any kind inclusive 
 NNTP feeds), while option (3) is valid for the selection of a single news 
 item.</p>

<p>Your stylesheet should produce valid (X)HTML. If you want to use CSS 
 for visual effects, ensure to use it in the embedded form to keep it with 
 your formatting templates. Do not forget to insert a <b><code><span class=Code>&lt;base 
 href=&quot;{//item/link}&quot; /&gt;</span></code></b> within the HTML 
 HEAD section to get relative links of images resolved by the browser control!</p>

<p>There is support to split the css stylesheet (or also images used) to 
 a separate file. If your formatter stylesheet want to use that, you have 
 to add these two prameters on the root level (child of &lt;xsl:stylesheet&gt;): 
 </p>

<p class=Note><span class=Code>&lt;xsl:param name='AppStartupPath'/&gt; 
 <!--kadov_tag{{<spaces>}}-->&nbsp;<!--kadov_tag{{</spaces>}}--><br>
&lt;xsl:param name='AppUserDataPath'/&gt;</span> </p>

<p>They are filled by RssBandit to reflect: </p>

<ul>
	
	<li class=kadov-p
		class=kadov-p>AppStartupPath: the current path to the executable 
 RssBandit.exe (C:\Program Files\RssBandit) </li>
	
	<li class=kadov-p
		class=kadov-p>AppUserDataPath: the path to the Application Data 
 folder <br />
	(usually C:\Documents and Settings\&lt;username&gt;\Application Data\RssBandit) 
 </li>
</ul>

<p>Now you can code a line like this: </p>

<p class=note><span class=Code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; 
 href=&quot;{$AppStartupPath}/templates/my-new.css&quot; /&gt;</span> </p>

<p>pointing to a css file located at C:\Program Files\RssBandit\templates. 
 </p>

<h3 id=getinvolved>Get involved</h3>

<p>Feel free to join the Developer community at <a href="http://dev.rssbandit.org">dev.rssbandit.org</a> 
 by providing patches, suggestions or error reporting! <br />
Rss Bandit users may visit our forum at <a href="http://www.rssbandit.org/forum/">www.rssbandit.org/forum</a>. 
 </p>

<!--kadov_tag{{<placeholder id="footer">}}-->
</body>

</html>
