<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
            Microsoft ResX Schema 
        
            Version 2.0
                
            The primary goals of this format is to allow a simple XML format 
            that is mostly human readable. The generation and parsing of the 
            various data types are done through the TypeConverter classes 
            associated with the data types.
        
            Example:
        
                ... ado.net/XML headers & schema ...
                <resheader name="resmimetype">text/microsoft-resx</resheader>
                <resheader name="version">2.0</resheader>
                <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
                <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
                <data name="Name1">this is my long string</data>
                <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
                <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
                    [base64 mime encoded serialized .NET Framework object]
                </data>
                <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
                    [base64 mime encoded string representing a byte array form of the .NET Framework object]
                </data>
        
            There are any number of "resheader" rows that contain simple 
            name/value pairs.
            
            Each data row contains a name, and value. The row also contains a 
            type or mimetype. Type corresponds to a .NET class that support 
            text/value conversion through the TypeConverter architecture. 
            Classes that don't support this are serialized and stored with the 
            mimetype set.
                     
            The mimetype is used for serialized objects, and tells the 
            ResXResourceReader how to depersist the object. This is currently not 
            extensible. For a given mimetype the value must be set accordingly:
        
            Note - application/x-microsoft.net.object.binary.base64 is the format 
                   that the ResXResourceWriter will generate, however the reader can 
                   read any of the formats listed below.
        
            mimetype: application/x-microsoft.net.object.binary.base64
            value   : The object must be serialized with 
                    : System.Serialization.Formatters.Binary.BinaryFormatter
                    : and then encoded with base64 encoding.
        
            mimetype: application/x-microsoft.net.object.soap.base64
            value   : The object must be serialized with 
                    : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
                    : and then encoded with base64 encoding.
            mimetype: application/x-microsoft.net.object.bytearray.base64
            value   : The object must be serialized into a byte array 
                    : using a System.ComponentModel.TypeConverter
                    : and then encoded with base64 encoding.
                    
			//	BF 12.22.03	WTR534
			//	Added LER_Exception_CantAddNodeThatBelongsToDifferentControl                    
        -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllNodesDelete">
    <value>Alle Knoten im UltraTree werden gelöscht. Möchten Sie fortfahren?</value>
  </data>
  <data name="NodePropAddSibling">
    <value>&amp;Sibling hinzufügen</value>
  </data>
  <data name="NodePropAddChild">
    <value>Unterknoten hinzufügen</value>
  </data>
  <data name="NodePropEdit">
    <value>&amp;Bearbeiten</value>
  </data>
  <data name="NodeEditClear">
    <value>&amp;Löschen</value>
  </data>
  <data name="BeforeNodesDeletedTitle">
    <value>UltraTreeNodes löschen</value>
  </data>
  <data name="NodePropertyCancel">
    <value>Abbrechen</value>
  </data>
  <data name="NodeEditDelete">
    <value>&amp;Löschen</value>
  </data>
  <data name="BeforeNodesDeletedMessage">
    <value>Sie haben {0} Knoten zum löschen ausgewählt .

Wählen Sie Ja um den Knoten zu löschen oder Nein um abzubrechen.</value>
  </data>
  <data name="SelNodeEdit">
    <value>Wählen Sie den zu bearbeitenden Knoten aus:</value>
  </data>
  <data name="NodePropAddRoot">
    <value>&amp;Root hinzufügen</value>
  </data>
  <data name="NodePropertyEditorLabelEditMessage">
    <value>Knotenbezeichnung geändert.</value>
  </data>
  <data name="SelNodeLabel">
    <value>Ausgewählte Knotenbezeichnung</value>
  </data>
  <data name="NodeProperty">
    <value>Knoteneigenschaften</value>
  </data>
  <data name="PasteErrorMessage">
    <value>Während die Knoten vom Clipboard kopiert wurden, ist folgender Fehler aufgetreten:
{0}</value>
  </data>
  <data name="PasteErrorMessageCaption">
    <value>Einfügefehler</value>
  </data>
  <data name="DefaultAction_Collapse">
    <value>Zusammenklappen</value>
  </data>
  <data name="DefaultAction_Expand">
    <value>Aufklappen</value>
  </data>
  <data name="DefaultAction_EnterEditMode">
    <value>Geben Sie bitte den Editiermodus ein</value>
  </data>
  <data name="DefaultAction_Sort">
    <value>Sortieren</value>
  </data>
  <data name="NodesCollectionEditor_CannotModifyNodes">
    <value>Wenn gebundene Knoten im Baum vorhanden sind, kann die Knoten-Sammlung nicht editiert werden.</value>
  </data>
  <data name="UltraTreeNodeLayoutInfo_Exception_InvalidSize">
    <value>Die spezifizierte Grösse war ungültig weil sie eine Breite oder eine Höhe die kleiner als Null ist beinhaltete.</value>
  </data>
  <!--BF 6/10/05 BR04486-->
  <data name="UltraTreeNode_Exception_BringCellIntoView">
    <value>Die spezifizierte Spalte gehört nicht zu diesem Knoten.</value>
  </data>
  <!--BF 6/16/05 NAS2005 Vol3 - Cell editing-->
  <data name="UltraTree_Exception_ActiveCellColumnHasNoDisplayColumn">
    <value>Die AktivZelle kann nicht in eine UltraTreeKnotenSpalte gesetzt werden die keine dazugehörige Anzeige Spalte hat.</value>
  </data>
  <data name="DataError_MessageBox_Title">
    <value>Datenfehler</value>
  </data>
  <data name="UltraTreeNodeColumn_EditorValueInvalid">
    <value>"Wert im Editor ist nicht gültig."</value>
  </data>
  <data name="DataErrorUnableToConvert">
    <value>Nicht imstande von {0} in {1} umzuwandeln</value>
  </data>
  <!-- JAS v5.3 SmartTags START -->
  <!-- JAS v5.3 SmartTags END -->
  <!-- BF 7/18/05	FR00881 -->
  <data name="UltraTree_Exception_CannotSetTopNodeToHiddenNode">
    <value>Die TopKnoten Eigenschaft kann nicht auf einen UltraTreeKnoten gesetzt werden der in der Benutzeroberfläche nicht sichtbar ist.</value>
  </data>
  <!-- BF 7/18/05	FR00881 -->
  <data name="UltraTreeNodeColumn_Exception_MaxLength">
    <value>Die "max. Länge" Einstellung kann nicht kleiner als Nuss sein.</value>
  </data>
  <!-- BF 9/6/05	BR06063 -->
  <data name="InvalidEditorValue_Error_Message_Prefix">
    <value>Nicht imstande den Datenwert zu aktualisieren:</value>
  </data>
  <data name="InvalidEditorValue_Error_Message">
    <value>Der gegenwärtige Wert des Herausgebers ist nicht gültig.</value>
  </data>
  <!-- BF 9/9/05	BR06256 -->
  <data name="ViolatesNullable_Error_Message">
    <value>In dieser Spalte sind keine leeren Zellen erlaubt '{0}'.</value>
  </data>
  <!-- BF 10/10/05	BR06895 -->
  <!-- JAS BR06191 10/11/05 -->
  <!-- BF 3/17/06	BR10661-->
  <data name="Exception_CannotEditDataBoundNode">
    <value>Die 'BeginEdit'-Methode kann nicht auf einem Knoten, der an eine Datenquelle gebunden ist, aufgerufen werden, es sei denn die 'UseEditor'-Eigenschaft der betreffenden Übersteuerung ist auf DefaulttableBoolean gesetzt. Richtig.</value>
  </data>
</root>
