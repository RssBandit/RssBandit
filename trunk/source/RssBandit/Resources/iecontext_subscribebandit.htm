<html>
<script type="text/javascript">
try
{
	// this isn't being called from a menu
	if (external.menuArguments != null)
	{
		// Get the DOM for the current page
		var doc = external.menuArguments.document;
		
		// Get the browser for the right click
		var parentwindow = external.menuArguments;
		var parentevent = null;

		// Find the event (either from the parent window, or if we're in
		// frames, from the frame)
		if(parentwindow)
			parentevent = parentwindow.event;
		
		// If we're in a subframe, iterate through the frame stack until we find the
		// frame with the events- grab its events.
		if(!parentevent && parentwindow)
		{
			if(parentwindow.frames)
			{
				for(i = 0; i< parentwindow.frames.length; i++)
				{
					if(parentwindow.frames(i).event)
					{
						parentevent = parentwindow.frames(i).event;
						break;
					}
				}
			}
		}
		
		// If we found the event, get the entry url
		if(parentevent)
		{
			var url = escape(parentwindow.location.href);
			var selectedElement = doc.elementFromPoint(parentevent.clientX, parentevent.clientY );
			var tag = getContainingA(selectedElement);
			
			if(tag.nodeName == "A" || tag.nodeName == "a"){				
				url = tag.href;
			}
			
			var commandtoRun = "__COMMAND_PATH_PLACEHOLDER__";
			var commandParms = "\"" + url + "\"";
			var oShell = new ActiveXObject("Shell.Application");
			oShell.ShellExecute(commandtoRun, commandParms, "", "open", "1");

		}		
	}
}
catch (exception)
{
	alert("iecontext_subscribebandit.htm::exception:"+exception.message);
}

function getContainingA(Element)
{
	var AnyElement;

	AnyElement = Element;
	if (AnyElement.parentElement && AnyElement.tagName)	{
		while ((AnyElement) && (AnyElement.tagName != "A"))
		{
			AnyElement = AnyElement.parentElement;
		}
	} else {
		while ((AnyElement) && (AnyElement.nodeName != "A"))
		{
			AnyElement = AnyElement.parentNode;
		}
	}	
	return AnyElement;
}

</script>
</html>