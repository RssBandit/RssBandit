<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<data name="chkDisplayWelcome.Text" space="preserve">
    <value>항상 이 마법사 환영 페이지를 보여 줍니다</value>
  </data>
	<data name="lblFeedCredentialsIntro.Text" space="preserve">
    <value>여기서 여러분이 원하시는 예약 구독들 보시려면 사용자 이름과 비밀번호를 명시 하시면 됩니다</value>
  </data>
	<data name="lblUsername.Text" space="preserve">
    <value>&amp;사용자 이름:</value>
  </data>
	<data name="lblPassword.Text" space="preserve">
    <value>&amp;비밀 번호:</value>
  </data>
	<data name="pageFeedCredentials.Description" space="preserve">
    <value>인증 정보를 넣어 주셔야지 여러분이 원하시는 예약 구독을 다운로드 하실 수 있습니다.</value>
  </data>
	<data name="label2.Text" space="preserve">
    <value>성함:</value>
  </data>
	<data name="pageSourceName.Description" space="preserve">
    <value>예약 구독 리스트를 하나의 이름으로 정해 주세요</value>
  </data>
	<data name="pageSourceName.Text" space="preserve">
    <value>예약 구독 제목</value>
  </data>
	<data name="label1.Text" space="preserve">
    <value>아래와 같은 정보 제공 자료들과 피드들을 동기화 합니다</value>
  </data>
	<data name="radioNewsGator.Text" space="preserve">
    <value>NewsGator 온라인</value>
  </data>
	<data name="radioGoogleReader.Text" space="preserve">
    <value>구글 문서도구 리더</value>
  </data>
	<data name="radioCommonFeedlist.Text" space="preserve">
    <value>윈도우스 일반 리스트 (Internet Explorer 와 Outlook)</value>
  </data>
	<data name="pageStartImport.Description" space="preserve">
    <value>여러분의 데스크 탑에 있는 RSS Bandit 와 Internet Explorer/Outlook  혹은 어떤 온라인 피드처럼 똑같은 피드를 전체적으로 사용 합니다.</value>
  </data>
	<data name="pageStartImport.Text" space="preserve">
    <value>피드의 정보 제공 소스를 선택 합니다.</value>
  </data>
	<data name="pageFeedCredentials.Text" space="preserve">
    <value>로그인 인증 정보</value>
  </data>
	<data name="_btnImmediateFinish.Text" space="preserve">
    <value>마침</value>
  </data>
	<data name="wizard.Text" space="preserve">
    <value>마법사</value>
  </data>
	<data name="$this.Text" space="preserve">
    <value>피드 마법사 동기화 하기</value>
  </data>
	</root>