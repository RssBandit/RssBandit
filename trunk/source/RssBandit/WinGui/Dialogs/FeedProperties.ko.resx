<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
		<xsd:complexType>
		<xsd:choice maxOccurs="unbounded">
				 <xsd:element name="data">
						  <xsd:complexType>
		<xsd:sequence>
		<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
		<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
		<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
		<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
		</xsd:complexType>
		</xsd:element>
		<xsd:element name="resheader">
				 <xsd:complexType>
		<xsd:sequence>
		<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required" />
		</xsd:complexType>
		</xsd:element>
		</xsd:choice>
		</xsd:complexType>
		</xsd:element></xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.0.0.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
<data name="button2.Text">
    <value>취소</value>
  </data>
	<data name="button1.Text">
    <value>&amp;확인</value>
  </data>
	<data name="label2.Text">
    <value>&amp;웹 주소(Url)</value>
  </data>
	<data name="label1.Text">
    <value>&amp;제목</value>
  </data>
	<data name="label5.Text">
    <value>&amp;카테고리</value>
  </data>
	<data name="comboMaxItemAge.Items">
    <value>1 일</value>
  </data>
	<data name="comboMaxItemAge.Items1">
    <value>2 일</value>
  </data>
	<data name="comboMaxItemAge.Items2">
    <value>3 일</value>
  </data>
	<data name="comboMaxItemAge.Items3">
    <value>4 일</value>
  </data>
	<data name="comboMaxItemAge.Items4">
    <value>5 일</value>
  </data>
	<data name="comboMaxItemAge.Items5">
    <value>6 일</value>
  </data>
	<data name="comboMaxItemAge.Items6">
    <value>7 일</value>
  </data>
	<data name="comboMaxItemAge.Items7">
    <value>2 주</value>
  </data>
	<data name="comboMaxItemAge.Items8">
    <value>3 주</value>
  </data>
	<data name="comboMaxItemAge.Items9">
    <value>1 달</value>
  </data>
	<data name="comboMaxItemAge.Items10">
    <value>2 달</value>
  </data>
	<data name="comboMaxItemAge.Items11">
    <value>3 개월</value>
  </data>
	<data name="comboMaxItemAge.Items12">
    <value>6 개월</value>
  </data>
	<data name="comboMaxItemAge.Items13">
    <value>9 개월</value>
  </data>
	<data name="comboMaxItemAge.Items14">
    <value>1 년</value>
  </data>
	<data name="comboMaxItemAge.Items15">
    <value>무제한</value>
  </data>
	<data name="comboMaxItemAge.ToolTip">
    <value>케쉬된 아이템을 저장하기 위해서 최대 아이템 기간을 선택해 주세요</value>
  </data>
	<data name="tabItemControl.Text">
    <value>아이템 제어</value>
  </data>
	<data name="label4.Text">
    <value>업데이트  &amp;빈도수:</value>
  </data>
	<data name="label3.Text">
    <value>분</value>
  </data>
	<data name="comboBox1.Items">
    <value>0</value>
  </data>
	<data name="comboBox1.Items1">
    <value>15</value>
  </data>
	<data name="comboBox1.Items2">
    <value>30</value>
  </data>
	<data name="comboBox1.Items3">
    <value>45</value>
  </data>
	<data name="comboBox1.Items4">
    <value>60</value>
  </data>
	<data name="comboBox1.Items5">
    <value>75</value>
  </data>
	<data name="comboBox1.Items6">
    <value>90</value>
  </data>
	<data name="comboBox1.Items7">
    <value>105</value>
  </data>
	<data name="comboBox1.Items8">
    <value>120</value>
  </data>
	<data name="label15.Text">
    <value>아래 보다 오래된 아이템 제거:</value>
  </data>
	<data name="tabAuthentication.Text">
    <value>인증</value>
  </data>
	<data name="label7.Text">
    <value>&amp;비밀번호</value>
  </data>
	<data name="label6.Text">
    <value>사용자&amp;이름</value>
  </data>
	<data name="tabDisplay.Text">
    <value>디스플레이</value>
  </data>
	<data name="comboFormatters.ToolTip">
    <value>스타일시트 포멧터(formatter)를 선택 해 주세요</value>
  </data>
	<data name="checkCustomFormatter.Text">
    <value>&amp;원하시는 포멧터(formatter)를 사용하기</value>
  </data>
	<data name="checkCustomFormatter.ToolTip">
    <value>원하시는 포멧터(formatter) 사용하시려면 이 옵션을 선택하여 주세요</value>
  </data>
	<data name="labelFormatters.Text">
    <value>&amp;스타일시트 포멧터(Formatter):</value>
  </data>
	<data name="label9.Text">
    <value>디폴트 형식을 사용하시거나 임의의 XSLT 포멧터(formatter)를 사용해 주세요.</value>
  </data>
	<data name="tabAttachments.Text">
    <value>첨부파일 이나 팟케스트(Attachments/Podcasts)</value>
  </data>
	<data name="checkDownloadEnclosures.Text">
    <value>자동으로 첨부 파일과 팟케스트를 다운로드 합니다</value>
  </data>
	<data name="checkEnableEnclosureA다rts.Text">
    <value>&amp;새롭게 다운로드한 첨부파일과 팟케스트를 위해서 윈도우 알림을 시작 합니다.</value>
  </data>
	<data name="checkEnableAlerts.Text">
    <value>&amp;새로운 아이템을 위해서 윈두에 알림을 시작합니다</value>
  </data>
	<data name="checkMarkItemsReadOnExit.Text">
    <value>&amp;기존에 존재하는 피드(Feed)를 이미 읽음으로 표시 합니다. </value>
  </data>
	<data name="$this.Text">
    <value>피드(Feed) 설정</value>
  </data>
	</root>