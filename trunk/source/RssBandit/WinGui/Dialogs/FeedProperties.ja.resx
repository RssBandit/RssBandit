<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 1.3
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">1.3</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used forserialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.0.0.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=1.0.3102.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=1.0.3102.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="$this.ImeMode" type="System.Windows.Forms.ImeMode, System.Windows.Forms, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
		<value>NoControl</value>
	</data>
	<data name="label3.Text">
		<value>分</value>
	</data>
	<data name="checkCustomFormatter.Text">
		<value>カスタム XSLT フォーマットを使う(&amp;C)</value>
	</data>
	<data name="label6.Text">
		<value>ユーザー名(&amp;N)</value>
	</data>
	<data name="$this.Text">
		<value>フィード プロパティ</value>
	</data>
	<data name="label7.Text">
		<value>パスワード(&amp;P)</value>
	</data>
	<data name="tabAuthentication.Text">
		<value>認証</value>
	</data>
	<data name="button2.Text">
		<value>キャンセル</value>
	</data>
	<data name="label2.Text">
		<value>&amp;URL</value>
	</data>
	<data name="tabItemControl.Text">
		<value>記事設定</value>
	</data>
	<data name="label15.Text">
		<value>対象期間</value>
	</data>
	<data name="label1.Text">
		<value>タイトル(&amp;T)</value>
	</data>
	<data name="label4.Text">
		<value>更新間隔(&amp;F)</value>
	</data>
	<data name="tabDisplay.Text">
		<value>表示</value>
	</data>
	<data name="button1.Text">
		<value>&amp;OK</value>
	</data>
	<data name="label9.Text">
		<value>デフォルト記事フォーマットか、カスタム XSLT フォーマットを使う</value>
	</data>
	<data name="label5.Text">
		<value>カテゴリ(&amp;C)</value>
	</data>
	<data name="checkMarkItemsReadOnExit.Text">
		<value>フィード終了時に記事を開封済みにする(&amp;M)</value>
	</data>
	<data name="checkEnableAlerts.Text">
		<value>新着記事のアラート表示を有効にする(&amp;E)</value>
	</data>
	<data name="labelFormatters.Text">
		<value>スタイルシート(&amp;S)</value>
	</data>
	<data name="comboBox1.Items">
		<value>0</value>
	</data>
	<data name="comboMaxItemAge.ToolTip">
		<value>キャッシュしたアイテムの保存する期間を指定します</value>
	</data>
	<data name="comboFormatters.ToolTip">
		<value>フォーマット用スタイルシートを選択します</value>
	</data>
	<data name="checkCustomFormatter.ToolTip">
		<value>カスタム XSLT フォーマットを使う場合、チェックします</value>
	</data>
	<data name="comboBox1.Items8">
		<value>120</value>
	</data>
	<data name="comboBox1.Items2">
		<value>30</value>
	</data>
	<data name="comboBox1.Items3">
		<value>45</value>
	</data>
	<data name="comboBox1.Items1">
		<value>15</value>
	</data>
	<data name="comboBox1.Items6">
		<value>90</value>
	</data>
	<data name="comboBox1.Items7">
		<value>105</value>
	</data>
	<data name="comboBox1.Items4">
		<value>60</value>
	</data>
	<data name="comboBox1.Items5">
		<value>75</value>
	</data>
<data name="tabAttachments.Text">
    <value>Attachments/Podcasts</value>
  </data>
	<data name="checkDownloadEnclosures.Text">
    <value>Automatically download attachments and podcasts</value>
  </data>
	<data name="checkEnableEnclosureAlerts.Text">
    <value>&amp;Enable alert windows for newly downloaded attachments and podcasts</value>
  </data>
	</root>