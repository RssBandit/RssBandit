<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ext="clr-namespace:RssBandit.WinGui.MarkupExtensions"
                    xmlns:Converters="clr-namespace:RssBandit.Converters"
                    xmlns:igDock="http://infragistics.com/DockManager"
                    xmlns:ViewModel="clr-namespace:RssBandit.WinGui.ViewModel"
                    xmlns:ig="http://schemas.infragistics.com/xaml"
                    xmlns:b="clr-namespace:RssBandit.WinGui.Behaviors">

    <DataTemplate DataType="{x:Type ViewModel:MainWindowViewModel}">
        <Grid>
            <Grid.Resources>
                <Converters:EnumParameterToVisibilityConverter x:Key="enumToVisibilityConverter" />
            </Grid.Resources>
            <igDock:XamDockManager Name="xamDockManager" Theme="{Binding Path=CurrentTheme, Mode=TwoWay}"
                                   b:ShellLayoutDockManagerAdapter.LayoutManager="{Binding LayoutManager}">
                <!-- according to http://help.infragistics.com/Help/NetAdvantage/WPF/2010.3/CLR4.0/html/xamDockManager_About_Saving_and_Loading_Layouts.html
                     we name all relevant split/docking panes to get flexible for the future while support persist/restore of user-docking layouts -->
                <igDock:XamDockManager.Panes>
                    <igDock:SplitPane Name="subscriptionsSplitPane">
                        <igDock:ContentPane Name="subscriptionsDockingPane" Header="{ext:Res Id=MainForm_SubscriptionNavigatorCaption,Default=Subscriptions#}">
                            <TreeView Name="tree" Grid.Column="0" 
                                    VirtualizingStackPanel.IsVirtualizing = "true" VirtualizingStackPanel.VirtualizationMode="Recycling"
                                    ItemsSource="{Binding FeedSources.Sources}" 
                                    b:SelectedItemProxy.SelectedItemInput="{Binding ElementName=tree, Path=SelectedItem}"
                                    b:SelectedItemProxy.SelectedItem="{Binding SelectedTreeNodeItem, Mode=OneWayToSource}"
                      >
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem">
                                        <!-- used also to display expanded folder image(s) -->
                                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    </Style>
                                </TreeView.ItemContainerStyle>
                            </TreeView>
                        </igDock:ContentPane>
                    </igDock:SplitPane>

                </igDock:XamDockManager.Panes>

                <!--We can use Add a layout container or a DocumentContentHost here... -->
                <igDock:DocumentContentHost>
                    <igDock:SplitPane Name="subscriptionDetailsSplitPane">
                        <igDock:TabGroupPane Name="subscriptionDetailsTabGroupPane">
                            <!-- 
                                according to http://help.infragistics.com/Help/NetAdvantage/WPF/2010.3/CLR4.0/html/xamDockManager_About_Saving_and_Loading_Layouts.html
                                we use the SerializationId additional to Name, to enable restore of dynamically created web browser tabs via InitializePaneContent event. 
                                For this purpose we encode a dynamic SerializationId like so "::webBrowserTab::URL". This way we do not need to maintain/write/read a
                                separate "Open Browsers URL" history file.
                            -->
                            <igDock:ContentPane Name="subscriptionDetailsDockingPane" SerializationId="::defaultSubscriptionDetails" 
                                                Header="{ext:Res Id=FeedDetailDocumentTabCaption,Default=FeedDetails#}">
                                <StackPanel>
                                    <ig:XamGrid Visibility="{Binding CurrentItemDetailsView, Converter={StaticResource enumToVisibilityConverter},ConverterParameter=SingleLine}" 
                                                ItemsSource="{Binding SelectedTreeNodeItem.NewsItems}" />
                                    <ListView  Visibility="{Binding CurrentItemDetailsView, Converter={StaticResource enumToVisibilityConverter},ConverterParameter=MultiLine}" 
                                               ItemsSource="{Binding SelectedTreeNodeItem.NewsItems}"  />
                                </StackPanel>
                            </igDock:ContentPane>
                        </igDock:TabGroupPane>
                    </igDock:SplitPane>
                </igDock:DocumentContentHost>

            </igDock:XamDockManager>

        </Grid>
    </DataTemplate>
</ResourceDictionary>