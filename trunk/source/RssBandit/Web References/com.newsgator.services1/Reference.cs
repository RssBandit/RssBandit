//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.832.
// 
#pragma warning disable 1591

namespace RssBandit.com.newsgator.services1 {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FolderWebServiceSoap", Namespace="http://services.newsgator.com/svc/Folder.asmx")]
    public partial class FolderWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private NGAPIToken nGAPITokenValueField;
        
        private System.Threading.SendOrPostCallback GetOrCreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback RenameFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFoldersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FolderWebService() {
            this.Url = "http://services.newsgator.com/ngws/svc/Folder.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public NGAPIToken NGAPITokenValue {
            get {
                return this.nGAPITokenValueField;
            }
            set {
                this.nGAPITokenValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetOrCreateFolderCompletedEventHandler GetOrCreateFolderCompleted;
        
        /// <remarks/>
        public event CreateFolderCompletedEventHandler CreateFolderCompleted;
        
        /// <remarks/>
        public event DeleteFolderCompletedEventHandler DeleteFolderCompleted;
        
        /// <remarks/>
        public event MoveFolderCompletedEventHandler MoveFolderCompleted;
        
        /// <remarks/>
        public event RenameFolderCompletedEventHandler RenameFolderCompleted;
        
        /// <remarks/>
        public event GetFoldersCompletedEventHandler GetFoldersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/svc/Folder.asmx/GetOrCreateFolder", RequestNamespace="http://services.newsgator.com/svc/Folder.asmx", ResponseNamespace="http://services.newsgator.com/svc/Folder.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetOrCreateFolder(string name, int parentId, string root) {
            object[] results = this.Invoke("GetOrCreateFolder", new object[] {
                        name,
                        parentId,
                        root});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrCreateFolder(string name, int parentId, string root, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrCreateFolder", new object[] {
                        name,
                        parentId,
                        root}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetOrCreateFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrCreateFolderAsync(string name, int parentId, string root) {
            this.GetOrCreateFolderAsync(name, parentId, root, null);
        }
        
        /// <remarks/>
        public void GetOrCreateFolderAsync(string name, int parentId, string root, object userState) {
            if ((this.GetOrCreateFolderOperationCompleted == null)) {
                this.GetOrCreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrCreateFolderOperationCompleted);
            }
            this.InvokeAsync("GetOrCreateFolder", new object[] {
                        name,
                        parentId,
                        root}, this.GetOrCreateFolderOperationCompleted, userState);
        }
        
        private void OnGetOrCreateFolderOperationCompleted(object arg) {
            if ((this.GetOrCreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrCreateFolderCompleted(this, new GetOrCreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/svc/Folder.asmx/CreateFolder", RequestNamespace="http://services.newsgator.com/svc/Folder.asmx", ResponseNamespace="http://services.newsgator.com/svc/Folder.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateFolder(string name, int parentId, string root) {
            object[] results = this.Invoke("CreateFolder", new object[] {
                        name,
                        parentId,
                        root});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateFolder(string name, int parentId, string root, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateFolder", new object[] {
                        name,
                        parentId,
                        root}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateFolder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFolderAsync(string name, int parentId, string root) {
            this.CreateFolderAsync(name, parentId, root, null);
        }
        
        /// <remarks/>
        public void CreateFolderAsync(string name, int parentId, string root, object userState) {
            if ((this.CreateFolderOperationCompleted == null)) {
                this.CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFolderOperationCompleted);
            }
            this.InvokeAsync("CreateFolder", new object[] {
                        name,
                        parentId,
                        root}, this.CreateFolderOperationCompleted, userState);
        }
        
        private void OnCreateFolderOperationCompleted(object arg) {
            if ((this.CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFolderCompleted(this, new CreateFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/svc/Folder.asmx/DeleteFolder", RequestNamespace="http://services.newsgator.com/svc/Folder.asmx", ResponseNamespace="http://services.newsgator.com/svc/Folder.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFolder(int id) {
            this.Invoke("DeleteFolder", new object[] {
                        id});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteFolder(int id, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteFolder", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(int id) {
            this.DeleteFolderAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteFolderAsync(int id, object userState) {
            if ((this.DeleteFolderOperationCompleted == null)) {
                this.DeleteFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteFolder", new object[] {
                        id}, this.DeleteFolderOperationCompleted, userState);
        }
        
        private void OnDeleteFolderOperationCompleted(object arg) {
            if ((this.DeleteFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/svc/Folder.asmx/MoveFolder", RequestNamespace="http://services.newsgator.com/svc/Folder.asmx", ResponseNamespace="http://services.newsgator.com/svc/Folder.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveFolder(int id, int newParentId) {
            this.Invoke("MoveFolder", new object[] {
                        id,
                        newParentId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginMoveFolder(int id, int newParentId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("MoveFolder", new object[] {
                        id,
                        newParentId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndMoveFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void MoveFolderAsync(int id, int newParentId) {
            this.MoveFolderAsync(id, newParentId, null);
        }
        
        /// <remarks/>
        public void MoveFolderAsync(int id, int newParentId, object userState) {
            if ((this.MoveFolderOperationCompleted == null)) {
                this.MoveFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveFolderOperationCompleted);
            }
            this.InvokeAsync("MoveFolder", new object[] {
                        id,
                        newParentId}, this.MoveFolderOperationCompleted, userState);
        }
        
        private void OnMoveFolderOperationCompleted(object arg) {
            if ((this.MoveFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/svc/Folder.asmx/RenameFolder", RequestNamespace="http://services.newsgator.com/svc/Folder.asmx", ResponseNamespace="http://services.newsgator.com/svc/Folder.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RenameFolder(int id, string newName) {
            this.Invoke("RenameFolder", new object[] {
                        id,
                        newName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRenameFolder(int id, string newName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RenameFolder", new object[] {
                        id,
                        newName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndRenameFolder(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void RenameFolderAsync(int id, string newName) {
            this.RenameFolderAsync(id, newName, null);
        }
        
        /// <remarks/>
        public void RenameFolderAsync(int id, string newName, object userState) {
            if ((this.RenameFolderOperationCompleted == null)) {
                this.RenameFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRenameFolderOperationCompleted);
            }
            this.InvokeAsync("RenameFolder", new object[] {
                        id,
                        newName}, this.RenameFolderOperationCompleted, userState);
        }
        
        private void OnRenameFolderOperationCompleted(object arg) {
            if ((this.RenameFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RenameFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("NGAPITokenValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.newsgator.com/svc/Folder.asmx/GetFolders", RequestNamespace="http://services.newsgator.com/svc/Folder.asmx", ResponseNamespace="http://services.newsgator.com/svc/Folder.asmx", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlElement GetFolders() {
            object[] results = this.Invoke("GetFolders", new object[0]);
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetFolders(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetFolders", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlElement EndGetFolders(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlElement)(results[0]));
        }
        
        /// <remarks/>
        public void GetFoldersAsync() {
            this.GetFoldersAsync(null);
        }
        
        /// <remarks/>
        public void GetFoldersAsync(object userState) {
            if ((this.GetFoldersOperationCompleted == null)) {
                this.GetFoldersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFoldersOperationCompleted);
            }
            this.InvokeAsync("GetFolders", new object[0], this.GetFoldersOperationCompleted, userState);
        }
        
        private void OnGetFoldersOperationCompleted(object arg) {
            if ((this.GetFoldersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFoldersCompleted(this, new GetFoldersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.832")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.newsgator.com/svc/Folder.asmx")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://services.newsgator.com/svc/Folder.asmx", IsNullable=false)]
    public partial class NGAPIToken : System.Web.Services.Protocols.SoapHeader {
        
        private string tokenField;
        
        /// <remarks/>
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetOrCreateFolderCompletedEventHandler(object sender, GetOrCreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrCreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrCreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateFolderCompletedEventHandler(object sender, CreateFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void MoveFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void RenameFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetFoldersCompletedEventHandler(object sender, GetFoldersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFoldersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFoldersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlElement Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlElement)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591