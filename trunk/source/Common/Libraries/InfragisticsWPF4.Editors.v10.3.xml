<?xml version="1.0"?>
<doc>
    <assembly>
        <name>InfragisticsWPF4.Editors.v10.3</name>
    </assembly>
    <members>
        <member name="M:LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="M:InternalDynamicResourceString.#ctor(Infragistics.Shared.ResourceCustomizer,System.Globalization.CultureInfo,System.String,System.Object[])">
            <summary>
            This constructor is for internal use only.
            </summary>
        </member>
        <member name="M:InternalDynamicResourceString.GetStringFromResource(System.String,System.Globalization.CultureInfo)">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> types to UI Automation
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer.#ctor(Infragistics.Windows.Editors.ValueEditor)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.ValueEditor"/>
            </summary>
            <returns>A string that contains 'ValueEditor'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer.VerifyIsInEditMode">
            <summary>
            Ensures that the editor is in edit mode.
            </summary>
            <remarks>
            <p class="body">This method will attempt to put the editor into edit mode if it is not in edit mode. If that fails it will raise an exception.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer.Editor">
            <summary>
            Returns the <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> associated with the automation peer.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer.#ctor(Infragistics.Windows.Editors.XamComboEditor)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>ComboBox</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/>
            </summary>
            <returns>A string that contains 'XamComboEditor'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the element that is associated with this <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemAutomationPeer">
            <summary>
            Exposes the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemAutomationPeer.#ctor(Infragistics.Windows.Editors.CalendarItem)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/>
            </summary>
            <returns>A string that contains 'CalendarItem'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> that corresponds with this <see cref="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer">
            <summary>
            Exposes the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer.#ctor(Infragistics.Windows.Editors.CalendarItemGroup)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
            <returns>A string that contains 'CalendarItemGroup'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> that corresponds with this <see cref="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupTitleAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupTitle"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupTitleAutomationPeer.#ctor(Infragistics.Windows.Editors.CalendarItemGroupTitle)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupTitle"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupTitle"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupTitleAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupTitleAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupTitle"/>
            </summary>
            <returns>A string that contains 'CalendarItemGroupTitle'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupTitleAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupTitle"/> that corresponds with this <see cref="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupTitleAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer.#ctor(Infragistics.Windows.Editors.XamMonthCalendar,System.DateTime)">
            <summary>
            Initializes a new instance of <see cref="T:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer"/>
            </summary>
            <param name="xamMonthCalendar">An <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> instance</param>
            <param name="dateTime">An <see cref="T:System.DateTime"/> structure</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.DateTime"/>
            </summary>
            <returns>A string that contains 'DateTime'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer.GetNameCore">
            <summary>
            Returns the day for the <see cref="T:System.DateTime"/> that corresponds with the DateTime struct that is associated with this <see cref="T:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:System.DateTime"/> that corresponds with this <see cref="T:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer.GetUnderlyingPeer">
            <summary>
            Returns the automation peer for which this proxy is associated.
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.SelectedDateAutomationPeer.IsEnabledCore">
            <summary>
            Returns a value indicating whether the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> that corresponds with the object that is associated with this <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> can receive and send events.
            </summary>
            <returns><b>True</b> if the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> can send and receive events; otherwise, <b>false</b>.</returns>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.XamCheckEditorAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Windows.Editors.XamCheckEditor"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamCheckEditorAutomationPeer.#ctor(Infragistics.Windows.Editors.XamCheckEditor)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamCheckEditorAutomationPeer"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.XamCheckEditor"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamCheckEditorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Edit</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamCheckEditorAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.XamCheckEditor"/>
            </summary>
            <returns>A string that contains 'XamCheckEditor'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamCheckEditorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.XamMaskedEditorAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMaskedEditorAutomationPeer.#ctor(Infragistics.Windows.Editors.XamMaskedEditor)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamMaskedEditorAutomationPeer"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMaskedEditorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Edit</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMaskedEditorAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/>
            </summary>
            <returns>A string that contains 'XamMaskedEditor'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMaskedEditorAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.LabelAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer.#ctor(Infragistics.Windows.Editors.XamMonthCalendar)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Custom</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
            <returns>A string that contains 'XamOutlookBar'</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern associated with the specified <see cref="T:System.Windows.Automation.Peers.PatternInterface"/> for the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> that corresponds with this <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer"/>.
            </summary>
            <param name="patternInterface">The pattern being requested</param>
        </member>
        <member name="T:Infragistics.Windows.Automation.Peers.Editors.XamTextEditorAutomationPeer">
            <summary>
            Exposes <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> types to UI Automation
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamTextEditorAutomationPeer.#ctor(Infragistics.Windows.Editors.XamTextEditor)">
            <summary>
            Creates a new instance of the <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamTextEditorAutomationPeer"/> class
            </summary>
            <param name="owner">The <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> for which the peer is being created</param>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamTextEditorAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns an enumeration indicating the type of control represented by the automation peer.
            </summary>
            <returns>The <b>Edit</b> enumeration value</returns>
        </member>
        <member name="M:Infragistics.Windows.Automation.Peers.Editors.XamTextEditorAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/>
            </summary>
            <returns>A string that contains 'XamTextEditor'</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.ComboBoxItemsProvider">
            <summary>
            Used for specifying items on a <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/>.
            </summary>
            <remarks>
            <para class="body">
            <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> value editor is not an ItemsControl. The way you specify
            the items to display it its drop-down is by setting its <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/>
            property.
            </para>
            <seealso cref="T:Infragistics.Windows.Editors.XamComboEditor"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.#ctor">
            <summary>
            Constructor. Initializes a new instance of <see cref="T:Infragistics.Windows.Editors.ComboBoxItemsProvider"/> class.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboBoxItemsProvider.VersionProperty">
            <summary>
            Identifies the <see cref="T:System.Version"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayMemberPath"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.ShouldSerializeDisplayMemberPath">
            <summary>
            Returns true if the DisplayMemberPath property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.ResetDisplayMemberPath">
            <summary>
            Resets the DisplayMemberPath property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayTextComparerProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayTextComparer"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemMemberProviderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemMemberProvider"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemsSource"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.ShouldSerializeItemsSource">
            <summary>
            Returns true if the ItemsSource property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.ResetItemsSource">
            <summary>
            Resets the ItemsSource property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValueComparerProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValueComparer"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValuePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValuePath"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.ShouldSerializeValuePath">
            <summary>
            Returns true if the ValuePath property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.ResetValuePath">
            <summary>
            Resets the ValuePath property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.DirtyCachedItems">
            <summary>
            Dirties the cached items and sort indexs.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.FindItemHolderFromDataValueHelper(System.Object,System.Int32,Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemHolder@)">
            <summary>
            Finds ItemHolder for the specified data value.
            </summary>
            <param name="dataValue">Data value for which to get the item holder.</param>
            <param name="preferredIndex">This only matters when there are multiple items with the same data values. 
            In that case if the item at this index matches the specified data value then the associated item holder will
            be returned. Otherwise the first matching item holder will be returned.
            </param>
            <param name="itemHolder">This out parameter will be set to the found item holder.</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.GetItemAtIndex(System.Int32)">
            <summary>
            Returns the item the specified index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.GetItemIndex(System.Object)">
            <summary>
            Returns the selected index value associated with the specified listObject.
            </summary>
            <param name="listObject"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayMemberPath">
            <summary>
            Specifies the path into the selected item from which to get the text.
            The Text and DisplayText properties will return values from this path.
            </summary>
            <remarks>
            <para class="body">
            DisplayMemberPath specifies the list object property to use to get the text for the editor.
            When an item is selected from the drop-down, the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property
            returns the item itself. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> 
            properties return the value of the property specified by <b>DisplayMemberPath</b> from that selected 
            item.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayTextComparer">
            <summary>
            Specifies a custom comparer to use for comparing display text associated with each combo-box item.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemMemberProvider">
            <summary>
            Specifies an interface that the ComboBoxItemsProvider will use to get value and display text
            for each data item in its items source.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that you don't normally have to provide this interface. The ComboBoxItemsProvider
            has default logic to get the value and display text for each item based on the <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValuePath"/>
            and <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayMemberPath"/> properties. However you can provide this interface if you
            have custom logic for generating value and display texts or to improve performance when you
            have a large number of data items in the items source, since the default logic involves using
            reflection to evaluate value and display member paths. Note that if you use <see cref="T:Infragistics.Windows.Editors.ComboBoxDataItem"/>
            objects as data items then this property will be ignored since such an interface is not 
            necessary in that case.
            </para>
            <seealso cref="T:Infragistics.Windows.Editors.ComboBoxDataItem"/>
            <seealso cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValuePath"/>
            <seealso cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.DisplayMemberPath"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.Items">
            <summary>
            Returns the items to be displayed in the drop-down portion of this XamComboEditor.
            </summary>
            <remarks>
            <para class="body">
            See <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemsSource"/> for more information on how to specify items for the
            XamComboEditor's drop-down.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemsSource"/>
            <seealso cref="T:Infragistics.Windows.Editors.XamComboEditor"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemsSource">
            <summary>
            Specifies the collection from which to populate the drop-down list of the associated XamComboEditor.
            </summary>
            <remarks>
            <para class="body">
            There are two ways you can specify the items to display in the drop-down of the XamComboEditor.
            You can set the ItemsSource property to a collection of items to display in the drop-down or
            you can add items to the collection returned <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.Items"/> property.
            Note that you can not do both at the same time. When you specify the <b>ItemsSource</b> property,
            the <b>Items</b> property will return a collection that's read-only. It will reflect the same
            items as the ItemsSource however it will be read-only. Any changes made to the ItemsSource will
            also be reflected by the Items property.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValueComparer">
            <summary>
            Specifies a custom comparer to use for comparing values associated with each combo-box item.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ValuePath">
            <summary>
            Specifies the path into the selected item from which to get the data value.
            The Value property will return values from this path.
            </summary>
            <remarks>
            <para class="body">
            ValuePath specifies the list object property to use to get the value for the editor.
            When an item is selected from the drop-down, the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property
            returns the item itself. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property returns the
            value of the property specified by <b>ValuePath</b> from that selected item.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditorDefaultConverter.HandleNullValueHelper(System.Boolean,System.Object,System.Type,Infragistics.Windows.Editors.ValueEditor,System.Object@)">
            <summary>
            Handles null and empty string values.
            </summary>
            <param name="convertingBack">Whether converting back.</param>
            <param name="value">Value to convert.</param>
            <param name="targetType">Type to convert the value to.</param>
            <param name="editor">Optional - can be null.</param>
            <param name="convertedValue">This will be assigned the converted value.</param>
            <returns>Returns true if the value was handled.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.IndexComparer.#ctor(Infragistics.Windows.Editors.ComboBoxItemsProvider.CachedInfo,System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="cachedInfo"></param>
            <param name="compareByDisplayText"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.IndexComparer.ConvertDataValue(Infragistics.Windows.Editors.ComboBoxItemsProvider.CachedInfo,System.Object,System.Type)">
            <summary>
            Conversion routine for use by index comparer.
            </summary>
            <param name="cacheInfo"></param>
            <param name="value"></param>
            <param name="targetType"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxItemsProvider.IndexComparer.DisplayTextEquals(Infragistics.Windows.Editors.ComboBoxItemsProvider,System.String,System.String,System.Boolean)">
            <summary>
            If partial is true then checks if the overallText starts with searchText.
            </summary>
            <param name="itemsProvider"></param>
            <param name="searchText"></param>
            <param name="overallText"></param>
            <param name="partial"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.IItemMemberProvider">
            <summary>
            Used by the ComboBoxItemsProvider's <see cref="P:Infragistics.Windows.Editors.ComboBoxItemsProvider.ItemMemberProvider"/> property.
            Used for providing value and display text associated with each item in the ComboBoxItemsProvider's
            items source.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.IItemMemberProvider.GetValue(System.Object)">
            <summary>
            Gets the value for the specified data item.
            </summary>
            <param name="dataItem">Gets the value for this data item.</param>
            <returns>Value associated with the specified data item.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.IItemMemberProvider.GetDisplayText(System.Object)">
            <summary>
            Gets the display text for the specified data item.
            </summary>
            <param name="dataItem">Gets the display text for this data item.</param>
            <returns>Display text associated with the specified data item.</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.DisplayValueSource">
            <summary>
            Used for specifying the XamComboEditor's <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSource"/> property.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValue"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSource"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayValueSource.DisplayText">
            <summary>
            Editor's <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> property's value is used as 
            the content of the edit portion of the editor.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayValueSource.Value">
            <summary>
            Editor's <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property's value is used as the 
            content of the edit portion of the editor.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayValueSource.SelectedItem">
            <summary>
            Editor's <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property's value is used
            as the content of the edit portion of the editor.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DropDownButtonDisplayMode">
            <summary>
            Used for specifying the XamComboEditor's <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonDisplayMode"/> property.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonDisplayMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonDisplayMode"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.DropDownButtonDisplayMode.Always">
            <summary>
            Always display the button.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DropDownButtonDisplayMode.MouseOver">
            <summary>
            Display the button when the mouse is over. Note that this option will always display
            the button when the editor is in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DropDownButtonDisplayMode.Focused">
            <summary>
            Display the button when the editor is focus.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DropDownButtonDisplayMode.OnlyInEditMode">
            <summary>
            Display the button only when in edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.ComboBoxDataItem">
            <summary>
            <b>ComboBoxDataItem</b> is a class for holding value, display text and optionally an image.
            A default template is defined for ComboBoxDataItem that displays the image and display text.
            Main purpose of this object is to let you easily map value and display text and optionally
            display an image for each item inside an items control, like XamComboEditor.
            </summary>
            <remarks>
            <para class="body">
            You can populate an items control like XamComboEditor with <b>ComboBoxDataItem</b> instances.
            This lets you easily map values to display texts and optionally display an image inside
            each item in the items control. All without having to create a custom object or control
            template for the item.
            </para>
            <seealso cref="T:Infragistics.Windows.Editors.XamComboEditor"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.#ctor(System.Object)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value associated with this combobox data item</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.#ctor(System.Object,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="value">Value associated with this combobox data item</param>
            <param name="displayText">Text to display for this item</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ShouldSerializeDisplayText">
            <summary>
            Returns true if the DisplayText property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ResetDisplayText">
            <summary>
            Resets the DisplayText property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ShouldSerializeImage">
            <summary>
            Returns true if the Image property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ResetImage">
            <summary>
            Resets the Image property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ShouldSerializeTag">
            <summary>
            Returns true if the Tag property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ResetTag">
            <summary>
            Resets the Tag property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ShouldSerializeValue">
            <summary>
            Returns true if the Value property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ResetValue">
            <summary>
            Resets the Value property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboBoxDataItem.ToString">
            <summary>
            Returns the display text.
            </summary>
            <returns>The value of the <see cref="P:Infragistics.Windows.Editors.ComboBoxDataItem.DisplayText"/> property.</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxDataItem.DisplayText">
            <summary>
            Gets or sets the display text associated with the item.
            </summary>
            <remarks>
            <para class="body">
            Display text associated with the item is displayed for each item in both the drop down
            and combo portion. If display text is not specified, text representation of <see cref="P:Infragistics.Windows.Editors.ComboBoxDataItem.Value"/>
            will be used.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxDataItem.Image">
            <summary>
            Gets or sets the image to display in the item.
            </summary>
            <remarks>
            <para class="body">
            You can display an image in each item by setting this property to an ImageSource instance.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxDataItem.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <remarks>
            <para class="body">
            Tag is not used by the item in any way. It simply provides a way for you to associate
            a piece of data with an item for your reference.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ComboBoxDataItem.Value">
            <summary>
            Gets or sets the value associated with this item.
            </summary>
        </member>
        <member name="E:Infragistics.Windows.Editors.ComboBoxDataItem.PropertyChanged">
            <summary>
            IBindingList.ListChanged event implementation.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamComboEditor">
            <summary>
            An editor that displays a list of items in a drop down from which the user can select an entry.
            The editor also supports entering any arbitrary value in the edit portion.
            </summary>
            <remarks>
            <para class="body">
            <b>XamComboEditor</b> is a value editor that displays a list of items in a drop down from which the 
            user can select an entry. The editor also supports entering any arbitrary value in the edit portion.
            </para>
            <para class="body">
            The way you populate items in the drop-down of this editor is by creating a <see cref="T:Infragistics.Windows.Editors.ComboBoxItemsProvider"/>
            object and setting the editor's <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/> property. ComboBoxItemsProvider
            exposes ItemsSource and Items properties just like an ItemsControl for specifying items either by binding
            to an external collection of items using ItemsSource property or directly populating the Items property.
            </para>
            <para class="body">
            The default <b>ValueType</b> for this editor is string. However, you can set the data type to a different type.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.TextEditorBase">
            <summary>
            Abstract base class for text based value editors.
            </summary>
            <remarks>
            <para class="body">
            <b>TextEditorBase</b> class is an abstract base class from which text based
            value editors derive. For example, <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/> and 
            <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> derive from this class. Note that it's not
            necessary for a text based editor to derive from this class however this
            class provides a common set of functionality for text based value editors.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValueEditor">
            <summary>
            An abstract base class that provides functionality for displaying or edit values. 
            </summary>
            <remarks>
            <p class="body"><b>ValueEditor</b> is the base class for a control that may either be used directly or 
            may be embedded within value editor hosts such as <b>XamDataGrid</b>. When hosted within the <see cref="T:Infragistics.Windows.Editors.ValuePresenter"/> 
            of a value editor host, the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsEmbedded"/> property will return true.</p>
            <p class="body">The <b>ValueEditor</b> exposes <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> and <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> properties that return 
            the current value and the text representation of that value respectively. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> is 
            used to convert between the <b>Value</b> and <b>Text</b>.</p>
            <p class="body">The <b>ValueEditor</b> supports being put into edit mode. When in edit mode, the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> of the control 
            can be changed by the end user. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> can be set to a <see cref="T:Infragistics.Windows.Editors.ValueConstraint"/> 
            instance to provide constraints such as minimum and maximum values that can be used to limit what is considered a valid value for the 
            control. The ValueConstraint's <see cref="P:Infragistics.Windows.Editors.ValueConstraint.Nullable"/> property can be used to specify if the control will accept a null entry. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> 
            property determines how the control should behave when it is exiting edit mode and the current value is not valid.</p>
            <p class="note"><b>Note:</b> Since <i>ValueEditor</i> is an abstract base class, it can not be instantiated 
            directly. Instead, you need to create one of the concrete derived types such as <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/>, 
            <see cref="T:Infragistics.Windows.Editors.XamCheckEditor"/> or <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.ValueEditor"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.HitTestCore(System.Windows.Media.PointHitTestParameters)">
            <summary>
            Overridden.
            </summary>
            <param name="hitTestParameters"></param>
            <returns></returns>
            <remarks>
            <p class="body">
            This method is overridden on this class to make sure the value editor gets mouse messages
            regardless of whether its background is transparent or not.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.ValueEditorAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnInitialized(System.EventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Overridden. Called when the value of IsKeyboardFocusWithin property changes.
            </summary>
            <param name="e"></param>
            <remarks>
            <p class="body">
            This method is overridden to ensure that when the value editor receives keyboard focus, its focus site
            (the element designated as PART_FocusSite in the control template) is given the keyboard focus. For example,
            when XamTextEditor receives keyboard focus, it gives keyboard focus to the TextBox control that it uses
            for editing. This way all the keyboard messages get delivered to the TextBox control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Overridden. Called when a key is pressed.
            </summary>
            <remarks>
            <p class="body">
            ValueEditor overrides OnKeyDown to handle certain key presses when it's not in embedded mode.
            <p class="body">
            <b>Note:</b> This is not a comprehensive list of key commands that are handled by the editor.
            Derived value may provide logic for other key strokes using .NET Commands infrastructure or
            indirectly by embedding another control inside the editor that processes keyboard messages.
            </p>
            <ul>
            <li><b>Escape:</b> Exits edit mode.</li>
            <li><b>Enter:</b> Enters edit mode.</li>
            <li><b>F2:</b> Toggles edit mode.</li>
            </ul>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved within the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved outside the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed.
            </summary>
            <param name="e">The event arguments</param>
            <remarks>
            <p class="body">
            ValueEditor overrides this method to give focus to the editor and enter edit mode
            if necessary in response to left mouse button down.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Overridden. This method is called when the editor looses focus.
            </summary>
            <param name="e">Associated event args.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a property value has changed
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.EditModeEndedEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/> routed event
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeEnded(Infragistics.Windows.Editors.Events.EditModeEndedEventArgs)">
            <summary>
            This method is called when the control has just exited edit mode. This method raises 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/> event.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.EditModeEndingEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/> routed event
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)">
            <summary>
            This method is called when the control is about to exit edit mode. This method raises 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/> event.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.EditModeStartedEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/> routed event
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeStartedEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)">
            <summary>
            This method is called when the control has just entered edit mode. This method raises 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/> event.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.EditModeStartingEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/> routed event
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeStartingEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)">
            <summary>
            This method is called when the control is about to enter edit mode. This method raises 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/> event.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.EditModeValidationErrorEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError"/> routed event
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeValidationError(Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeValidationError(Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs)">
            <summary>
            Occurs when there is an input validation error
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeValidationErrorEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.AlwaysValidateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.AlwaysValidate"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeAlwaysValidate">
            <summary>
            Returns true if the AlwaysValidate property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetAlwaysValidate">
            <summary>
            Resets the AlwaysValidate property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.ValueChangedEvent">
            <summary>
            Event ID for the 'ValueChanged' routed event
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnValueChanged(System.Object,System.Object)">
            <summary>
            Called when <b>Value</b> property changes or the contents of the editor changes.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnCoerceValue(System.Object)">
            <summary>
            Called from the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property's CoerceValue handler. The default 
            implementation performs type conversions therefore you should call the base implementation
            to ensure proper type conversions are performed.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.TextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.TextChangedEvent">
            <summary>
            Event ID for the 'TextChanged' routed event
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnTextChanged(System.String,System.String)">
            <summary>
            Called when property 'Text' changes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnCoerceText(System.String)">
            <summary>
            Called from the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property's CoerceValue handler. The default 
            implementation does nothing.
            </summary>
            <param name="text">The text to coerce</param>
            <returns>Coerced value</returns>
            <remarks>
            <para class="body">
            The default implementation simply returns the value of <paramref name="text"/> parameter.
            The derived editors can override this method to provide editor specific coersion logic.
            </para>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.ValueTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnValueTypeChanged(System.Type)">
            <summary>
            Called when the value of <b>ValueType</b> property changes.
            </summary>
            <param name="newType"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeValueType">
            <summary>
            Returns true if the ValueType property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetValueType">
            <summary>
            Resets the ValueType property to its default value.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.ValueConstraintProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnValueConstraintChanged(System.String)">
            <summary>
            This method is called whenever the ValueConstraint or one of its properties changes.
            </summary>
            <param name="valueConstraintPropertyName">Null if the ValueConstraint itself changed or 
            the name of the property that changed.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeValueConstraint">
            <summary>
            Returns true if the ValueConstraint property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetValueConstraint">
            <summary>
            Resets the ValueConstraint property to its default value of <b>null</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeInvalidValueBehavior">
            <summary>
            Returns true if the InvalidValueBehavior property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetInvalidValueBehavior">
            <summary>
            Resets the InvalidValueBehavior property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.IsValueValidProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.EditTemplateProperty">
            <summary>
            Identifies the 'EditTemplate' dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.EditTemplateChangedEvent">
            <summary>
            Event ID for the 'EditTemplateChanged' routed event
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnEditTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)">
            <summary>
            Called when property 'EditTemplate' changes
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditTemplateChanged"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.HasValueChangedProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.ValueEditor.HasValueChanged"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfoPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfo"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfoProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfo"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.IsEmbeddedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsEmbedded"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.IsFocusWithinProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsFocusWithin"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.IsInEditModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsInEditMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.IsReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsReadOnly"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeIsReadOnly">
            <summary>
            Returns true if the IsReadOnly property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetIsReadOnly">
            <summary>
            Resets the IsReadOnly property to its default value of <b>false</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.OriginalValuePropertyKey">
            <summary>
            Identifies the key for the <see cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.OriginalValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.ReadOnlyProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ReadOnly"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeReadOnly">
            <summary>
            Returns true if the ReadOnly property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetReadOnly">
            <summary>
            Resets the ReadOnly property to its default value of <b>false</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.ThemeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Theme"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnThemeChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Theme"/> property has changed
            </summary>
            <param name="newTheme"></param>
            <param name="oldTheme"></param>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.FormatProviderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeFormatProvider">
            <summary>
            Returns true if the FormatProvider property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetFormatProvider">
            <summary>
            Resets the FormatProvider property to its default value of <b>null</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueEditor.FormatProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ShouldSerializeFormat">
            <summary>
            Returns true if the Format property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ResetFormat">
            <summary>
            Resets the Format property to its default value of <b>null</b>.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.CanEditType(System.Type)">
            <summary>
            Determines if the editor natively supports editing values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports editing values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            CanEditType method indicates if the editor natively supports editing values
            of specified type. Typically there is no need to call this method. It's used
            by the value editor infrastructure.
            </p>
            <p class="body">
            <b>Note:</b> CanEditType does not indicate what types can be set on the 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property. ValueType property can be set to
            any type as long as there is conversion logic for converting between the native
            data type of the editor and that type. For example, <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/>
            natively supports editing string type only. However its ValueType can be set to
            Double or DateTime or any type as long as the editor can convert between string
            and that data type. ValueType can even be set to a custom type. You can provide
            custom conversion logic using <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>
            and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/> properties.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.CanRenderType(System.Type)">
            <summary>
            Determines if the editor natively supports displaying of values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports displaying values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            CanRenderType method indicates if the editor natively supports displaying values
            of specified type. Typically there is no need to call this method. It's used
            by the value editor infrastructure.
            </p>
            <p class="body">
            See <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanEditType(System.Type)"/> for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)">
            <summary>
            Exits edit mode.
            </summary>
            <param name="acceptChanges">If True will accept any changes that were made while in edit mode.</param>
            <param name="force">If True will prevent the cancellation of the action.</param>
            <remarks>
            <p class="body">
            EndEditMode exits edit mode, validating the user input in the process if 
            <paramref name="acceptChanges"/> is True. If acceptChanges is False then
            the user input is discarded and the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> is restored
            back to the original value.
            </p>
            <p class="body">
            As part of the process of exitting edit mode, <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/> and
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/> events are raised. You can cancel 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/> event to cancel exitting edit mode.
            </p>
            <p class="body">
            <b>Note:</b> Typically there is no need to call this method directly. The editor will automatically
            enter and exit edit mode as necessary. For example, when using the editor embedded inside a field of 
            a XamDataGrid, the editor is put into edit mode automatically when the cell is clicked and exits edit 
            mode when the focus leaves the cell. When using the editor as a stand-alone control, the editor
            will automatically enter edit mode when the editor receives focus (for example via a mouse click
            or when tabbing into it) and exit edit mode when the editor looses focus. This default behavior
            can be controlled using the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> property.
            </p>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.GetDefaultEditorForType(System.Type)">
            <summary>
            Gets the default editor for a data type.
            </summary>
            <param name="dataType">The type of the data to be edited.</param>
            <returns>A type that derives from ValueEditor or null if no editor has been registered for the data type.</returns>
            <remarks>
            <para class="body">
            GetDefaultEditorForType returns the editor that will be used by default for the specified
            data type. ValueEditor maintains a static table that associates a data type with the default
            editor to use to edit that data type. This mapping is used by the controls that embedd editors in them
            like the XamDataGrid. XamDataGrid will use this table to determine which editor to use for each of its
            fields based on the field's data type. For example, for a field of Double type, the XamDataGrid
            will query this method to determine the editor to use for the field if none has been explicitly
            specified.
            </para>
            <para class="body">
            The data type to editor mapping is many to one mapping. That is multiple data types can be registered
            to make use of a single editor. However a single data type can not be mapped to multiple editors.
            </para>
            <para class="body">
            You can change the mappings using ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.RegisterDefaultEditorForType(System.Type,System.Type,System.Boolean)"/> static
            method.
            </para>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.RegisterDefaultEditorForType(System.Type,System.Type,System.Boolean)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.InitializeHostInfo(Infragistics.Windows.Editors.ValuePresenter,System.Object)">
            <summary>
            Initializes the editor with the associated host information when it is 
            embedded in another control.
            </summary>
            <param name="host">The ValuePresenter that will be hosting this editor.</param>
            <param name="hostContext">Some data that has meaning to the host which is passed back to the host when calling methods on the ValuePresenter class.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)">
            <summary>
            Indicates whether the desired width or the height of the editor is based on the value.
            </summary>
            <param name="orientation">Orientation of the extent being evaluated. Horizontal indicates the width and vertical indicates the height.</param>
            <returns>True if the extent is based on the value.</returns>
            <remarks>
            <p class="body">
            This method is used by the Infragistics internal infrastructure to determine if an editor's
            desired size changes based on the value of the editor. For example, XamCheckEditor returns
            False for both orientation since its width and height both are not related to its value.
            Whether the value of a XamCheckEditor is True or Flase, it will be the same width and height.
            XamTextEditor on the other hand returns True for the horizontal orientation since since 
            the desired size depends on the current value in the editor. It returns True or False
            for the vertical dimension based on whether wrapping is turned on or off respectively.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.RegisterDefaultEditorForType(System.Type,System.Type,System.Boolean)">
            <summary>
            Registers a default editor for a data type.
            </summary>
            <param name="dataType">The type of the data to be edited.</param>
            <param name="editorType">The type of the editor to be used - must derive from <see cref="T:Infragistics.Windows.Editors.ValueEditor"/>.</param>
            <param name="overlayExisting">If true will overlay any previously registered editor for the data type.</param>
            <remarks>
            <para class="body">
            Use RegisterDefaultEditorForType method to change or register default editor that will get used
            for a data type. The <paramref name="editorType"/> parameter specifies the type of the editor.
            Controls like XamDataGrid making use of this default editor mapping infrastructure will create 
            instances of this editor type to edit fields of <paramref name="dataType"/>.
            The editorType must be a type that derives from <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> class. 
            </para>
            <para class="body">
            You can register custom data types and custom editors as well. You can register a custom data 
            type to make use of an existing editor or you can change the editor of an already registered
            data type to make use of a custom editor or both.
            </para>
            <para class="body">
            See <see cref="M:Infragistics.Windows.Editors.ValueEditor.GetDefaultEditorForType(System.Type)"/> for further information.
            </para>
            <para class="body">
            <b>Note:</b> You can register a different editor for a primitive type and Nullable version of
            the primitive type. If no editor is explicitly registered for the Nullable version of the type
            then the editor for the type will be used.
            </para>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.GetDefaultEditorForType(System.Type)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode">
            <summary>
            Enters edit mode.
            </summary>
            <returns>Returns True if successful, False otherwise.</returns>
            <remarks>
            <p class="body">
            StartEditMode enters the editor into edit mode.
            </p>
            <p class="body">
            As part of the process of entering edit mode, <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/> and
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/> events are raised. You can cancel 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/> event to cancel entering edit mode.
            </p>
            <p class="body">
            <b>Note:</b> Typically there is no need to call this method directly. The editor will automatically
            enter and exit edit mode as necessary. For example, when using the editor embedded inside a field of 
            a XamDataGrid, the editor is put into edit mode automatically when the cell is clicked and exits edit 
            mode when the focus leaves the cell. When using the editor as a stand-alone control, the editor
            will automatically enter edit mode when the editor receives focus (for example via a mouse click
            or when tabbing into it) and exit edit mode when the editor looses focus. This default behavior
            can be controlled using the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> property.
            </p>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode(System.Boolean)">
            <summary>
            Enters edit mode
            </summary>
            <returns>True if the operation was successful</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ValidateCurrentValue">
            <summary>
            Validates the current value of the editor and initializes the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> 
            property based on the results of the value validation.
            </summary>
            <remarks>
            <para class="body">
            ValueEditor automatically validates the value whenever it changes and therefore typically 
            it should not be necessary to call this method. However there may be times when you may
            want to force the value to be re-validated, for instance when the external validation
            criteria changes. This is especially useful when you are overriding the 
            <see cref="M:Infragistics.Windows.Editors.ValueEditor.ValidateCurrentValue(System.Exception@)"/> virtual method to provide custom logic
            for the value validation. The ValueEditor will update the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> 
            property to reflect whether the value is valid or not.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ValidateValue(System.Object,System.Exception@)">
            <summary>
            Returns true if the specified value would be considered to be valid by the editor
            based on implicit as well as explicit value constraints enforced by the editor. 
            </summary>
            <param name="value">Value to check if it's valid.</param>
            <param name="error">If the value is invalid, this is set to an exception containing appropriate error message.</param>
            <returns>True if the specified value is valid, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>ValidateValue</b> method is used to determine if a value is valid or not based
            on the implicit as well as explicit value constraints enforced by the editor.
            Implicit value constraints are <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>,
            <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> etc... and explicit constraints are specified
            via <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ConvertTextToValue(System.String,System.Object@,System.Exception@)">
            <summary>
            Converts the specified text to the value type using the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverterResolved"/>.
            This method is typically called to convert the text modified by the user back to the ValueType.
            </summary>
            <param name="text">The text to convert.</param>
            <param name="value">This out parameter will be set to the converted value.</param>
            <param name="error">If conversion fails, error is set to a value that indicates the error.</param>
            <returns>True if conversion succeeds, False otherwise.</returns>
            <remarks>
            <p class="body">
            ConvertTextToValue is used to convert text into an object of type specified by 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property. This method is typically used to 
            convert the user input in the form of text to the value that gets returned
            from the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property. Value property returns objects 
            of type specified by ValueType property.
            </p>
            <p class="body">
            For example, if the ValueType property of a <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> is set to DateTime type, 
            and the user types in "1/1/07", this method will get called to convert that text value
            into a DateTime object.
            </p>
            <p class="body">
            <b>Note:</b> Typically there is no need for you to call this method directly as this method is 
            automatically called by the ValueEditor itself to perform the necessary conversions between text and value.
            </p>
            <p class="body">
            <b>Note:</b> If you want to override the default conversion logic for converting between text and value,
            set the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
            properties.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ConvertValueToText(System.Object,System.String@,System.Exception@)">
            <summary>
            Converts the specified value to text using the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverterResolved"/>.
            This method is used to display the value of the editor when the editor is in edit mode.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="text">This out parameter will be set to the converted text.</param>
            <param name="error">If conversion fails, error is set to a value that indicates the error.</param>
            <returns>True if conversion succeeds, False otherwise.</returns>
            <remarks>
            <p class="body">
            ConvertValueToText is used to convert value to text. This method is typically used to 
            convert the value of the editor (as specified by the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property)
            into text that the user can edit when the editor enters edit mode. When not in edit mode,
            <see cref="M:Infragistics.Windows.Editors.TextEditorBase.ConvertValueToDisplayText(System.Object,System.String@,System.Exception@)"/> method is used to convert value
            to text that gets displayed in the editor. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property's return value
            corresponds to the text that this method converts where as the <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> 
            property's return value corresponds to the text that ConvertValueToDisplayText method converts.
            </p>
            <p class="body">
            <b>Note</b> that DisplayText and ConvertValueToDisplayText methods are defined on <see cref="T:Infragistics.Windows.Editors.TextEditorBase"/>
            class. This is because display text conversions are only applicable for text based editors, all of which
            derive from TextEditorBase.
            </p>
            <p class="body">
            As an example, the ValueType property of a <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> is set to DateTime type, 
            and the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property is set to a "01/01/2007" DateTime instance.
            This method gets called to convert that DateTime value to a string when the user enters
            edit mode. When the editor is not in edit mode, <see cref="M:Infragistics.Windows.Editors.TextEditorBase.ConvertValueToDisplayText(System.Object,System.String@,System.Exception@)"/>
            is used. The difference between this method and ConvertValueToDisplayText is that the
            ConvertValueToDisplayText will take into account <see cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/>
            and <see cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/> property settings where as ConvertValueToText will not.
            </p>
            <p class="body">
            <b>Note:</b> Typically there is no need for you to call this method directly as this method is 
            automatically called by the ValueEditor itself to perform the necessary conversions between value 
            and text.
            </p>
            <p class="body">
            <b>Note:</b> If you want to override the default conversion logic for converting between value and text,
            set the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
            properties.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.DoInitialization">
            <summary>
            Called from OnInitialized to provide the derived classes an opportunity to 
            perform appropriate initialization tasks. OnInitialized implementation enters
            the editor into edit mode at the end if AlwaysInEditMode is true. This method 
            is called before that.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.InitializeValueProperties">
            <summary>
            Initializes the value properties. This synchronizes all the value properties if one of
            them is set in xaml since we delay syncrhonization until after initialization in case
            other settings in xaml effect how they are synchronized.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.InitializeOriginalValueFromValue">
            <summary>
            Called when starting edit mode to copy the Content propety value into the <see cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/> property.
            </summary>
            <remarks>The default implementation just sets the <see cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/> without any coersions.</remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnFocusSiteChanged">
            <summary>
            Called when the focus site changes.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FocusSite"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.ValidateFocusSite(System.Object,System.Exception@)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.OnIsFocusWithinChanged(System.Boolean)">
            <summary>
            Called when property <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsFocusWithin"/> changes.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ProcessKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Processes the key down event. Default implementation does nothing.
            This class overrides OnKeyDown and performs some default processing and
            then calls this method if further key down processing is to be done.
            Derived classes are intended to override this method instead of OnKeyDown.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.RevertValueBackToOriginalValue">
            <summary>
            Called when ending edit mode and not accepting the changes.
            </summary>
            <remarks>
            <para class="body">
            The default implementation just sets the Value to <see cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/> without any coersions.
            </para>
            <para class="body">
            See <see cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/> for more information on how OriginalValue gets useed.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.VerifyTemplateState">
            <summary>
            Makes sure that either the <see cref="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate"/> or the <b>Template</b> is being used based on 
            whether the editor is in edit mode.
            </summary>
            <remarks>
            <para class="body">
            VerifyTemplateState method makes sure the correct control template is being used based on the
            value of <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsInEditMode"/> property. When in edit mode, the control template specified
            by the <see cref="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate"/> property is used. When not in edit mode, the control template
            specified by the <b>Template</b> property is used. If EditTemplate is not set then no
            action will be taken and the template specified by the Template property will be used.
            </para>
            <para class="body">
            See <see cref="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate"/> for more information.
            </para>
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ValidateFocusSite(System.Object,System.Exception@)">
            <summary>
            Validates the focus site. Returns true if the focus site is acceptable.
            </summary>
            <param name="focusSite">The focus site to validate.</param>
            <param name="errorMessage">If the foucs site is invalid then this out parameter will be assigned relevant error message.</param>
            <returns>True if the focus site is valid, False otherwise.</returns>
            <remarks>
            <para class="body">
            ValidateFocusSite method is called to ensure the element named PART_FocusSite in the control
            template is a valid focus site for the value editor. The default implementation ensures
            that the focus site is either a FrameworkElement or FrameworkContentElement. Derived
            value editors can override this method to further constraint what the focus site can be.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FocusSite"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.ValidateCurrentValue(System.Exception@)">
            <summary>
            Validates the current value of the editor. This method is called by the editor to perform
            editor specific validation of the current value.
            </summary>
            <returns>True if the value is valid, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>ValidateCurrentValue</b> method is called by the editor to determine if the current
            value of the editor is valid or not. It uses this method to update the value of 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> property. The derived editors can override this method to 
            perform editor specific validations.
            </para>
            <para class="body">
            If the value entered by the user is invalid then the editor will take action based
            on the setting of <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> property when the user attempts
            to leave the editor.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.BeginSyncValueProperties">
            <summary>
            Begins synchronization of value properties (Value, Text, DisplayText, SelectedItem etc...).
            This method suspends raising of any value property changed notifications since they all need
            to be raised after all the value properties are synced. You need to use RaiseValuePropertyChangedEvent
            method to raise value property change notification that need to be delayed in this manner.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.EndSyncValueProperties">
            <summary>
            Ends synchronization of value properties and raises any pending value property change 
            notifications. See <see cref="M:Infragistics.Windows.Editors.ValueEditor.BeginSyncValueProperties"/> for more info.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.HasValueChangedInternal(System.Boolean)">
            <summary>
            Gets a value indicating if the value of the editor has changed since entering edit mode.
            </summary>
            <param name="compareWithOriginalValue">If true then checks if the original value and the
            current value are the same and if so returns false.</param>
            <returns>True if the value has changed, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.RaiseValuePropertyChangedEvent(System.Windows.RoutedEventArgs)">
            <summary>
            Raises the specified value property change notification. If value property synchronization
            is in progress, delays raising of the event until the syncrhonization is complete.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.InitializeCachedPropertyValues">
            <summary>
            Initializes the variables used to cache the dependency property values by
            getting the dependency property metadata for this object and getting DefaultValue
            of that metadata for the respective property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.RevalidateCurrentValue">
            <summary>
            Validates the current value and updates the IsValueValid property accordingly. However
            note that this doesn't raise any events or display error messages. It simply checks if the
            current value is valid and based on that updates the IsValueValid property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditor.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>
            Called to synchronize value and text properties. Derived classes can override this
            method if they have their own value properties (like the XamCheckEditor which has
            IsChecked property) because the Value, Text and all other editor specific value
            related properties need to be kept in sync. Default implementation synchronizes
            Value and Text properties.
            </summary>
            <param name="prop">Property that changed.</param>
            <param name="newValue">New value of the property.</param>
            <param name="error">Set this to the any error message if synchronization fails (for example
            because of type conversion or some other problem with syncrhonizing the new value).</param>
            <returns>Value indicating whether the new value should be considered valid. If false is
            returned, IsValueValid property will be set to false.</returns>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded">
            <summary>
            Occurs when the control has just exited edit mode
            </summary>
            <remarks>
            <p class="body">
            See <see cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/> and <see cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            methods for more information.
            </p>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeEnded(Infragistics.Windows.Editors.Events.EditModeEndedEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeEndedEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeEndedEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding">
            <summary>
            Occurs when the control is about to exit edit mode
            </summary>
            <remarks>
            <p class="body">
            See <see cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/> and <see cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            methods for more information.
            </p>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeEndingEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted">
            <summary>
            Occurs when the control has just entered edit mode
            </summary>
            <remarks>
            <p class="body">
            See <see cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/> and <see cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            methods for more information.
            </p>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeStartedEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeStartedEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting">
            <summary>
            Occurs when the control is about to enter edit mode
            </summary>
            <remarks>
            <p class="body">
            See <see cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/> and <see cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            methods for more information.
            </p>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeStartingEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeStartingEventArgs"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError">
            <summary>
            Occurs when the user attempts to leave the editor with an invalid value.
            </summary>
            <remarks>
            <para class="body">
            The editor validates the user input when the user attempts to leave the control
            after modifying the value of the editor. EditModeValidationError event is raised 
            if the modified value is invalid. The editor considers a value invalid if the entered
            text can not be parsed into <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> or it does not satisfy all the
            constraints specified by the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>. 
            </para>
            <para class="body">
            See <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> and <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> for more information.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnEditModeValidationError(Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeValidationErrorEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.AlwaysValidateResolved">
            <summary>
            Read-only. Gets the resolved value of the <see cref="P:Infragistics.Windows.Editors.ValueEditor.AlwaysValidate"/> property.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.CultureInfoResolved">
            <summary>
            Returns the culture info resolved from format provider setting and then from the language setting.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.FormatProviderResolved">
            <summary>
            Returns the resolved format provider.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.InternalIsInitialized">
            <summary>
            Returns the value of _initialized flag.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.LanguageCultureInfo">
            <summary>
            Returns the CultureInfo associated with the Language property setting.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverterResolved">
            <summary>
            Resolved converter used for converting editor value to editor text.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.AlwaysValidate">
            <summary>
            Specifies whether to validate the editor's value even if the user doesn't modify the value. Default value
            is <b>False</b> where the editor only validates the value if the user modifies it.
            </summary>
            <remarks>
            <para class="body">
            By default the editor validates the value only if the user has modified it, even if the editor's value is
            invalid. If the user doesn't modify the value and tries the leave the editor with invalid value that the
            editor was initialized with, no validation takes place. You can change this behavior by setting 
            <b>AlwaysValidate</b> to true, where the editor will
            take validation action based on the <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> property setting as long as the 
            editor's value is invalid, regardless of whether the the user has modified it or not.
            </para>
            <para class="body">
            As an example, let's say ValueConstraint on the editor had MinLength constraint set to 5. The editor is
            initialized with string value "a", which doesn't meet the MinLength of 5 constraint. The editor's 
            IsValueValid would be <i>false</i>, since the current value doesn't meet the value constraint. If the 
            user tries to leave the editor without modifying the value, by default the editor will not take any 
            validation action and prompt the user of invalid value. However if you set <i>AlwaysValidate</i> to 
            <i>true</i>, the editor will take validation action. Note that if the user modifies the value, then
            the editor will validate regardless of this property setting.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.Value">
            <summary>
            Gets or sets the value of the editor.
            </summary>
            <remarks>
            <para class="body">
            The <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property specifies the type of values returned and expected 
            by the <b>Value</b> property. For example, if you set the <b>ValueType</b> to 
            <i>Decimal</i> then the <b>Value</b> property will return decimal values. The user input will
            be converted to Decimal before returning from Value property. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> 
            property on the other hand always returns the text representation of the value.
            </para>
            <para class="note">
            <b>Note:</b> Setting the <b>Value</b> property will also update the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property.
            </para>
            <para class="note">
            <b>Note:</b> As the user enters/modifies the contents of the <see cref="T:Infragistics.Windows.Editors.ValueEditor"/>, the 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> and <b>Value</b> properties will be synchronously updated to reflect the current 
            contents. If the user input can not be parsed into the associated <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>, the <b>Text</b> 
            property will be updated however the <b>Value</b> property will retain last parsed value. In such 
            a case, the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> property will return <b>false</b> indicating that the user input 
            is invalid.</para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.HasValueChanged"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.TextChanged"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged">
            <summary>
            Occurs when Value property changes or the user modifies the contents of the editor.
            </summary>
            <remarks>
            <para class="body">
            ValueChanged event is raised when the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property is changed or
            the user modifies the contents of the editor. When the user modifies the contents of 
            the editor, the Value property is updated to reflect the new content. However the
            editor may fail to update the Value property if the new contents of the editor can
            not be prased into the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>. For example if the ValueType is
            set to a numeric type like Double and the user enters a non-numeric value then the
            entered value can not be parsed into a Double. Therefore the Value property will not
            be updated. However the ValueChanged event will still be raised.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.Text">
            <summary>
            Gets or sets the value of the editor as text.
            </summary>
            <remarks>
            <para class="body">
            Setting the <b>Text</b> property will also update the <b>Value</b> property. If the
            new text can not be parsed into the value type (<see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>) then the
            <b>Value</b> property will not be updated. However note that the <see cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
            event will still be raised.
            </para>
            <para class="body">
            <b>Note:</b> As the user enters/modifies contents, the Text and Value properties will
            be synchronously updated to reflect the current contents. If the user input can not be 
            parsed into the value type, the Text property will be updated however the Value property 
            will retain last parsed value. However in such a case <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            property will return False indicating that the user input is invalid.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.HasValueChanged"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.TextChanged"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.TextChanged">
            <summary>
            Occurs when property 'Text' changes
            </summary>
            <remarks>
            <para class="body">
            TextChanged event is raised when the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property is changed or
            the user modifies the contents of the editor. When the user modifies the contents of 
            the editor, the Text property is updated to reflect the new content.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.ValueType">
            <summary>
            Gets or sets the type of values that this editor manipulates.
            </summary>
            <remarks>
            <para class="body">
            <b>ValueType</b> specifies the type of values that this editor manipulates. The 
            Value property will return objects of this type. Also the user input will be
            validated accordingly as well. That is when the user enters some text, the text
            will be parsed into an object of this type. If parsing fails then the input
            is considered invalid. If parsing succeeds, the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property is
            updated with the parsed value. 
            </para>
            <para class="body">
            You can use the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> property to find out if the current 
            input is valid. For the input to be considered valid, the editor must be able to
            parse the input text into an object of <i>ValueType</i> and it must satisfy
            any constraints specified via this <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.HasValueChanged"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint">
            <summary>
            Gets or sets the constraints for editor input. Default value is <b>null</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that the default value of this property is <b>null</b>. You must set
            the property to an instance of <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> object.
            </para>
            <para class="body">
            <b>ValueConstraint</b> is used to limit what the user can input into the editor.
            More accurately, the editor will consider user input invalid if it doesn't
            satisfy one or more criteria specified by the <i>ValueConstraint</i>. The 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> property can be used to find out if editor considers
            current value valid.
            </para>
            <para class="body">
            When an invalid value is entered into the editor, there are behavioral implications
            based on various settings. For example, by default the editor doesn't exit edit mode
            when the current input is invalid. The action taken by the editor can be controlled
            using the <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.HasValueChanged"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior">
            <summary>
            Specifies what action to take when the user attempts to leave the editor with an invalid value.
            </summary>
            <remarks>
            <para class="body">
            <b>InvalidValueBehavior</b> specifies what action to take when the user tries to leave
            the editor after entering an invalid value.
            </para>
            <para class="body">
            There are various ways a value in the editor can be considered invalid by the editor.
            If the entered text can not be parsed into an object of type specified by 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property, then the value is considered invalid. For
            example, if the ValueType is set to <i>Int32</i> or any other numeric type and the user 
            enteres a non-numeric text then the text can not be parsed into the value type. As a result
            the editor will consider the input invalid.
            </para>
            <para class="body">
            Another way the value can be considered invalid is if the entered value can not satisfy
            constraints specified by <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> object. For example, if
            <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinInclusive"/> is specified as 10 and the value entered is 8
            then the value does not satisfy the constraints and thus will be considred invalid.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueConstraint.Nullable"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter">
            <summary>
            Specifies the converter used for converting between text and value.
            </summary>
            <remarks>
            <para class="body">
            The conversions between the 'string' and the <b>ValueType</b> by default are done using 
            built in conversion logic. You can override the conversion logic by setting the
            <b>ValueToDisplayTextConverter</b> and <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>. 
            <b>ValueToTextConverter</b> is used when the editor is in edit mode where as 
            <b>ValueToDisplayTextConverter</b> is used when the editor is not in edit mode.
            </para>
            <para class="body">
            Note: An editor can edit values of types other than 'string'. For example, a <i>XamTextEditor</i> 
            can edit values of types <i>DateTime</i>. You can specify the type of values being edited 
            by the editor using the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property.
            </para>
            <para class="body">
            Although the built-in default conversion logic should be sufficient for
            most situations, you may want make use of this functionality to provide
            custom logic for converting user input into value type object. Examples
            where this would be needed are if you are editing custom objects where the
            built-in conversion logic would not know how to convert text into custom
            object type. Or you want to support entering certain symbols in the text
            that signify certain aspect of the value - for example you want 'k' in '2k'
            to be interpreted as 1000 magnitude, or +1d to be interpreted as tomorrow's
            date when editing DateTime.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid">
            <summary>
            Specifies whether the current value of the editor is valid.
            </summary>
            <remarks>
            <para class="body">
            This property can be used to find out if the current value of the editor is valid.
            Value is considered valid if it can be coerced into a <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> object
            and it satisfies constraints specified by <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> object.
            </para>
            <para class="body">
            When the user input can not be parsed into an object of type <i>ValueType</i>, the
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property will return the last valid value. However the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            property will return the user input.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate">
            <summary>
            Template used while the editor is in edit mode.
            </summary>
            <remarks>
            <p class="body">
            ValueEditor exposes two ControlTemplate properties: <b>Template</b> property which it inherits from the base
            Control class and the <b>EditTemplate</b> property. Value of Template property is used when the editor is 
            in display mode where as the value of EditTemplate property is used when the editor is in edit mode.
            If EditTemplate is not specified then the editor will use the value of Template property for both edit and
            display mode. This means that the Template property is required however EditTemplate could be left off to 
            null. However note that if you do so, the control template specified by the Template property must support
            editing as well.
            </p>
            <p class="body">
            As an example, <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/>'s Template property uses <b>TextBlock</b> to display the contents.
            Its EditTemplate uses a <b>TextBox</b> to display and edit contents since EditTemplate has to support editing
            as well. TextBlock is more efficient than TextBox and therefore this kind of configuration can result in
            greater rendering speeds, esp. when a lot of editor instances are to be rendered like in a XamDataGrid where
            each cell has an instance of ValueEditor. In a control like XamDataGrid, only one cell can be in edit mode at a
            time and therefore only one ValueEditor instance in the XamDataGrid will use EditTemplate at a time while the 
            rest will use the more efficient control template provided by the Template property.
            </p>
            <p class="body">
            <b>Note:</b> The editors provide default values for Template and EditTemplate properties. You don't need
            to typically set these properties unless you want to change the default control templates used by an editor.
            </p>
            <para class="body">
            <b>Note:</b> When the editor enters edit mode the Template property will be set to the value of
            EditTemplate to apply the edit template. However since the editor needs to switch back to the origianl value 
            of the Template property when the editor exits edit mode, the editor stores the original value
            of Template property so it can revert back to it when the editor exits the edit mode.
            </para>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueEditor.EditTemplateChanged">
            <summary>
            Occurs when property 'EditTemplate' changes
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.HasValueChanged">
            <summary>
            Determines if the content has changed while in edit mode (read-only).
            </summary>
            <remarks>
            <para class="body">
            Note that this property is reset to False when the editor leaves edit mode.
            It's meant to be valid while the editor is in edit mode. When not in edit mode,
            this property will return False.
            </para>
            </remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsInEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfo">
            <summary>
            If the editor's value is invalid, returns error information regarding why it's invalid.
            </summary>
            <remarks>
            <para class="body">
            When the editor's value is invalid, <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> property returns
            false. To get the error information regarding why the value is invalid, use the 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfo"/> property which returns an instance 
            <see cref="T:Infragistics.Windows.Editors.ValidationErrorInfo"/> class.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="T:Infragistics.Windows.Editors.ValidationErrorInfo"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.IsNullable">
            <summary>
            Indicates whether the user can delete all the contents of the value editor. Default is <b>true</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>IsNullable</b> indicates to the editor that null editor value (empty contents)
            is considered a valid input. Invalid inputs are handled by <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            property settings.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.NullText"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode">
            <summary>
            Gets/sets whether this editor is always in edit mode but is ignored when the editor is embedded inside another control.
            Default value is <b>False</b>.
            </summary>
            <remarks>
            <para class="body">
            This property defaults to <b>False</b>. When set to False, the editor will exit edit mode 
            when the control looses focus and re-enter edit mode when it receives focus. As a result
            it will also raise the <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>, <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>, 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/> and <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/> events.
            </para>
            <para class="body">
            If you set this property to <b>True</b>, the editor will always remain in edit mode.
            However note that this property is ignored when the editor is embedded inside another 
            control (i.e. is hosted inside a <see cref="T:Infragistics.Windows.Editors.ValuePresenter"/>). When it's embedded,
            it will exit edit mode as directed by the hosting control.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditModeProperty"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.IsInEditModeProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsInEditMode"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.IsEmbedded">
            <summary>
            Returns true if the editor is embedded in another control, e.g. a DataPresenter cell.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.IsEmbeddedProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.IsFocusWithin">
            <summary>
            Returns true if the focus is within this element.
            </summary>
            <remarks>
            <para class="body">
            This property returns true if this element or a descendant element has focus.
            Note that this does not check for keyboard focus. It checks for logical focus
            as managed by the <see cref="T:System.Windows.Input.FocusManager"/> class.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.IsInEditMode">
            <summary>
            Gets/sets whether this editor is in edit mode.
            </summary>
            <remarks>
            <p class="body">
            Note that setting this property will cause the editor to enter or exit edit mode
            depending on the set value.
            </p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.IsInEditModeProperty"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.EndEditMode(System.Boolean,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.IsReadOnly">
            <summary>
            Specifies whether the user is allowed to modify the value in the editor. Default value is <b>false</b>.
            </summary>
            <remarks>
            <para class="body">
            If <b>IsReadOnly</b> is set to <b>True</b> the user will not be allowed to modify the
            value of the editor. However note that you will still be able to modify the value of 
            the editor in code via for example its <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property.
            The default value of this property is <b>False</b>.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.OriginalValue">
            <summary>
            Gets the original value while in edit mode (read-only)
            </summary>
            <remarks>
            <para class="body">
            Note that <b>OriginalValue</b> property is only valid during edit mode.
            This property is reset when the editor re-enters edit mode. If 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> is set to True, the OriginalValue
            is also reset when the editor receives focus.
            Essentially the <b>OriginalValue</b> property keeps track of the 
            original value when the user enters the editor. This is used to revert 
            back to the original value if the user decides to cancel the edit 
            operation.
            </para>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.OriginalValueProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.ReadOnly">
            <summary>
            Specifies whether the user is allowed to modify the value in the editor. Default value is <b>false</b>.
            </summary>
            <remarks>
            <para class="body">
            If <b>ReadOnly</b> is set to <b>True</b> the user will not be allowed to modify the
            value of the editor. However note that you will still be able to modify the value of 
            the editor in code via for example its <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property.
            The default value of this property is <b>False</b>.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.Theme">
            <summary>
            Gets/sets the theme of the control
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.ThemeProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider">
            <summary>
            Specifies format provider used for converting between value and text.
            </summary>
            <remarks>
            <para class="body">
            <b>FormatProvider</b> is used to convert between text and the value. The editor
            will use this along with <see cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/> property setting to convert the value 
            to text for display purposes. Note that when editing, only the <i>FormatProvider</i> will 
            be used and the <i>Format</i> property will be ignored. This is to facilitate easier
            editing of values without the clutter of formatting symbols.
            </para>
            <para class="body">
            The default behavior can be changed by providing custom conversion logic using 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
            properties.
            </para>
            <para class="body">
            <b>Note:</b> <b>FormatProvider</b> property is of type <b>IFormatProvider</b> interface. IFormatProvider 
            is implemented by <b>CultureInfo</b> object therefore this property can be set to an instance of 
            <b>CultureInfo</b>. You can also use <b>DateTimeFormatInfo</b> or <b>NumberFormatInfo</b> as these 
            implement the interface as well.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> 
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.Format">
            <summary>
            Specifies format used for converting between value and text.
            </summary>
            <remarks>
            See <see cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/> property for more information.
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.DefaultValueToTextConverter">
            <summary>
            Returns the default converter used for converting between the value and the text.
            </summary>
            <remarks>
            <para class="body">
            DefaultValueToTextConverter returns a value converter that provides the default
            logic for converting between value and text. Derived editor classes can override
            this property to return editor specific conversion logic. If you want to provide
            custom conversion logic, use the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>
            and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/> properties.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.FocusSite">
            <summary>
            Returns the element in the visual tree that was named 'PART_FocusSite'. 
            </summary>
            <remarks>
            <para class="body">
            This will be a class derived from FrameworkElement or FrameworkContentElement or null.
            </para>
            <para class="body">
            FocusSite indicates the element that will receive keyboard focus whenever the editor
            is in edit mode. This way the keyboard messages get delivered to this element. 
            For example, <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> defines a TextBox as PART_FocusSite in its
            edit control template. Whenever XamTextEditor is in edit mode, it gives focus to
            the TextBox so all the keyboard messages get delivered to the TextBox for processing.
            </para>
            <para class="body">
            Different editors will define different elements as their FocusSite. If you define
            a custom edit template for an editor, make sure the element that will perform the 
            editing in response to keyboard messages is named PART_FocusSite so the editor
            knows which element to give keyboard focus when it receives the focus.
            </para>
            </remarks>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.OnFocusSiteChanged"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.EditTemplate"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsFocusWithin"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueEditor.Host">
            <summary>
            Returns the associated <see cref="T:Infragistics.Windows.Editors.ValuePresenter"/> if any.
            </summary>
            <remarks>
            <para class="body">
            If this editor is embedded inside another control like XamDataGrid's cell for example,
            the <b>Host</b> property will return the <see cref="T:Infragistics.Windows.Editors.ValuePresenter"/> element that's 
            hosting the editor. If this editor is being used as a standalone control then this 
            property will return null.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsEmbedded"/>
            <seealso cref="T:Infragistics.Windows.Editors.ValuePresenter"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.TextEditorBase"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.DoInitialization">
            <summary>
            Overridden. Called from OnInitialized to provide the derived classes an opportunity to 
            perform appropriate initialization tasks. OnInitialized implementation enters
            the editor into edit mode at the end if AlwaysInEditMode is true. This method 
            is called before that.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Overridden. Called when a property value has changed.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>
            Overridden. Called to synchronize value and text properties. Derived classes can override this
            method if they have their own value properties (like the XamCheckEditor which has
            IsChecked property) because the Value, Text and all other editor specific value
            related properties need to be kept in sync. Default implementation synchronizes
            Value and Text properties.
            </summary>
            <param name="prop">Property that changed.</param>
            <param name="newValue">New value of the property.</param>
            <param name="error">Set this to the any error message if synchronization fails (for example
            because of type conversion or some other problem with syncrhonizing the new value).</param>
            <returns>Value indicating whether the new value should be considered valid. If false is
            returned, IsValueValid property will be set to false.</returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.TextEditorBase.DisplayTextPropertyKey">
            <summary>
            DisplayText property key.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.TextEditorBase.DisplayTextProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.TextEditorBase.NullTextProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.TextEditorBase.NullText"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.ShouldSerializeNullText">
            <summary>
            Returns true if the NullText property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.ResetNullText">
            <summary>
            Resets the NullText property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverterProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.ConvertDisplayTextToValue(System.String,System.Object@,System.Exception@)">
            <summary>
            Converts the specified display text to the value type using the <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverterResolved"/>.
            </summary>
            <param name="displayText">The display text to convert.</param>
            <param name="value">This out parameter will be set to the converted value.</param>
            <param name="error">If conversion fails, error is set to a value that indicates the error.</param>
            <returns>True if conversion succeeds, False otherwise.</returns>
            <remarks>
            <p class="body">
            ConvertDisplayTextToValue is used to convert display text into an object of type specified by 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property. This method is typically not used by the editor
            itself, however other controls utilizing the editor can call this method to convert display text
            into the value that gets returned from the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property. Value 
            property returns objects of type specified by ValueType property.
            </p>
            <p class="body">
            <b>NOTE:</b> This method will only succeed if <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/> has been
            specified to a converter that can successfully parse the display text into the value. If 
            <i>ValueToDisplayTextConverter</i> has not been specified, then the framework parsing methods
            will be used in which case the success of this method depends on whether these methods can correctly
            parse the display text.
            </p>
            <p class="body">
            As an example of parsing display text, if the ValueType property of a <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> is set 
            to DateTime type, and the display text parameter is specified as "01/01/07", this method will return 
            the DateTime object that represents that date. Conversion will be done based on the editor's
            FormatProvider property and if its not specified then the current language or culture setting.
            </p>
            <p class="body">
            <b>Note:</b> Typically there is no need for you to call this method directly. This method is meant
            to be used to perform necessary conversions between display text and value by external controls like 
            the data presenter, which for example uses this to convert texts being pasted into cells into cell
            values.
            </p>
            <p class="body">
            <b>Note:</b> If you want to override the default conversion logic for converting between text 
            and value, set the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> and 
            <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/> properties.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.ConvertValueToDisplayText(System.Object,System.String@,System.Exception@)">
            <summary>
            Converts the specified value to display text using the <b>ValueToDisplayTextConverterResolved</b>.
            Returns true if the conversion succeeds. This method is used to display the value of the editor
            when the editor is not in edit mode.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="text">This will be set to the converted text.</param>
            <param name="error">If conversion fails, error is set to a value that indicates the error.</param>
            <returns>True if success, false otherwise.</returns>
            <remarks>
            <p class="body">
            See remarks section of <see cref="M:Infragistics.Windows.Editors.ValueEditor.ConvertValueToText(System.Object,System.String@,System.Exception@)"/> method for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.MouseLeftButtonDown_ToggleDropDownHelper(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            This is called to drop down the drop-down when the editor is entered into edit mode
            as a result of a mouse click. When the editor enters edit mode, its template cannot
            toggle the drop down because the template is switched from edit to render template.
            This interferes with framework mouse processing and prevents the drop-down buttons to
            from receiving clicks. Therefore we have to do it manually. This method is for that.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.SyncDisplayText">
            <summary>
            Synchronizes the DisplayText property with the value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.UpdateDropDownButtonVisibility">
            <summary>
            Updates the DropDownButtonVisibility property according to the current state of the editor
            and DropDownButtonDisplayMode property setting.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)">
            <summary>
            This method is called when the control is about to exit edit mode. This method raises 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/> event.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden. Called when the left mouse button is pressed.
            </summary>
            <param name="e">The event args.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.TextEditorBase.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden. Preview method called when the left mouse button is pressed.
            </summary>
            <param name="e">The event args containing more information on the mouse event.</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.TextEditorBase.DefaultValueToDisplayTextConverter">
            <summary>
            Returns the default converter used for converting between the value and the text.
            </summary>
            <para class="body">
            DefaultValueToDisplayTextConverter returns a value converter that provides the default
            logic for converting between value and display text. Derived editor classes can override
            this property to return editor specific conversion logic. If you want to provide
            custom conversion logic, use the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>
            and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/> properties.
            </para>
        </member>
        <member name="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText">
            <summary>
            Returns the display text. Note that display text is only used when the editor is not in edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.TextEditorBase.NullText">
            <summary>
            The text to display when the value of the editor is null and the editor is not in edit mode.
            The default value is empty string.
            </summary>
            <remarks>
            <para class="body">
            Note that the <b>NullText</b> does not specify whether the user is allowed to enter null values
            into the editor. For that, use the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsNullable"/> property.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter">
            <summary>
            Specifies the converter used for converting between display text and value.
            </summary>
            <remarks>
            <para class="body">
            The conversions between the 'string' and the <b>ValueType</b> by default are done using 
            built in conversion logic. You can override the default conversion logic by setting the
            <b>ValueToDisplayTextConverter</b> and <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>. 
            <b>ValueToTextConverter</b> is used when the editor is in edit mode where as 
            <b>ValueToDisplayTextConverter</b> is used when the editor is not in edit mode.
            </para>
            <para class="body">
            Note: An editor can edit values of types other than 'string'. For example, a <i>XamTextEditor</i> 
            can edit values of types <i>DateTime</i>. You can specify the type of values being edited 
            by the editor using the <see cref="T:System.ValueType"/> property.
            </para>
            <para class="body">
            For most situations the default conversion logic along with the <see cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/>
            and <see cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/> format properties should be sufficient in providing various
            formatting capabilities.
            </para>
            <para class="body">
            Although the built-in default conversion logic should be sufficient for
            most situations, you may want make use of this functionality to provide
            custom logic for converting value into display text. Examples where this
            would be needed are if you want to present a value like tomorrow and
            yesterday's dates as date as words 'Tomorrow' and 'Yesterday' respectively,
            or apply any kind of custom formatting that could not be specified using
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/> and <see cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/> property settings.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverterResolved">
            <summary>
            Resolved converter used for converting editor value to editor display text.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/>
        </member>
        <member name="T:Infragistics.Windows.Editors.ISupportsSelectableText">
            <summary>
            Interface implemented by ValueEditor derived classes that support selecting text.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ISupportsSelectableText.SelectAll">
            <summary>
            Selects all text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ISupportsSelectableText.SelectionStart">
            <summary>
            Gets/sets the starting location of the selected text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ISupportsSelectableText.SelectionLength">
            <summary>
            Gets/sets the length of the selected text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ISupportsSelectableText.SelectedText">
            <summary>
            Gets/sets the selected text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ISupportsSelectableText.TextLength">
            <summary>
            Gets the total length of text in the editor.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> class
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ExecutingCommandEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamComboEditor.ExecutingCommand"/> routed event
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.ExecutingCommand"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)">
            <summary>
            Occurs before a command is performed
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.ExecutingCommand"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.ExecutingCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ExecutedCommandEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamComboEditor.ExecutedCommand"/> routed event
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.ExecutedCommand"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)">
            <summary>
            Occurs after a command is performed
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.ExecutedCommand"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.ExecutedCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DropDownOpenedEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownOpened"/> routed event
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnDropDownOpened(System.Windows.RoutedEventArgs)"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnDropDownOpened(System.Windows.RoutedEventArgs)">
            <summary>
            This method is called when the drop-down list is opened. It raises <see cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownOpened"/> event.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownOpened"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DropDownClosedEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/> routed event
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnDropDownClosed(System.Windows.RoutedEventArgs)"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnDropDownClosed(System.Windows.RoutedEventArgs)">
            <summary>
            This method is called when the drop-down list is closed. It raises <see cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/> event.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.CanEditType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports editing values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports editing values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            XamComboEditor's implementation returns True for only the string type since that's
            the only data type it natively renders and edits.
            </p>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanEditType(System.Type)"/> for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.CanRenderType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports displaying of values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports displaying values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            XamComboEditor's implementation returns True for only the string type since that's
            the only data type it natively renders and edits.
            </p>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanRenderType(System.Type)"/> for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.InitializeValueProperties">
            <summary>
            Overridden. Initializes the value properties. This synchronizes all the value properties if one of
            them is set in xaml since we delay syncrhonization until after initialization in case
            other settings in xaml effect how they are synchronized.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)">
            <summary>
            Overridden. Indicates whether the desired width or the height of the editor is based on the value.
            </summary>
            <param name="orientation">Orientation of the extent being evaluated. Horizontal indicates the width and vertical indicates the height.</param>
            <returns>True if extent is based on the value.</returns>
            <remarks>
            <para class="body">
            XamComboEditor's implementation returns True for horizontal dimension since the value of the editor 
            affects the width of the control. It returns False for the vertical dimension.
            </para>
            <para class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)"/> for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnCoerceText(System.String)">
            <summary>
            Overridden. Called from the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property's CoerceValue handler.
            </summary>
            <param name="text">The text to coerce</param>
            <returns>Coerced value</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnCoerceValue(System.Object)">
            <summary>
            Overridden. Called from the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property's CoerceValue handler.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamComboEditorAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)">
            <summary>
            This method is called when the control has just entered edit mode. This method raises 
            <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/> event.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnFocusSiteChanged">
            <summary>
            Overridden. Called when the focus site changes.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FocusSite"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.ValidateFocusSite(System.Object,System.Exception@)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Overridden. Called when a dependency property changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>
            Overridden. Called to synchronize value and text properties. Derived classes can override this
            method if they have their own value properties (like the XamCheckEditor which has
            IsChecked property) because the Value, Text and all other editor specific value
            related properties need to be kept in sync. Default implementation synchronizes
            Value and Text properties.
            </summary>
            <param name="prop">Property that changed.</param>
            <param name="newValue">New value of the property.</param>
            <param name="error">Set this to the any error message if synchronization fails (for example
            because of type conversion or some other problem with syncrhonizing the new value).</param>
            <returns>Value indicating whether the new value should be considered valid. If false is
            returned, IsValueValid property will be set to false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ValidateFocusSite(System.Object,System.Exception@)">
            <summary>
            Validates the focus site. Returns true if the focus site is acceptable.
            </summary>
            <param name="focusSite">The focus site to validate.</param>
            <param name="errorMessage">If the foucs site is invalid then this out parameter will be assigned relevant error message.</param>
            <returns>True if the focus site is valid, False otherwise.</returns>
            <remarks>
            <para class="body">
            XamComboEditor's implementation of ValidateFocusSite makes sure that the focus site is a TextBox.
            </para>
            <para class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.ValidateFocusSite(System.Object,System.Exception@)"/> for more information.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FocusSite"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.EditPortionWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.EditPortionWidth"/> dependency property. This property indicates
            the width of the edit part of the editor, especially relevant with ComboEditorTool where
            there is a label, icon etc...
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ComboBoxStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ComboBoxStyle"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeComboBoxStyle">
            <summary>
            Returns true if the ComboBoxStyle property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetComboBoxStyle">
            <summary>
            Resets the ComboBoxStyle property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ComboEditorProperty">
            <summary>
            For internal use only. This property is used from ComboBox template as a convenient
            way of getting the XamComboEditor associated with it.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.GetComboEditor(System.Windows.DependencyObject)">
            <summary>
            For internal use only. See <see cref="F:Infragistics.Windows.Editors.XamComboEditor.ComboEditorProperty"/> for more info.
            </summary>
            <param name="element">The target element.</param>
            <returns>The value of the property.</returns>
            <remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.ComboEditorProperty"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.SetComboEditor(System.Windows.DependencyObject,Infragistics.Windows.Editors.XamComboEditor)">
            <summary>
            For internal use only. See <see cref="F:Infragistics.Windows.Editors.XamComboEditor.ComboEditorProperty"/> for more info.
            </summary>
            <param name="element">The target element.</param>
            <param name="value">The value to set on the property.</param>
            <returns>The value of the property.</returns>
            <remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.ComboEditorProperty"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ComboEditorComboBoxStyleKey">
            <summary>
            The key used to identify the combo box style used for the ComboBox inside the XamComboEditor
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DisplayValuePropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DisplayValueProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSource"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeDisplayValueSource">
            <summary>
            Returns true if the DisplayValueSource property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetDisplayValueSource">
            <summary>
            Resets the DisplayValueSource property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DisplayValueTemplateKey">
            <summary>
            The key used to identify the template used to display editor values when the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSource"/> is set to <i>Value</i>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonDisplayMode"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeDropDownButtonDisplayMode">
            <summary>
            Returns true if the DropDownButtonDisplayMode property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetDropDownButtonDisplayMode">
            <summary>
            Resets the DropDownButtonDisplayMode property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonStyle"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeDropDownButtonStyle">
            <summary>
            Returns true if the DropDownButtonStyle property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetDropDownButtonStyle">
            <summary>
            Resets the DropDownButtonStyle property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonVisibilityProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeDropDownResizeMode">
            <summary>
            Returns true if the DropDownResizeMode property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetDropDownResizeMode">
            <summary>
            Resets the DropDownResizeMode property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.IsDropDownOpen"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnCoerceIsDropDownOpen(System.Windows.DependencyObject,System.Object)">
            <summary>
            When IsDroppedDown is set, we need to make sure that the editor is in edit mode and if not
            enter it into edit mode. That's what this coerce handler does.
            </summary>
            <param name="dependencyObject"></param>
            <param name="valueAsObject"></param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.IsEditableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.IsEditable"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeIsEditable">
            <summary>
            Returns true if the IsEditable property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetIsEditable">
            <summary>
            Resets the IsEditable property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ItemsProviderProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeItemsProvider">
            <summary>
            Returns true if the ItemsProvider property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetItemsProvider">
            <summary>
            Resets the ItemsProvider property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ItemsSourceProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsSource"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeItemsSource">
            <summary>
            Returns true if the ItemsSource property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetItemsSource">
            <summary>
            Resets the ItemsSource property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.DisplayMemberPathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayMemberPath"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeDisplayMemberPath">
            <summary>
            Returns true if the DisplayMemberPath property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetDisplayMemberPath">
            <summary>
            Resets the DisplayMemberPath property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.ValuePathProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ValuePath"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeValuePath">
            <summary>
            Returns true if the ValuePath property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetValuePath">
            <summary>
            Resets the ValuePath property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownHeight"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeMaxDropDownHeight">
            <summary>
            Returns true if the MaxDropDownHeight property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetMaxDropDownHeight">
            <summary>
            Resets the MaxDropDownHeight property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownWidth"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeMaxDropDownWidth">
            <summary>
            Returns true if the MaxDropDownWidth property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetMaxDropDownWidth">
            <summary>
            Resets the MaxDropDownWidth property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidth"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ShouldSerializeMinDropDownWidth">
            <summary>
            Returns true if the MinDropDownWidth property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ResetMinDropDownWidth">
            <summary>
            Resets the MinDropDownWidth property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidthResolvedProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidthResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.PreDropDownAreaTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.PreDropDownAreaTemplate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.PostDropDownAreaTemplateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.PostDropDownAreaTemplate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.SelectedIndexProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedIndex"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.SelectedItemProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.SelectedItemChangedEvent">
            <summary>
            Event ID for the 'SelectedItemChanged' routed event
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.OnSelectedItemChanged(System.Object,System.Object)">
            <summary>
            Called when <b>SelectedItem</b> property changes.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamComboEditor.TextAlignmentResolvedProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.XamComboEditor.TextAlignmentResolved"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.InitializeCachedPropertyValues">
            <summary>
            Initializes the variables used to cache the dependency property values by
            getting the dependency property metadata for this object and getting DefaultValue
            of that metadata for the respective property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.ToggleDropDown">
            <summary>
            Toggles the drop down state, entering edit mode if necessary.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamComboEditor.SelectAll">
            <summary>
            Selects all text in the editor.
            </summary>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamComboEditor.ExecutingCommand">
            <summary>
            Occurs before a command is performed
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.ExecutingCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamComboEditor.ExecutedCommand">
            <summary>
            Occurs after a command is performed
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.ExecutedCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamComboEditor.DropDownOpened">
            <summary>
            Occurs when the drop-down list is opened.
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnDropDownOpened(System.Windows.RoutedEventArgs)"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed">
            <summary>
            Occurs when the drop-down list is closed.
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamComboEditor.OnDropDownClosed(System.Windows.RoutedEventArgs)"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DefaultValueToDisplayTextConverter">
            <summary>
            Overridden. Returns the default converter used for converting between the value and the text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DefaultValueToTextConverter">
            <summary>
            Overridden. Returns the default converter used for converting between the value and the text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.ComboBox">
            <summary>
            Returns the underlying ComboBox used to perform the editing. Only valid when the editor is in edit mode.
            </summary>
            <remarks>
            <para class="body">
            This property returns the underlying ComboBox used to perform the editing. This property is
            only valid during edit mode. When not in edit mode, this property returns null. You
            can find out if the editor is in edit mode using <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsInEditMode"/> property.
            </para>
            <para class="body">
            <b>NOTE:</b> You should not use ComboBox property to set the drop-down items. Instead set the 
            XamComboEditor's <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/> or <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsSource"/>
            property.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.ComboBoxStyle">
            <summary>
            Used for setting the Style of the underlying ComboBox used for editing. Default value is null.
            </summary>
            <remarks>
            <para class="body">
            Default value of this property is null. You can use this property to specify a Style object to use for the
            underlying ComboBox used for editing. The value specified on this property will be set on the ComboBox'
            Style property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonDisplayMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.ComboBoxStyleKey">
            <summary>
            Returns the key of the default style of the ComboBox that the XamComboEditor uses.
            </summary>
            <remarks>
            <para class="body">
            You can create a Style object and add it to the Resources collection of an ancestor
            element of the XamComboEditor with this key to override the style of the ComboBox used
            by the XamComboEditor, without completely resplacing it.
            </para>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.ComboEditorComboBoxStyleKey"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValue">
            <summary>
            Indicates the value that's displayed in the edit portion.
            </summary>
            <remarks>
            <para class="body">
            <b>DisplayValue</b> indicates the value that's displayed in the edit portion of the editor.
            It's value depends on the value of <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSource"/> property. If <i>DisplayValueSource</i>
            is set to <i>DisplayText</i> then the property returns the value of <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> 
            property. If the <i>DisplayValueSource</i> is set to <i>Value</i> then the property returns the value of
            the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property. If it's set to <i>SelectedItem</i> then this property returns
            the value of the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSource"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedIndex"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValueSource">
            <summary>
            Specifies whether the editor's <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> or 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> is displayed in the edit portion. Default is <b>DisplayText</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>DisplayValueSource</b> property controls the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValue"/> property's
            value. <i>DisplayValue</i> in turn is used to display the contents of the editor
            in the edit portion. Essentially <i>DisplayValueSource</i> specifies whether to 
            display the display text or the value in the edit portion of the XamComboEditor.
            Default is <b>DisplayText</b>.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DisplayValue"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonDisplayMode">
            <summary>
            Specifies when to display the drop down button. Default is <b>MouseOver</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>DropDownButtonDisplayMode</b> specifies when to display the drop down button.
            The default value of the property is <b>MouseOver</b>. However note that styles 
            of some of the themes may explicitly set this property to some other value to
            ensure consistency with the default operating system behavior. For example, 
            the default XamComboEditor style in "Aero" theme used in Windows Vista sets this 
            property to <b>Always</b>.
            </para>
            <para class="body">
            <b>Note</b> that the drop down button will always be displayed when the editor
            is in edit mode.
            </para>
            <para class="body">
            <b>NOTE:</b> If the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> property is set to True, the
            drop down button will always be displayed and in effect this property will ignored.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonStyle">
            <summary>
            Used for setting the Style of the drop-down button. Default value is null.
            </summary>
            <remarks>
            <para class="body">
            Default value of this property is null. You can use this property to specify a Style object to use for the
            drop-down button displayed inside the editor.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.ComboBoxStyle"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonVisibility">
            <summary>
            Indicates whether the drop down button is currently visible or not.
            </summary>
            <remarks>
            <para class="body">
            This property can be used to find out if the drop down button is visible or not.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownButtonDisplayMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode">
            <summary>
            Specifies whether to allow the user to resize the drop down and if so how.
            Default value of this property is <b>Both</b> which will allow the user to
            resize the drop-down list in both directions - horizontally as well vertically.
            </summary>
            <remarks>
            <para class="body">
            This editor has the functionality to let the user resize the drop-down list
            while it's dropped down. By default value of this property is <b>Both</b> which 
            will let the user resize in both directions, horizontally as well as vertically. You
            can set this property to <b>None</b> to disable resizing.
            </para>
            <para class="body">
            A resize element is displayed at the bottom or bottom-right corner of the drop-down
            depending on whether this property is set to <b>Vertical</b> or <b>Both</b>, respectively.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.IsDropDownOpen">
            <summary>
            Specifies whether the drop down is currently open.
            </summary>
            <remarks>
            <para class="body">
            <b>IsDropDownOpen</b> returns a value indicating whether the drop down is currently open.
            You can set this property to open or close drop down as well. If you set this property
            to true and the editor is not in edit mode, it will be put in edit mode.
            </para>
            <para class="body">
            You can also hook into <see cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownOpened"/> and <see cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/> events
            to be notified when the drop-down is opened and closed.
            </para>
            <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownOpened"/> <seealso cref="E:Infragistics.Windows.Editors.XamComboEditor.DropDownClosed"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.IsEditable">
            <summary>
            Gets or sets a value that enables or disables editing of text in the text box portion of the editor.
            </summary>
            <remarks>
            <para class="body">
            If <b>IsEditable</b> is set to <b>False</b>, the textbox portion of the editor is not editable. It
            will not let you enter any text. In this mode the only way to modify the value of editor is to select an
            item from the drop down. This differs from <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ReadOnly"/> property in that
            the <b>ReadOnly</b> doesn't let you modify the value of the editor at all.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ReadOnly"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider">
            <summary>
            Used for specifying the items to be displayed in the drop down. Default value of this property is null.
            </summary>
            <remarks>
            <para class="body">
            <b>ItemsProvider</b> property is used for specifying the items to be displayed in the drop down. You can
            set this property to a new or an existing instance of <see cref="T:Infragistics.Windows.Editors.ComboBoxItemsProvider"/>. Populate
            the ComboBoxItemsProvider instace with the items to be displayed. A ComboBoxItemsProvider instance can
            be assigned to multiple XamComboEditor instances for efficiency purposes if the drop down items are the same
            across those XamComboEditors. ComboBoxItemsProvider object is the one that manages the items and binding 
            to the items source.
            </para>
            <see cref="T:Infragistics.Windows.Editors.ComboBoxItemsProvider"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.ItemsSource">
            <summary>
            Specifies the collection from which to populate the drop-down of this XamComboEditor.
            This property providers an alternate way of specifying <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/>.
            </summary>
            <remarks>
            <para class="body">
            There are two ways you can specify the items to display in the drop-down of the XamComboEditor.
            By assigning <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/> property to an instance of <see cref="T:Infragistics.Windows.Editors.ComboBoxItemsProvider"/>
            or by assigning <b>ItemsSource</b> property. 
            </para>
            <para class="body">
            Using <i>ItemsProvider</i> is more efficient when you
            need to bind the same items source to multiple XamComboEditors, in which case you would assign
            the same <i>ComboBoxItemsProvider</i> instance to multiple XamComboEditors. For example, if you 
            have a two or more XamComboEditors on the form displaying the same drop-down list of items. Or 
            inside a DataGrid field where cells are using XamComboEditors that all bind to the same items source.
            It is more efficient because a single ComboBoxItemsProvider manages binding to underlying data source 
            items collection and all the associated XamComboEditors make use of that single instance.
            </para>
            <para class="body">
            If however situation doesn't call for multiple instances of the editor using the same data source,
            <i>ItemsSource</i> property offers a more convenient way of specifying the drop-down list items 
            where you don't have to create an instance of 
            ComboBoxItemsProvider. Although creating ComboBoxItemsProvider is a very simple procedure, in certain
            situations using <i>ItemsSource</i> can be more convenient, especially in XAML where binding is
            involved. As a note, when you set <i>ItemsSource</i> property, internally the XamComboEditor
            simply creates a ComboBoxItemsProvider that wraps the specified items source and sets the 
            <i>ItemsProvider</i> to it.
            </para>
            <para class="body">
            <b>NOTE:</b> <b>ItemsSource</b> and <b>ItemsProvider</b> are exclusive. Use one or the other.
            Setting <i>ItemsProvider</i> and then setting <i>ItemsSource</i> will ignore the <i>ItemsSource</i>.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.DisplayMemberPath">
            <summary>
            Specifies the path into the selected item from which to get the text.
            The Text and DisplayText properties will return values from this path.
            </summary>
            <remarks>
            <para class="body">
            DisplayMemberPath specifies the list object property to use to get the text for the editor.
            When an item is selected from the drop-down, the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property
            returns the item itself. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> 
            properties return the value of the property specified by <b>DisplayMemberPath</b> from that selected 
            item.
            </para>
            <para class="body">
            <b>NOTE:</b> If you set the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/> property to an instance of 
            <see cref="T:Infragistics.Windows.Editors.ComboBoxItemsProvider"/> object then specify the <i>ValuePath</i> and
            <i>DisplayMemberPath</i> properies on that object. In that case these properties 
            on the editor will be ignored as <i>ItemsProvider</i> supercedes these properties.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.ValuePath">
            <summary>
            Specifies the path into the selected item from which to get the data value.
            The Value property will return values from this path.
            </summary>
            <remarks>
            <para class="body">
            ValuePath specifies the list object property to use to get the value for the editor.
            When an item is selected from the drop-down, the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property
            returns the item itself. The <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property returns the
            value of the property specified by <b>ValuePath</b> from that selected item.
            </para>
            <para class="body">
            <b>NOTE:</b> If you set the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.ItemsProvider"/> property to an instance of 
            <see cref="T:Infragistics.Windows.Editors.ComboBoxItemsProvider"/> object then specify the <i>ValuePath</i> and
            <i>DisplayMemberPath</i> properies on that object. In that case these properties 
            on the editor will be ignored as <i>ItemsProvider</i> supercedes these properties.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownHeight">
            <summary>
            Specifies the maximum drop-down height.
            </summary>
            <remarks>
            <para class="body">
            You can use this property to constraint the height of the drop-down list. Particularly
            useful to constraint the user from resizing the height when drop-down resizing 
            functionality is enabled (see <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/>).
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidth"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownWidth"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownWidth">
            <summary>
            Specifies the maximum drop-down width.
            </summary>
            <remarks>
            <para class="body">
            You can use this property to constraint the width of the drop-down list. Particularly
            useful to constraint the user from resizing the width when drop-down resizing 
            functionality is enabled (see <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/>).
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidth"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownHeight"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidth">
            <summary>
            Specifies the minimum drop-down width.
            </summary>
            <remarks>
            <para class="body">
            You can use this property to constraint the width of the drop-down list. Particularly
            useful to constraint the user from resizing the width when drop-down resizing 
            functionality is enabled (see <see cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/>).
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownHeight"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.MaxDropDownWidth"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidthResolved">
            <summary>
            Resolved minimum drop-down width.
            </summary>
            <remarks>
            <para class="body">
            The drop-down width is constrainted by default to the width of the edit portion. You also can
            explicitly set the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidth"/>.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.DropDownResizeMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.MinDropDownWidth"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.PreDropDownAreaTemplate">
            <summary>
            Determines what, if anything, will be displayed on top of the drop down items when the drop down is open.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.PreDropDownAreaTemplateProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.PostDropDownAreaTemplate">
            <summary>
            Determines what, if anything, will be displayed below the drop down items when the drop down is open.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamComboEditor.PostDropDownAreaTemplateProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.SelectedIndex">
            <summary>
            Gets or sets the selected index. Only valid when in edit mode.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectedIndex</b> returns the index of the currently selected item. If no item
            is selected then returns -1. Likewise you can set this property to -1 to clear selected item.
            You can set SelectedIndex to a different value to change
            the item that's currently selected. This is always synchronized with the 
            <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property. Also note that the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> property
            will reflect the updated selected item.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem">
            <summary>
            Gets or sets the selected item. Only valid when in edit mode.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectedItem</b> returns the selected item. You can set this property to change the
            selected item. <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedIndex"/> along with the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> and <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            properties will all be updated to reflect the selected item.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedIndex"/> <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamComboEditor.SelectedItemChanged">
            <summary>
            Occurs when SelectedItem property changes or the user modifies the contents of the editor.
            </summary>
            <remarks>
            <para class="body">
            SelectedItemChanged event is raised when the <see cref="P:Infragistics.Windows.Editors.XamComboEditor.SelectedItem"/> property's value
            changes. You can also use the <see cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/> event to find out
            whenever the value of the editor changes.
            </para>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.SelectedText">
            <summary>
            Gets or sets the selected text.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectedText</b> property returns the currently selected text if any. If nothing is selected
            then returns empty string.
            </para>
            <para class="body">
            Setting this property replaces the current selected text with the set value. If nothing
            is selected and the property is set, the set value is inserted at the location of the caret.
            Note that setting this property will modify the contents of the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.SelectionStart">
            <summary>
            Gets or sets the location of the selected text. If no text is selected, this property returns 
            the location of the caret.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectionStart</b> returns the starting location of the current text selection. If nothing
            is selected, it returns the location of the caret. You can set this property to change the 
            selected text. Note that setting this property does not modify the contents of the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.SelectionLength">
            <summary>
            Gets or sets the length of the selected text. If nothing is selected then returns 0.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectionLength</b> returns the length of the currently selected text. If nothing
            is currently selected then returns 0.
            </para>
            <para class="body">
            Setting this property will modify the text that's selected. It can be used to increase
            or decrease the amount of text that's currently selected. Setting it to 0 deselects
            the selected text. Note that setting this property does not modify the contents of
            the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.TextAlignmentResolved">
            <summary>
            Returns the resolved text alignment.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamComboEditor.TextLength">
            <summary>
            Indicates the length of the current text in the editor.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.CollectionViewProxy">
            <summary>
            Class that wraps another CollectionView. For all the methods and properties 
            it delegates to the source collection view. One of the uses is that you can override 
            OnSourceCollectionChanged method and take actions before or after any control bound to it
            gets the CollectionChanged notification.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CollectionViewProxy.#ctor(System.Windows.Data.CollectionView)">
            <summary>
            Constructor
            </summary>
            <param name="collectionView">Source collection view</param>
        </member>
        <member name="T:Infragistics.Windows.Editors.ComboEditorStates">
            <summary>
            Represents the different states of the combo editor control.  Used to evaluate whether a specific command can be executed.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboEditorStates.IsInEditMode">
            <summary>
            Indicates whether the editor is in edit mode
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboEditorStates.IsDropDownOpen">
            <summary>
            Indicates whether the drop down is currenty dropped down
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.ComboEditorCommands">
            <summary>
            Provides the list of RoutedCommands supported by the XamComboEditor. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboEditorCommands.NotACommand">
            <summary>
            Represents a command which is always ignored.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ComboEditorCommands.ToggleDropDown">
            <summary>
            Command for toggling the drop down state of the ComboEditor. If the editor is not in edit mode,
            this command will put the editor in edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboEditorCommands.GetCommandWrappers">
            <summary>
            The list of CommandWrappers for each supported command.
            </summary>
            <seealso cref="T:Infragistics.Windows.Commands.CommandWrapper"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ComboEditorCommands.LoadCommands">
            <summary>
            This method is provided as a convenience for initializing the statics in this class which kicks off
            the process of setting up and registering the commands.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.EditorsBrushKeys">
            <summary>
            Static class that exposes the resource keys used by <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> and additional editor controls. 
            </summary>
            <remarks>
            <para class="body">These keys are referenced in the templates of the XamEditor controls via dynamic references. Therefore, the default brushes can be easily changed
            by defining replacement brushes, keyed with these keys, in resources anywhere within the resolution scope of their use.
            </para>
            <para class="note"><b>Note:</b> These brushes are normally added to the Resources collection of the window or the application.</para> 
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.EditorsNormalBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the EditorsNormalBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.EditorsNormalCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the EditorsNormalCenterFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.EditorsFocusedBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the EditorsNormalCenterFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.EditorsHottrackBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the EditorsHottrackBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.EditorsHottrackCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the EditorsHottrackCenterFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DecreaseGlyphKey">
            <summary>
            The key that identifies a resource to be used as the DecreaseGlyphKey.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnNormalOuterBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnNormalOuterBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnNormalInnerBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnNormalInnerBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnNormalCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnNormalCenterFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnHottrackOuterBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnHottrackOuterBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnHottrackInnerBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnHottrackInnerBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnHottrackCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnHottrackCenterFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnPressedOuterBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnPressedOuterBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnPressedInnerBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnPressedInnerBorderFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnPressedCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnPressedCenterFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnGlyphNormalForegroundFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphNormalForegroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnGlyphNormalBackgroundFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphNormalBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnGlyphHottrackForegroundFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackForegroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.DropdownBtnGlyphHottrackBackgroundFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxNormalOuterBoxBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxNormalInnerBoxBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxNormalInnerBoxCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxHottrackOuterBoxBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxHottrackOuterBoxCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxHottrackInnerBoxBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxHottrackInnerBoxCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxPressedInnerBoxCenterFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxPressedInnerBoxBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxCheckmarkBackgroundFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxCheckmarkNormalForegroundFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CheckBoxCheckmarkHottrackForegroundFillKey">
            <summary>
            The key that identifies a resource to be used as the DropdownBtnGlyphHottrackBackgroundFill.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.IncreaseGlyphKey">
            <summary>
            The key that identifies a resource to be used as the IncreaseGlyphKey.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.SpinButtonCornerRadiusKey">
            <summary>
            The key that identifies a resource to be used as the SpinButtonCornerRadiusKey.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.TextEditorBackgroundKey">
            <summary>
            The key that identifies a resource to be used as the TextEditorBackground.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.TextEditorBorderBrushKey">
            <summary>
            The key that identifies a resource to be used as the TextEditorBorderBrush.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.TextEditorForegroundKey">
            <summary>
            The key that identifies a resource to be used as the TextEditorForeground.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.TextEditorCornerRadiusKey">
            <summary>
            The key that identifies a resource to be used as the TextEditorCornerRadius.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.TextEditorBorderThicknessKey">
            <summary>
            The key that identifies a resource to be used as the TextEditorBorderThickness.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.TextEditorMarginKey">
            <summary>
            The key that identifies a resource to be used as the TextEditorMargin.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.TextEditorPaddingKey">
            <summary>
            The key that identifies a resource to be used as the TextEditorPadding.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.ComboEditorNormalBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.ComboEditorHottrackBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarNavGlyphFillKey">
            <summary>
            The key that identifies a resource to be used as the CalendarNaviGlyphFill Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemHoverFillKey">
            <summary>
            The key that identifies a resource to be used as the CalendarItemHoverFill Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemHoverForegroundKey">
            <summary>
            The key that identifies a resource to be used as the CalendarItemHoverForeground Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemSelectedFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemSelectedForegroundKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemHoverOuterBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemSelectedOuterBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarDayTodayOuterBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarDayTodayForegroundKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarDayTodayFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemInnerBorderFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarDayOfWeekFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarOtherDayForegroundKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarDayOfWeekForegroundKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemGroupTitleBackgroundKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarItemGroupTitleForegroundKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarSeparatorStrokeKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditorsBrushKeys.CalendarNavGlyphHoverFillKey">
            <summary>
            The key that identifies a resource to be used as the ComboEditorDropDownButtonStyle.  Look here <see cref="T:Infragistics.Windows.Editors.EditorsBrushKeys"/> for 
            an explanation of how these keys are used. 
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarDateRange">
            <summary>
            Structure used to represents a range of dates.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.#ctor(System.DateTime)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/>
            </summary>
            <param name="date">The date to use for the start and end dates.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/>
            </summary>
            <param name="start">The start date</param>
            <param name="end">The end date</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.GetHashCode">
            <summary>
            Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this instance</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.Equals(System.Object)">
            <summary>
            Compares the specified object to this object to see if they are equivalent.
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the objects are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.op_Equality(Infragistics.Windows.Editors.CalendarDateRange,Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/> structures for equality
            </summary>
            <param name="range1">The first structure</param>
            <param name="range2">The other structure</param>
            <returns>true if the two instances are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.op_Inequality(Infragistics.Windows.Editors.CalendarDateRange,Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/> structures for inequality
            </summary>
            <param name="range1">The first structure</param>
            <param name="range2">The other structure</param>
            <returns>true if the two instances are not equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>A string that represents this <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.Contains(System.DateTime)">
            <summary>
            Indicates if the specified date falls within the <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.Start"/> and <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.End"/> dates for this range.
            </summary>
            <param name="date">The date to evaluate</param>
            <returns>True if the specified date is greater than or equal to the <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.Start"/> and on or before the <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.End"/>.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.Contains(Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Indicates if the dates of the specified range fall completely within the dates of this range instance.
            </summary>
            <param name="range">The range to evaluate</param>
            <returns>True if the start and end date fall entirely within or equal to the start and end of this range instance.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.IntersectsWith(Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Indicates if the <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.Start"/> and <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.End"/> of the specified <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/> intersects with this object's dates.
            </summary>
            <param name="range">The range to evaluate.</param>
            <returns>True if any date within the specified range overlaps with the start/end of this range.</returns>
            <exception cref="T:System.ArgumentNullException">The 'range' cannot be null.</exception>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.Normalize">
            <summary>
            Ensures that the start date is less than or equal to the end date.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.Normalize(Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Returns a CalendarDateRange where the <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.Start"/> is less than or equal to the end time
            </summary>
            <param name="range">The range to normalize</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.RemoveTime">
            <summary>
            Removes the time portion from the <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.Start"/> and <see cref="P:Infragistics.Windows.Editors.CalendarDateRange.End"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.Equals(Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Compares two <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/>
            </summary>
            <param name="other">The object to compare to this instance</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRange.CompareTo(Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Compares this instance to the specified <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/>
            </summary>
            <param name="other">The range to compare</param>
            <returns>A signed number indicating the relative values of this and the specified range.</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarDateRange.Start">
            <summary>
            Returns or sets the earliest/start date for the range.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarDateRange.End">
            <summary>
            Returns or sets the latest/end date for the range.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarDateRangeConverter">
            <summary>
            Type converter for the <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/> structure
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRangeConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarDateRangeConverter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRangeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert from the type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType"> A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRangeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType"> A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRangeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from one type to another.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>        
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRangeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarDateRangeCollection">
            <summary>
            A collection of <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/> instances.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRangeCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the collection has been changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDateRangeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Invoked when a property of the collection has been changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarDay">
            <summary>
            Represents a specific date in a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="body">A CalendarDay is a custom <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> that represents a 
            single DateTime. The <see cref="P:Infragistics.Windows.Editors.CalendarItem.StartDate"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItem.EndDate"/> 
            values will be the same. This element is only used when the <see cref="M:Infragistics.Windows.Editors.CalendarItemGroup.GetCurrentCalendarMode(System.Windows.DependencyObject)"/> 
            is <b>Days</b>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarItem">
            <summary>
            Represents an item within the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="body">A <b>CalendarItem</b> will represent either a day within a month, a month 
            within a year, a year within a decade or a decade within a century. CalendarItems are dynamically 
            generated by a <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> based on the range of dates for the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> 
            that contains the item area.</p>
            <p class="body">The control exposes a number of read-only properties that may be used to control the appearance 
            of the item.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarItem"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.CornerRadiusKey">
            <summary>
            The key used to identify the <see cref="T:System.Windows.CornerRadius"/> used for the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.ContainsSelectedDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.ContainsSelectedDates"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.ContainsTodayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.ContainsToday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.EndDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.EndDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.IsActiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.IsActive"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.IsLeadingOrTrailingItemProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.IsLeadingOrTrailingItem"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.IsSelectedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.IsSelected"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.IsSelectionActiveProperty">
            <summary>
            IsSelectionActive Read-Only Dependency Property
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItem.IsSelectionActive"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.IsTodayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.IsToday"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItem.StartDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItem.StartDate"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.OnCreateAutomationPeer">
            <summary>
            Returns <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> Automation Peer Class <see cref="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemAutomationPeer"/>
            </summary>
            <returns>AutomationPeer</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsKeyboardFocusWithin property changes
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved within the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved outside the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItem.ToString">
            <summary>
            Overriden. Returns the date range that the item represents
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Windows.Editors.CalendarItem.StartDate"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItem.EndDate"/>.</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.ContainsSelectedDates">
            <summary>
            Returns a boolean indicating whether the date contains at least one selected date.
            </summary>
            <remarks>
            <p class="body">When the CalendarItem represents an item in the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>, 
            the value of this property is equal to that of the <see cref="P:Infragistics.Windows.Editors.CalendarItem.IsSelected"/>. This property is primarily 
            intended to allow the control to display some indication to the end user that there are one or more dates within 
            the item that are currently selected when they are in navigation mode.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.ContainsSelectedDatesProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItem.IsSelected"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.ContainsToday">
            <summary>
            Returns a boolean indicating if the item contains the current date.
            </summary>
            <remarks>
            <p class="body">When the CalendarItem represents a date in the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>, 
            this property is equivalent to the <see cref="P:Infragistics.Windows.Editors.CalendarItem.IsToday"/>. This property is primarily intended to allow providing 
            an indication to the end user during navigation mode, which item contains the calendar item that 
            represents the current date.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.ContainsTodayProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.EndDate">
            <summary>
            Returns the ending date for the calendar item.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Windows.Editors.CalendarItem.StartDate"/> and EndDate indicate the range of dates that the 
            item represents. When the <see cref="M:Infragistics.Windows.Editors.CalendarItemGroup.GetCurrentCalendarMode(System.Windows.DependencyObject)"/> is <b>Days</b>, 
            a <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> instance will be used and its StartDate and EndDate will be equal.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.EndDateProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItem.StartDate"/>
            <seealso cref="T:Infragistics.Windows.Editors.CalendarDay"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.IsActive">
            <summary>
            Returns a boolean indicating if the day represents the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/>
            </summary>
            <remarks>
            <p class="body">A CalendarItem is considered active when the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/> 
            is within the item's <see cref="P:Infragistics.Windows.Editors.CalendarItem.StartDate"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItem.EndDate"/>.</p>
            </remarks>
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.IsActiveProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.IsLeadingOrTrailingItem">
            <summary>
            Returns a boolean indicating if the CalendarItem is a leading or trailing date in the containing <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="body">Leading and trailing dates are dates displayed within a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> that 
            do not fall within its <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/>. 
            Leading and trailing items are only displayed when the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates"/> and/or 
            <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates"/> is true.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.IsLeadingOrTrailingItemProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowLeadingAndTrailingDates"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.IsSelected">
            <summary>
            Returns a boolean indicating if the date is selected.
            </summary>
            <remarks>
            <p class="body">When the CalendarItem represents an item in the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>, 
            the value of this property is based on whether the date that the item represents has been selected. When in navigation 
            mode, this value is based on whether the item is active since selection can only be modified in the user interface 
            when the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> equals the MinCalendarMode.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.IsSelectedProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItem.ContainsSelectedDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.IsSelectionActive">
            <summary>
            Returns a boolean indicating indicating whether the containing XamMonthCalendar has keyboard focus.
            </summary>
            <remarks>
            <p class="body">The IsSelectionActive is used to indicate if keyboard focus is within the containing <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>. This 
            is often used to alter the appearance of a selected item when the control does not have keyboard focus (e.g. changing the selection color to 
            gray when focus is outside the control).</p>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItem.IsSelected"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.GetIsSelectionActive(System.Windows.DependencyObject)"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.IsToday">
            <summary>
            Returns a boolean indicating whether the element is an item in the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> and represents the current date.
            </summary>
            <remarks>
            <p class="body">The IsToday property is similar to the <see cref="P:Infragistics.Windows.Editors.CalendarItem.ContainsToday"/> property except that it will 
            only be true when not in navigation mode (i.e. when the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> equals the 
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/>). It is used to identify the CalendarItem that represents the 
            current date.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.IsTodayProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItem.ContainsToday"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItem.StartDate">
            <summary>
            Returns the starting date for the calendar item.
            </summary>
            <remarks>
            <p class="body">The StartDate and <see cref="P:Infragistics.Windows.Editors.CalendarItem.EndDate"/> indicate the range of dates that the 
            item represents. When the <see cref="M:Infragistics.Windows.Editors.CalendarItemGroup.GetCurrentCalendarMode(System.Windows.DependencyObject)"/> is <b>Days</b>, 
            a <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> instance will be used and its StartDate and EndDate will be equal.</p>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItem.EndDate"/>
            <seealso cref="T:Infragistics.Windows.Editors.CalendarDay"/>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItem.StartDateProperty"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDay.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarDay"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarDay.IsWorkdayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarDay.IsWorkday"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDay.ToString">
            <summary>
            Overriden. Returns the date that the item represents
            </summary>
            <returns>A string including the <see cref="P:Infragistics.Windows.Editors.CalendarItem.StartDate"/>.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDay.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarDay.IsWorkday">
            <summary>
            Returns or sets a boolean indicating whether the day is considered a work day as set in the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Workdays"/>
            </summary>
            <remarks>
            <p class="body">The IsWorkday is initialized based on the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Workdays"/> of the containing 
            <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> and is intended to allow custom styling of days that represent working or non-working days 
            such as weekends.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarDay.IsWorkdayProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Workdays"/>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarDayOfWeek">
            <summary>
            Represents a specific <see cref="T:System.DayOfWeek"/> in the header area of the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarDimensions">
            <summary>
            Structure used to indicate the preferred rows/columns of <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances within a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions"/>
            <seealso cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensions.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarDimensions"/>
            </summary>
            <param name="rows">The number of rows</param>
            <param name="columns">The number of columns</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The rows and columns must be 0 or greater.</exception>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensions.GetHashCode">
            <summary>
            Returns the hash code of the structure.
            </summary>
            <returns>A hash code for this instance</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensions.Equals(System.Object)">
            <summary>
            Compares the specified object to this object to see if they are equivalent.
            </summary>
            <param name="obj">The object to compare</param>
            <returns>True if the objects are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensions.op_Equality(Infragistics.Windows.Editors.CalendarDimensions,Infragistics.Windows.Editors.CalendarDimensions)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Windows.Editors.CalendarDimensions"/> structures for equality
            </summary>
            <param name="item1">The first structure</param>
            <param name="item2">The other structure</param>
            <returns>true if the two instances are equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensions.op_Inequality(Infragistics.Windows.Editors.CalendarDimensions,Infragistics.Windows.Editors.CalendarDimensions)">
            <summary>
            Compares the values of two <see cref="T:Infragistics.Windows.Editors.CalendarDimensions"/> structures for inequality
            </summary>
            <param name="item1">The first structure</param>
            <param name="item2">The other structure</param>
            <returns>true if the two instances are not equal; otherwise false</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensions.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
            <returns>A string that represents this <see cref="T:Infragistics.Windows.Editors.CalendarDimensions"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensions.Equals(Infragistics.Windows.Editors.CalendarDimensions)">
            <summary>
            Compares two <see cref="T:Infragistics.Windows.Editors.CalendarDimensions"/>
            </summary>
            <param name="other">The object to compare to this instance</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarDimensions.Columns">
            <summary>
            Returns or sets the number of columns of groups.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value must be 0 or greater.</exception>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarDimensions.Rows">
            <summary>
            Returns or sets the number of rows of groups.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value must be 0 or greater.</exception>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarDimensionsConverter">
            <summary>
            Type converter for the <see cref="T:Infragistics.Windows.Editors.CalendarDimensions"/> structure
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensionsConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarDimensionsConverter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensionsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert from the type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="sourceType"> A <see cref="T:System.Type"/> that represents the type you want to convert from.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensionsConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns true if the object can convert to that type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="destinationType"> A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <returns>True if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensionsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from one type to another.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>        
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarDimensionsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the object to the requested type.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="culture">A <see cref="T:System.Globalization.CultureInfo"/> object. If null is passed, the current culture is assumed.</param>
            <param name="destinationType">A <see cref="T:System.Type"/> that represents the type you want to convert to.</param>
            <param name="value">The object to convert.</param>
            <returns>An object that represents the converted value.</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarItemArea">
            <summary>
            A custom element used to display <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances within a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemArea.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemArea.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemArea.OnVisualParentChanged(System.Windows.DependencyObject)">
            <summary>
            Invoked when the visual parent of the element has been changed.
            </summary>
            <param name="oldParent">The previous visual parent</param>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemArea.DayOfWeekHeaderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.DayOfWeekHeaderVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemArea.FirstItemColumnOffsetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.FirstItemColumnOffset"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemArea.FirstItemRowOffsetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.FirstItemRowOffset"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemArea.ItemAreaProperty">
            <summary>
            ItemArea Read-Only Dependency Property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemArea.GetItemArea(System.Windows.DependencyObject)">
            <summary>
            Returns the containing <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/>
            </summary>
            <remarks>
            <p class="body">The <see cref="F:Infragistics.Windows.Editors.CalendarItemArea.ItemAreaProperty"/> is a readonly inherited property that is used to 
            provide the containing <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> to the descendant elements such as the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> 
            instances in its <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.Items"/> collection.</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemArea.ItemColumnsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.ItemColumns"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemArea.ItemRowsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.ItemRows"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemArea.WeekNumberVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.WeekNumberVisibility"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.LogicalChildren">
            <summary>
            Returns an enumerator to iterate the logical children.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.DayOfWeekHeaderVisibility">
            <summary>
            Returns a value indicating the visibility of the day of week headers.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemArea.DayOfWeekHeaderVisibilityProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderVisibility"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.Items">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances that are displayed within the group.
            </summary>
            <remarks>
            <p class="body">The CalendarItem instances are generated based on the containing <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> using its 
            <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/>, <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/>, <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode"/>,
            <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.FirstItemColumnOffset">
            <summary>
            Returns an integer that represents the number of items between the first date in the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.Items"/> collection and the first column.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemArea.FirstItemColumnOffsetProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemArea.FirstItemRowOffset"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.FirstItemRowOffset">
            <summary>
            Returns an integer that represents the number of items between the first date in the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.Items"/> collection and the first row.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemArea.FirstItemRowOffsetProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemArea.FirstItemColumnOffset"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.ItemColumns">
            <summary>
            Returns the number of columns that should be displayed in the group.
            </summary>
            <remarks>
            <p class="body">The ItemColumns is calculated based on the 
            <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode"/> as well as other factors. When the mode 
            is <b>Days</b>, the ItemColumns is based upon the number of visible days of the week which 
            is affected by the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowDisabledDaysOfWeek"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemArea.ItemColumnsProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemArea.ItemRows"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.ItemRows">
            <summary>
            Returns the number of item rows that should be displayed in the group.
            </summary>
            <remarks>
            <p class="body">The ItemRows is calculated based on the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemArea.ItemRowsProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemArea.ItemColumns"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.WeekNumbers">
            <summary>
            Returns a collection of integers that represent the week numbers of the days displayed within the month.
            </summary>
            <remarks>
            <p class="body">When the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is <b>Days</b>, this will contain a set 
            of integers representing the week numbers for the days within the month. For all other navigation modes, the collection 
            will be empty. The <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.FirstItemRowOffset"/> is applicable to the week numbers as well since week numbers are 
            only generated based on the items within the <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.Items"/> collection.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemArea.WeekNumberVisibility">
            <summary>
            Returns a value indicating whether week numbers should be displayed.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemArea.WeekNumberVisibilityProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.WeekNumberVisibility"/>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarItemAreaPanel">
            <summary>
            A custom element used to display a <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> within a 
            <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> to perform animations.
            </summary>
            <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemAreaPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarItemAreaPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemAreaPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemAreaPanel.GetVisualChild(System.Int32)">
            <summary>
            Returns the visual child at the specified index.
            </summary>
            <param name="index">Integer position of the child to return.</param>
            <returns>The child element at the specified position.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is greater than the <see cref="P:Infragistics.Windows.Editors.CalendarItemAreaPanel.VisualChildrenCount"/></exception>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemAreaPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemAreaPanel.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemAreaPanel.OnVisualParentChanged(System.Windows.DependencyObject)">
            <summary>
            Invoked when the visual parent of the element has been changed.
            </summary>
            <param name="oldParent">The previous visual parent</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemAreaPanel.LogicalChildren">
            <summary>
            Returns an enumerator of the logical children
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemAreaPanel.VisualChildrenCount">
            <summary>
            Returns the number of visual children for the element.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarItemGroup">
            <summary>
            Represents a group of calendar items within a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> - e.g. a specific month of the year.
            </summary>
            <remarks>
            <p class="body">A CalendarItemGroup is used to represent a group of <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances. Based 
            on the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode"/>, the group will contain items that represent either days, months, years, 
            decades or centuries.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
            <remarks>
            <p class="note"><b>Note:</b> This constructor is only used for styling purposes. At runtime, the controls are automatically generated.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.OnReferenceDateChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes to the ReferenceDate property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarModeProperty">
            <summary>
            CurrentCalendarMode Attached Dependency Property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.GetCurrentCalendarMode(System.Windows.DependencyObject)">
            <summary>
            Returns the current <see cref="T:Infragistics.Windows.Editors.CalendarMode"/> for the specified element within the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.IsLeadingGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.IsLeadingGroup"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.IsTrailingGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.IsTrailingGroup"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroupProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffsetProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffset"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.UpdateVisualStates">
            <summary>
            Called to set the visual states of the control
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.UpdateVisualStates(System.Boolean)">
            <summary>
            Called to set the visual states of the control
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.OnApplyTemplate">
            <summary>
            Called when the template is applied.
            </summary>
            <remarks>
            <p class="body">
            OnApplyTemplate is a .NET framework method exposed by the FrameworkElement. This class overrides
            it to get the focus site from the control template whenever template gets applied to the control.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.OnCreateAutomationPeer">
            <summary>
            Returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> that represents the group
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupAutomationPeer"/> instance</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the IsKeyboardFocusWithin property changes
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.OnMouseEnter(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved within the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.OnMouseLeave(System.Windows.Input.MouseEventArgs)">
            <summary>
            Invoked when the mouse is moved outside the bounds of the element.
            </summary>
            <param name="e">Provides information about the mouse position.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroup.ToString">
            <summary>
            Overriden. Returns the date range that the item represents
            </summary>
            <returns>A string containing the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/>.</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.Items">
            <summary>
            Returns a collection of <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances that are displayed within the group.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode">
            <summary>
            Returns the current calendar mode.
            </summary>
            <remarks>
            <p class="body">The CurrentCalendarMode is based on the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> 
            but is a readonly inherited property that descendants may use to determine their current mode. Depending on the 
            mode, the group will create <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances that represents days, months, years, decades or 
            centuries.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarModeProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.CalendarItemGroup.GetCurrentCalendarMode(System.Windows.DependencyObject)"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup">
            <summary>
            Returns a <see cref="T:System.Nullable`1"/> that represents the first item of the group. Note, this will not be the first item displayed within the group if the group displays leading dates.
            </summary>
            <remarks>
            <p class="body">The FirstDateOfGroup and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/> identify the range of dates that make up the group. These dates 
            do not include any dates that would represent leading or trailing items. The values are calculated based on the 
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/>, <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffset"/> and the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode"/>.</p>
            <p class="note">The property is nullable because it is possible that the group will not be able to 
            display any dates. For example, if the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> 
            were such that you could only see a year, if the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/> was 2,2 so that the control displayed 
            4 groups, not all the groups would be able to display items when you start zooming out.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroupProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.IsLeadingGroup">
            <summary>
            Returns or sets a boolean indicating if the group is considering a leading group.
            </summary>
            <remarks>
            <p class="body">By default when a date is brought into view the XamMonthCalendar will 
            ensure that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/>, and therefore the dates 
            displayed by the groups in the control, is such that the first group contains the 
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> or a date after that and the last group contains 
            the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> or a date before that - i.e. it attempts to 
            avoid having groups without items. However there are cases where months should be given 
            less priority and allowed to be empty such as when showing a small preview of the previous 
            and/or next month. When IsLeadingGroup or IsTrailingGroup is set to true, the XamMonthCalendar 
            will ignore these groups when adjusting/calculating the reference date and therefore these 
            groups may be empty.</p>
            <p class="note"><b>Note:</b> This property is always false for groups created by the 
            <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>. It is intended to be used when creating a custom 
            XamMonthCalendar template.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.IsLeadingGroupProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.IsTrailingGroup"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.IsTrailingGroup">
            <summary>
            Returns or sets a boolean indicating if the group is considering a leading group.
            </summary>
            <remarks>
            <p class="body">By default when a date is brought into view the XamMonthCalendar will 
            ensure that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/>, and therefore the dates 
            displayed by the groups in the control, is such that the first group contains the 
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> or a date after that and the last group contains 
            the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> or a date before that - i.e. it attempts to 
            avoid having groups without items. However there are cases where months should be given 
            less priority and allowed to be empty such as when showing a small preview of the previous 
            and/or next month. When IsLeadingGroup or IsTrailingGroup is set to true, the XamMonthCalendar 
            will ignore these groups when adjusting/calculating the reference date and therefore these 
            groups may be empty.</p>
            <p class="note"><b>Note:</b> This property is always false for groups created by the 
            <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>. It is intended to be used when creating a custom 
            XamMonthCalendar template.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.IsTrailingGroupProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.IsLeadingGroup"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup">
            <summary>
            Returns a <see cref="T:System.Nullable`1"/> that represents the last date of the group. Note, this will not be the last date displayed within the group if the group displays trailing days.
            </summary>
            <remarks>
            <p class="body">The <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/> and LastDateOfGroup identify the range of dates that make up the group. These dates 
            do not include any dates that would represent leading or trailing items. The values are calculated based on the 
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/>, <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffset"/> and the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode"/>.</p>
            <p class="note">The property is nullable because it is possible that the group will not be able to 
            display any dates. For example, if the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> 
            were such that you could only see a year, if the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/> was 2,2 so that the control displayed 
            4 groups, not all the groups would be able to display items when you start zooming out.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroupProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffset">
            <summary>
            Returns or sets an integer that is used to calculate the dates displayed within the group based on the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/> of the containing <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>.
            </summary>
            <remarks>
            <p class="body">The ReferenceGroupOffset is used to calculate what range of dates should be displayed by the 
            group. It is used along with the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.CurrentCalendarMode"/> 
            when calculating the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/>.</p>
            <p class="body">By default, the template of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> contains a 
            <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/> which creates <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances 
            based on the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/>. It initializes this property 
            such that the first displayed group has a ReferenceGroupOffset of 0 and therefore contains the 
            ReferenceDate. All subsequent groups are offset positively by 1 so that they show the next 
            group worth of dates. If you retemplate the XamMonthCalendar to directly contain CalendarItemGroups 
            then you must set this property. For example, you might have 3 groups whose ReferenceGroupOffsets 
            are -1, 0 and 1. When the ReferenceDate is August 1 2008 and the CurrentCalendarMode is days, the 
            group with -1 would display the dates for July 2008 and the group with 1 would display the dates 
            for September 2008.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffsetProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/>
            <seealso cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates">
            <summary>
            Returns or sets a boolean indicating whether the group should display dates from the previous range of dates.
            </summary>
            <remarks>
            <p class="body">Leading dates are dates prior to the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.FirstDateOfGroup"/> that are displayed within the 
            group. For example, when viewing a gregorian calendar with the default first day of week as Sunday, a group displaying 
            August 2008 would display items for July 28-31.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDatesProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowLeadingAndTrailingDates"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibility">
            <summary>
            Returns or sets the visibility of the button that scrolls its contents to display the next set of dates.
            </summary>
            <remarks>
            <p class="body">By default the template of a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> contains a 
            <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>. This element dynamically generates CalendarItemGroup 
            instances and initializes their ScrollNextButtonVisibility and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibility"/> 
            based on their location within the panel and the state of the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibility"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibility"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibility">
            <summary>
            Returns or sets the visibility of the button that scrolls its contents to display the previous set of dates.
            </summary>
            <remarks>
            <p class="body">By default the template of a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> contains a 
            <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>. This element dynamically generates CalendarItemGroup 
            instances and initializes their ScrollPreviousButtonVisibility and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibility"/> 
            based on their location within the panel and the state of the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibility"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibilityProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibility"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates">
            <summary>
            Returns or sets a boolean indicating whether the group should display dates from the next range of dates.
            </summary>
            <p class="body">Trailing dates are dates after to the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.LastDateOfGroup"/> that are displayed within the 
            group. For example, when viewing a gregorian calendar with the default first day of week as Sunday, a group displaying 
            August 2008 would display items for September 1-6.</p>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDatesProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowLeadingAndTrailingDates"/>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarItemGroupPanel">
            <summary>
            Custom element used to create and position <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances for a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
            <remarks>
            <p class="body">The CalendarItemGroupPanel is designed to be used within the template of a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>. When 
            used in the XamMonthCalendar template, this class will automatically generate and arrange <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances 
            based on the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/>. When the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions"/> is 
            true, the panel will generate more CalendarItemGroups if they can fit up to the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroups"/>, which defaults to 12. 
            You may also retemplate the XamMonthCalendar such that it directly contains CalendarItemGroup instances and set their 
            <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffset"/>.</p>
            <p class="body">By default, the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupWidth"/> and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupHeight"/> properties are set to double.NaN. When either 
            is left set to the default, the panel will calculate the size required for a group to display its contents and arrange all the groups 
            using that size.</p>
            </remarks>
            <seealso cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            <seealso cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffset"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroups"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroupPanel.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroupPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroupPanel.GetVisualChild(System.Int32)">
            <summary>
            Returns the visual child at the specified index.
            </summary>
            <param name="index">Integer position of the child to return.</param>
            <returns>The child element at the specified position.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is greater than the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.VisualChildrenCount"/></exception>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroupPanel.OnChildDesiredSizeChanged(System.Windows.UIElement)">
            <summary>
            Invoked when the desired size of a child has been changed.
            </summary>
            <param name="child">The child whose size is being changed.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroupPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.HorizontalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.HorizontalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupHeightProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupHeight"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupWidthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupWidth"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroupsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroups"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.VerticalContentAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.VerticalContentAlignment"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.LogicalChildren">
            <summary>
            Returns an enumerator of the logical children
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.VisualChildrenCount">
            <summary>
            Returns the number of visual children for the element.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.HorizontalContentAlignment">
            <summary>
            Returns or sets the alignment of the items within the element.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.HorizontalContentAlignmentProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.VerticalContentAlignment"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupHeight">
            <summary>
            Returns or sets the height of the CalendarItemGroups within the panel.
            </summary>
            <remarks>
            <p class="body">The GroupHeight and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupWidth"/> are used to control the size 
            of the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances that the panel creates. Both of these default 
            to double.NaN. When either is left set to NaN, the panel will use a custom hidden 
            CalendarItemGroup to calculate the size required for the groups to replace the NaN value.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupHeightProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupWidth"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupWidth">
            <summary>
            Returns or sets the width of the CalendarItemGroups within the panel.
            </summary>
            <remarks>
            <p class="body">The GroupWidth and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupHeight"/> are used to control the size 
            of the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances that the panel creates. Both of these default 
            to double.NaN. When either is left set to NaN, the panel will use a custom hidden 
            CalendarItemGroup to calculate the size required for the groups to replace the NaN value.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupWidthProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.GroupHeight"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroups">
            <summary>
            Returns or sets the maximum number of groups that the element may generate.
            </summary>
            <remarks>
            <p class="note">The maximum of this value with the rows * columns of the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/> 
            will be used to determine the actual maximum value allowed.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroupsProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.VerticalContentAlignment">
            <summary>
            Returns or sets the vertical alignment of the items within the element.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.CalendarItemGroupPanel.VerticalContentAlignmentProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.HorizontalContentAlignment"/>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarItemGroupTitle">
            <summary>
            Represents the header for a specific <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> in a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarItemGroupTitle.OnCreateAutomationPeer">
            <summary>
            Returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> that represents the element
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.CalendarItemGroupTitleAutomationPeer"/> instance</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarMode">
            <summary>
            Enumeration that determines what is displayed and interacted within each <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> of a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarMode.Days">
            <summary>
            Each <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> is displaying days of the month.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarMode.Months">
            <summary>
            Each <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> is displaying months of the year.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarMode.Years">
            <summary>
            Each <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> is displaying years of a decade.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarMode.Decades">
            <summary>
            Each <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> is displaying ranges of 10 years of a century.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CalendarMode.Centuries">
            <summary>
            Each <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> is displaying ranges of 10 years of a century.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DayOfWeekHeaderFormat">
            <summary>
            Enumeration used to identify the format of the day of week captions in the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DayOfWeekHeaderFormat.SingleCharacter">
            <summary>
            Only a single character is used to identify the days of the week
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DayOfWeekHeaderFormat.TwoCharacters">
            <summary>
            Two characters are used to identify the days of the week
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DayOfWeekHeaderFormat.Abbreviated">
            <summary>
            The abbreviated day of week name from the <see cref="T:System.Globalization.DateTimeFormatInfo"/> is used.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DayOfWeekHeaderFormat.Full">
            <summary>
            The full day of week name from <see cref="T:System.Globalization.DateTimeFormatInfo"/> is used.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarManager.GetDayOfWeekNumber(System.DateTime)">
            <summary>
            Returns the number of the day of the week based on the first day of week.
            </summary>
            <param name="date">The date whose offset is to be calculated</param>
            <returns>A number between 0 and 6 that represents how many days into the week, the specified day represents based on the current first day of week.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarManager.GetDayOfWeekNumber(System.DateTime,System.Boolean)">
            <summary>
            Returns the number of the day of the week based on the first day of week.
            </summary>
            <param name="date">The date whose offset is to be calculated</param>
            <param name="honorDisabledDays">True to account for the hidden days of the week</param>
            <returns>A number between 0 and 6 that represents how many days into the week, the specified day represents based on the current first day of week.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarManager.GetItemColumnCount(Infragistics.Windows.Editors.CalendarMode)">
            <summary>
            Returns the number of item columns regardless of the hidden days of week.
            </summary>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.CalendarManager.GetWeekNumberForDate(System.DateTime)">
            <summary>
            Returns the week number for a particular date using the current CalendarWeekRule and FirstDayOfWeek.
            </summary>
            <param name="date">DateTime</param>
            <returns>Integer denoting the week number that the date belongs to.</returns>
            <remarks>
            <p class="body">The System.Globalization.Calendar's GetWeekOfYear method simply returns the number of weeks into the year that the date falls on. It does not seem to use the weekrule specified in the arguments. e.g. If the first day of week is sunday and the weekrule is Jan 1, then 12/31/2000 (Sunday) should return 1. Instead it returns 54 and 1/1/2001 (Monday) returns 1.</p>
            <p class="body">This routine returns the correct week number for the specified date based on the CalendarWeekRule and FirstDayOfWeek.</p>
            <p class="note"> Note, this may be a week for a year other than the year of the date. e.g. 12/31/2000, week tt of Jan 1, and week start of sunday will return 1 because this date falls into the first week of the year 2001.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.CalendarWeekNumber">
            <summary>
            Represents a specific week number header in the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.CurrentDate">
            <summary>
            Custom object for providing the current date.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CurrentDate.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.CurrentDate"/>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CurrentDate.ValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CurrentDate.Value"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CurrentDate.ValueChanged">
            <summary>
            Invoked when the Value has changed.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CurrentDate.Value">
            <summary>
            Returns a DateTime that represents the current day.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.CurrentDate.ValueProperty"/>
        </member>
        <member name="T:Infragistics.Windows.Editors.DayOfWeekToStringConverter">
            <summary>
            Value converter for converting a <see cref="T:System.DayOfWeek"/> for a given <see cref="T:Infragistics.Windows.Editors.DayOfWeekHeaderFormat"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.DayOfWeekToStringConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.DayOfWeekToStringConverter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.DayOfWeekToStringConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a given <see cref="T:Infragistics.Windows.Editors.DayOfWeekHeaderFormat"/> and <see cref="T:System.DayOfWeek"/> to a string representing the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderFormat"/>
            </summary>
            <param name="values">A two item array containing a <see cref="T:System.DayOfWeek"/> and <see cref="T:Infragistics.Windows.Editors.DayOfWeekHeaderFormat"/> in that order. If a 1 element array is specified, it must contain the <see cref="T:System.DayOfWeek"/> to convert; the DayOfWeekHeaderFormat is assumed to be <b>Abbreviated</b> and the converter culture is used for the culture info.</param>
            <param name="targetType">The type to which the converter must be convert the value. This parameter is not used. A String value is always returned</param>
            <param name="parameter">This parameter is not used.</param>
            <param name="culture">The culture used to obtain the day of week names.</param>
            <returns><see cref="F:System.Windows.DependencyProperty.UnsetValue"/> if the parameters do not match the information. Otherwise a string representation of the day of week is returned.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.DayOfWeekToStringConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
            <summary>
            This method is not implemented for this converter.
            </summary>
            <returns><see cref="F:System.Windows.Data.Binding.DoNothing"/> is always returned.</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs">
            <summary>
            Provides information for the <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/> event.
            </summary>
            <seealso cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs.#ctor(System.Collections.Generic.IList{System.DateTime},System.Collections.Generic.IList{System.DateTime})">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs"/>
            </summary>
            <param name="removedDates">A list of the dates that were unselected</param>
            <param name="addedDates">A list of the dates that were selected</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs.RemovedDates">
            <summary>
            Returns a list of the dates that were unselected.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs.AddedDates">
            <summary>
            Returns a list of the dates that were selected.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MonthCalendarCommands">
            <summary>
            Provides the list of RoutedCommands supported by the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>. 
            </summary>
            <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            <see cref="M:Infragistics.Windows.Editors.XamMonthCalendar.ExecuteCommand(System.Windows.Input.RoutedCommand)"/>
            <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommand"/>
            <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutedCommand"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ScrollNextGroup">
            <summary>
            Scroll forward by one group
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ScrollPreviousGroup">
            <summary>
            Scroll backward by one group
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ScrollNextGroups">
            <summary>
            Scroll forward by the number of groups currently in view
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ScrollPreviousGroups">
            <summary>
            Scroll backward by the number of groups currently in view
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ScrollToDate">
            <summary>
            Scrolls to the date specified in the command parameter. If this command is sent from within a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>, the date will be scrolled into view in that group if possible - even if it is already in view within another <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ActivateDate">
            <summary>
            Activate a particular date. The source must be a <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> or within it - or the CommandParameter must be the date of the day to activate.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ActivateSelectedDate">
            <summary>
            Ensures the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> that represents the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/> is in view and has the input focus.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.Today">
            <summary>
            Activating the <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> that represents the current date.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.PreviousItem">
            <summary>
            Navigates to the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> previous to the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.NextItem">
            <summary>
            Navigates to the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> after the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.PreviousItemRow">
            <summary>
            Navigates to the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> in the previous row (e.g. the same day of the week as the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/> in the previous week when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.NextItemRow">
            <summary>
            Navigates to the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> in the previous row (e.g. the same day of the week as the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/> in the following week when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.PreviousGroup">
            <summary>
            Navigates to the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> in the previous group (e.g. the same day of the month as the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/> in the previous month when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.NextGroup">
            <summary>
            Navigates to the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> in the previous group (e.g. the same day of the month as the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/> in the following month when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.FirstItemOfGroup">
            <summary>
            Navigates to the first <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> in the current group (e.g. the first day of the month containing the current <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/>  when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.LastItemOfGroup">
            <summary>
            Navigates to the last <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> in the current group (e.g. the last day of the month containing the current <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/>  when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.FirstItemOfFirstGroup">
            <summary>
            Navigates to the first <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> of the first <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> in a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> (e.g. the first day of the first month currently in view when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.LastItemOfLastGroup">
            <summary>
            Navigates to the last <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> of the last <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> in a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> (e.g. the first day of the last month currently in view when <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>).
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ZoomOutCalendarMode">
            <summary>
            Increases the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> to a larger date range - e.g. from <b>Days</b> to <b>Months</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ZoomInCalendarMode">
            <summary>
            Decreases the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> to a smaller date range - e.g. from <b>Months</b> to <b>Days</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarCommands.ToggleActiveDateSelection">
            <summary>
            Toggles the selection of the item represented by the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/>.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MonthCalendarCommands.GetCommandWrappers">
            <summary>
            The list of CommandWrappers for each supported command.
            </summary>
            <seealso cref="T:Infragistics.Windows.Commands.CommandWrapper"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.MonthCalendarCommands.LoadCommands">
            <summary>
            This method is provided as a convenience for initializing the statics in this class which kicks off
            the process of setting up and registering the commands.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MonthCalendarCommands.GetKeyboardParameter(Infragistics.Windows.Commands.ICommandHost,System.Windows.Input.RoutedCommand,System.Windows.Input.KeyEventArgs)">
            <summary>
            Returns the parameter that should be used for a given command that is being processed by the <see cref="M:Infragistics.Windows.Commands.Commands`1.ProcessKeyboardInput(System.Windows.Input.KeyEventArgs,Infragistics.Windows.Commands.ICommandHost)"/> method.
            </summary>
            <param name="commandHost">The ICommandHost instance for which the keyboard input is being processed.</param>
            <param name="command">The command to be executed.</param>
            <param name="keyArgs">The key event arguments for which the command is being invoked</param>
            <returns>Returns the object to supply as the parameter for the command execution.</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.SelectedDateCollection">
            <summary>
            A custom collection of <see cref="T:System.DateTime"/> instances used to represent the selected dates within the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SelectedDateCollection.ClearItems">
            <summary>
            Removes all the items from the collection.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SelectedDateCollection.InsertItem(System.Int32,System.DateTime)">
            <summary>
            Inserts a new item at the specified index in the collection.
            </summary>
            <param name="index">The index at which to insert the <paramref name="item"/></param>
            <param name="item">The date to insert in the collection</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.SelectedDateCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Invoked when the collection has been changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.SelectedDateCollection.RemoveItem(System.Int32)">
            <summary>
            Removes an item at the specified index.
            </summary>
            <param name="index">The index of the item in the collection to be removed.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.SelectedDateCollection.SetItem(System.Int32,System.DateTime)">
            <summary>
            Replaces an item at the specified index in the collection 
            </summary>
            <param name="index">Index of the item to replace</param>
            <param name="item">The item to insert into the collection.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.SelectedDateCollection.AddRange(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Adds a specified range of dates to the collection.
            </summary>
            <param name="start">Start of the range</param>
            <param name="end">End of the range</param>
            <param name="allowPartialSelection">True if as many dates up to the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates"/> should be selected. If false and the range would cause the selection to exceed the maximum an exception will be thrown.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified range would result in more dates being selected than allowed by the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates"/>.</exception>
        </member>
        <member name="M:Infragistics.Windows.Editors.SelectedDateCollection.Sort">
            <summary>
            Sorts the contents of the collection in ascending order.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamMonthCalendar">
            <summary>
            A custom control used to display one or more months.
            </summary>
            <remarks>
            <p class="body">The XamMonthCalendar provides functionality similar to that of the Microsoft Vista 
            Common Controls MonthCalendar class.
            </p>
            <p class="body">The control provides navigation style functionality whereby you can zoom out to more 
            quickly navigate the available dates and then zoom back into to change the selection. The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> 
            is used to control the current mode. The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> may be used to control the lowest level 
            of dates that the end user may navigate into.
            </p>
            <p class="body">The default template for XamMonthCalendar uses a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/> 
            that will generate <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances based on the row/column count specified 
            via the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/>. In addition, when the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions"/> 
            property is set to true, which is the default value, the panel will automatically generate additional groups 
            to fill the available space up to its <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroups"/>. The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/> 
            is used by the groups to determine which dates should be shown.
            </p>
            <p class="body">The control supports multiple selection modes which can be controlled via its <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/>. 
            When using a multiple selection mode such as <b>Extended</b> or <b>Range</b>, the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/> property 
            may be used to access/change the selection up to the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates"/>. The control also exposes a <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/> property which is 
            primarily used when in a single select mode. When in a multiselect mode, this property will return the first selected date.
            </p>
            <p class="body">The control exposes a number of properties that may be used to restrict the selectable dates. The 
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> are used to control the range within which the user may navigate. You can 
            then disable dates within that range using either the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates"/>.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollNextRepeatButtonStyleKey">
            <summary>
            The key used to identify the <see cref="P:System.Windows.FrameworkElement.Style"/> for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> used to scroll the groups in view forward within the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollPreviousRepeatButtonStyleKey"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollPreviousRepeatButtonStyleKey">
            <summary>
            The key used to identify the <see cref="P:System.Windows.FrameworkElement.Style"/> for the <see cref="T:System.Windows.Controls.Primitives.RepeatButton"/> used to scroll the groups in view backward within the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollNextRepeatButtonStyleKey"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.TodayButtonStyleKey">
            <summary>
            The key used to identify the <see cref="P:System.Windows.FrameworkElement.Style"/> used for the <see cref="T:System.Windows.Controls.Button"/> that represents the <b>Today</b> at the bottom of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.TodayButtonVisibility"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.AllowLeadingAndTrailingGroupActivationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AllowLeadingAndTrailingGroupActivation"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensionsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensionsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyle"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleSelectorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleSelector"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyle"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleSelectorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleSelector"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderFormatProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderFormat"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.FirstDayOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.FirstDayOfWeek"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.IsSelectionActiveProperty">
            <summary>
            Identifies the IsSelectionActive" attached readonly dependency property
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.GetIsSelectionActive(System.Windows.DependencyObject)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.GetIsSelectionActive(System.Windows.DependencyObject)">
            <summary>
            Gets the value of the 'IsSelectionActive' attached readonly property
            </summary>
            <remarks>
            <p class="body">The IsSelectionActive property is a readonly inherited property similar to that of 
            the <see cref="M:System.Windows.Controls.Primitives.Selector.GetIsSelectionActive(System.Windows.DependencyObject)"/> that is used to indicate whether keyboard focus is 
            within the control and therefore can be used to control how the selected items are rendered.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.IsSelectionActiveProperty"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.MaxDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.MinDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectionTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ShowDisabledDaysOfWeekProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowDisabledDaysOfWeek"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ShowLeadingAndTrailingDatesProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowLeadingAndTrailingDates"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.TodayButtonVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.TodayButtonVisibility"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.WeekNumberVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.WeekNumberVisibility"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ThemeProperty">
            <summary>
            Identifies the 'Theme' dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ThemeChangedEvent">
            <summary>
            Routed event used to notify when the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Theme"/> property has been changed.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnThemeChanged(System.String,System.String)">
            <summary>
            Used to raise the <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ThemeChanged"/> event.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.TodayProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Today"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.WeekRuleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.WeekRule"/> property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.WorkdaysProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Workdays"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.MonthCalendarProperty">
            <summary>
            MonthCalendar Read-Only Dependency Property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.GetMonthCalendar(System.Windows.DependencyObject)">
            <summary>
            Returns the containing <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.BringDateIntoView(System.DateTime)">
            <summary>
            Scrolls the specified <see cref="T:System.DateTime"/> into view ignoring leading and trailing dates.
            </summary>
            <param name="date">The <see cref="T:System.DateTime"/> representing the date that should be brought into view.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.ExecuteCommand(System.Windows.Input.RoutedCommand)">
            <summary>
            Executes the specified RoutedCommand.
            </summary>
            <param name="command">The RoutedCommand to execute.</param>
            <returns>True if command was executed, false if canceled.</returns>
            <seealso cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.ExecuteCommand(Infragistics.Windows.Commands.ExecuteCommandInfo)">
            <summary>
            Executes the specified RoutedCommand.
            </summary>
            <param name="commandInfo">Contains information about the command to execute.</param>
            <returns>True if command was executed, false if canceled.</returns>
            <seealso cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.GetSelectableDates(Infragistics.Windows.Editors.CalendarDateRange)">
            <summary>
            Returns an array of ranges indicating the dates which are selectable in given a range.
            </summary>
            <param name="range">The range of dates whose selectable state is to be evaluated.</param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommandEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommand"/> routed event
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommand"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
            <seealso cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.ExecuteCommand(System.Windows.Input.RoutedCommand)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)">
            <summary>
            Occurs before a command is performed
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommand"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.ExecutedCommandEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutedCommand"/> routed event
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
            <seealso cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.ExecuteCommand(System.Windows.Input.RoutedCommand)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)">
            <summary>
            Occurs after a command is performed
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutedCommand"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ExecutedCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChangedEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/> routed event
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnSelectedDatesChanged(Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnSelectedDatesChanged(Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs)">
            <summary>
            Occurs after the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/> has been changed.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChangedEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectionCommittedEvent">
            <summary>
            Event ID for the <see cref="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectionCommittedEvent"/> routed event
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectionCommittedEvent"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnSelectionCommitted(System.Windows.RoutedEventArgs)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnSelectionCommitted(System.Windows.RoutedEventArgs)">
            <summary>
            Occurs after the mouse is release after a selection.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnApplyTemplate">
            <summary>
            Invoked when the control's template has been applied.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnActiveSelectionStrategyChanged(Infragistics.Windows.Selection.SelectionStrategyBase)">
            <summary>
            Invoked when the active <see cref="T:Infragistics.Windows.Selection.SelectionStrategyBase"/> used by the control has been changed.
            </summary>
            <param name="strategy">The new active strategy or null if no strategy is currently being used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnCreateAutomationPeer">
            <summary>
            Returns <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> Automation Peer Class <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamMonthCalendarAutomationPeer"/>
            </summary>
            <returns>AutomationPeer</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)">
            <summary>
            Invoked when the element receives keyboard focus.
            </summary>
            <param name="e">Provides data about the event</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsKeyboardFocused property is changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Invoked when the IsKeyboardFocusWithin property is changed.
            </summary>
            <param name="e">Provides information about the change</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMonthCalendar.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Raised when the mouse wheel is rotated while over the control.
            </summary>
            <param name="e">Provides information about the event</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate">
            <summary>
            Returns or sets the date of the active day.
            </summary>
            <remarks>
            <p class="body">The ActiveDate is used to determine which <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> within the control has the input focus when the keyboard focus is 
            within the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>. Keyboard navigation within the control is then based on that item's dates.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDateProperty"/>
            <seealso cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.AllowLeadingAndTrailingGroupActivation">
            <summary>
            Returns or sets a boolean that indicates if items within a CalendarItemGroup whose IsLeadingGroup or IsTrailingGroup is true can be activated.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.AllowLeadingAndTrailingGroupActivationProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.IsLeadingGroup"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.IsTrailingGroup"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions">
            <summary>
            Returns or sets whether the control should automatically calculate and change the calendar dimensions based on the size used to arrange the XamMonthCalendar.
            </summary>
            <remarks>
            <p class="body">The AutoAdjustCalendarDimensions property is used by the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/> within the 
            template of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> that indicates whether it should automatically generate additional <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> 
            instances when it has more space available than can be used by the groups specified by the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/>.</p>
            <p class="note">If you retemplate the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> such that it does not contain a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>, 
            this property will not affect the display of the control.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensionsProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions"/>
            <seealso cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroups"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensions">
            <summary>
            Returns or sets a value indicating the preferred rows and columns of groups to be displayed within the control.
            </summary>
            <remarks>
            <p class="body">The CalendarDimensions is used by the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/> within the template of the 
            <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> to determine the minimum number of rows and columns of <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> 
            instances that it should create and arrange. If the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions"/> is true, which is the 
            default value, and the CalendarItemGroupPanel has space to display mode groups it will automatically create additional 
            groups up to its <see cref="P:Infragistics.Windows.Editors.CalendarItemGroupPanel.MaxGroups"/>.</p>
            <p class="note">If you retemplate the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> such that it does not contain a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>, 
            this property will not affect the display of the control.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDimensionsProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.AutoAdjustCalendarDimensions"/>
            <seealso cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyle">
            <summary>
            Returns or sets the default style to use for <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> instances within the control.
            </summary>
            <remarks>
            <p class="body">When this property is set, the <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> will set the <see cref="P:System.Windows.FrameworkElement.Style"/> property 
            of the <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> instances that it creates.</p>
            <p class="note"><b>Note:</b> If a <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleSelector"/> is provided and that class provides a Style, the value for this 
            property will not be used for that item.</p>
            <p class="note"><b>Note:</b> Since the Style property will be explicitly set using this value, any local styles (including those 
            provided via the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Theme"/> property, that target the <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> will not be used.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleSelector"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyle"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleSelector">
            <summary>
            Returns or sets an instance of a StyleSelector class that provides a style for a specific <see cref="T:Infragistics.Windows.Editors.CalendarDay"/>
            </summary>
            <remarks>
            <p class="body">This class is used by the <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> to obtain a <see cref="P:System.Windows.FrameworkElement.Style"/> for a 
            specific <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> instance. If a Style is returned for a specified day, the value of the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyle"/> will not be used for that item.</p>
            <p class="note"><b>Note:</b> The CalendarItemArea may reuse items so you should not set the value of any other property on the day from the SelectStyle method.</p>
            <p class="note"><b>Note:</b> Since the Style property will be explicitly set using the Style returned by this StyleSelector instance, any local styles (including those 
            provided via the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Theme"/> property, that target the <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> will not be used.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleSelectorProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyle"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleSelector"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyle">
            <summary>
            Returns or sets the default style to use for <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances within the control.
            </summary>
            <remarks>
            <p class="body">When this property is set, the <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> will set the <see cref="P:System.Windows.FrameworkElement.Style"/> property 
            of the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances that it creates.</p>
            <p class="note"><b>Note:</b> If a <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleSelector"/> is provided and that class provides a Style, the value for this 
            property will not be used for that item.</p>
            <p class="note"><b>Note:</b> Since the Style property will be explicitly set using this value, any local styles (including those 
            provided via the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Theme"/> property, that target the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> will not be used.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleSelector"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyle"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleSelector">
            <summary>
            Returns or sets an instance of a StyleSelector class that provides a style for a specific <see cref="T:Infragistics.Windows.Editors.CalendarItem"/>
            </summary>
            <remarks>
            <p class="body">This class is used by the <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> to obtain a <see cref="P:System.Windows.FrameworkElement.Style"/> for a 
            specific <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instance. If a Style is returned for a specified item, the value of the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyle"/> will not be used for that item.</p>
            <p class="note"><b>Note:</b> The CalendarItemArea may reuse items so you should not set the value of any other property on the item from the SelectStyle method.</p>
            <p class="note"><b>Note:</b> Since the Style property will be explicitly set using the Style returned by this StyleSelector instance, any local styles (including those 
            provided via the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Theme"/> property, that target the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> will not be used.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyleSelectorProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarItemStyle"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CalendarDayStyleSelector"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode">
            <summary>
            Returns or sets which types of calendar items will be displayed to the end user.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> provides the ability to zoom out to see larger ranges of dates and then zoom back 
            in to change the selection similar to the functionality found in the Microsoft Vista Common Controls MonthCalendar. The CurrentCalendarMode 
            controls the current mode that the contained <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances use to initialize its items. For example, when set to 
            <b>Days</b>, which is the default value, the CalendarItemGroup will contain <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> instances where each represents 
            a discrete date. When set to <b>Months</b>, the CalendarItemGroups will contain <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> instances where each represents 
            a single month within a specific year.</p>
            <p class="body">The <see cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/> class defines two commands (<see cref="F:Infragistics.Windows.Editors.MonthCalendarCommands.ZoomOutCalendarMode"/> 
            and <see cref="F:Infragistics.Windows.Editors.MonthCalendarCommands.ZoomInCalendarMode"/>) that may be used to change the CurrentCalendarMode.</p>
            <p class="note"><b>Note:</b> The value for this property cannot be set to a value that would be less than the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarModeProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderFormat">
            <summary>
            Returns or sets the format for the header of the days of the week.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderFormatProperty"/>
            <seealso cref="T:Infragistics.Windows.Editors.DayOfWeekToStringConverter"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderVisibility">
            <summary>
            Returns or sets a value indicating whether the day of week headers should be displayed.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderFormat"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DaysOfWeek"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.DaysOfWeek">
            <summary>
            Returns a collection of <see cref="T:System.DayOfWeek"/> objects in order based on the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.FirstDayOfWeek"/>
            </summary>
            <remarks>
            <p class="body">The DaysOfWeek collection is exposed primarily to be used from within the templates of the 
            <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> instances within the control. The collection is ordered based on the resolved 
            first day of the week.</p>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.FirstDayOfWeek"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DayOfWeekHeaderFormat"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates">
            <summary>
            Returns a modifiable collection of <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/> instances that indicates the items that should be considered disabled.
            </summary>
            <remarks>
            <p class="body">The DisabledDates is a collection of <see cref="T:Infragistics.Windows.Editors.CalendarDateRange"/> instances that represent ranges of dates that should 
            not be selectable by the end user. Dates may also be disabled using the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/> property.</p>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek">
            <summary>
            Returns or sets a flagged enumeration indicating which days of the week are always disabled.
            </summary>
            <remarks>
            <p class="body">The DisabledDaysOfWeek is a flagged enumeration that can be used to prevent selection of 
            one or more days of the week. The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates"/> may be used to disable specific dates (or 
            ranges of dates).</p>
            <p class="body">When the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowDisabledDaysOfWeek"/> property is set to true 
            the disabled days of the week will be hidden from the display.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeekProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowDisabledDaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.FirstDayOfWeek">
            <summary>
            Gets or sets the <see cref="T:System.DayOfWeek"/> that represents the first day of the week or null to use the value from the current <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
            <remarks>
            <p class="body">By default the FirstDayOfWeek is set to null. When set to null, the <see cref="P:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek"/> 
            from the control's <see cref="P:System.Windows.FrameworkElement.Language"/> will be used.</p>
            </remarks>
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate">
            <summary>
            Returns or sets the preferred maximum date that can be selected or activated for the control.
            </summary>
            <remarks>
            <p class="body">The MaxDate and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> are used to control the range of dates that 
            are available to the end user. Days outside that range will not be displayed.</p>
            <p class="body">The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/> may be 
            used to prevent selection/activation of dates within the MinDate/MaxDate range.</p>
            <p class="note"><b>Note:</b> The actual range available could be smaller than that specified by the 
            MinDate and MaxDate if it is outside the values allowed by the <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime"/> 
            and <see cref="P:System.Globalization.Calendar.MinSupportedDateTime"/> of the culture used by the control. The culture used is 
            based upon the <see cref="P:System.Windows.FrameworkElement.Language"/> property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.MaxDateProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates">
            <summary>
            Returns or sets the maximum number of days that can be selected at any time.
            </summary>
            <p class="note">The MaxSelectedDates is only used when the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/> is set 
            to a value that allows multiple selection such as <b>Range</b> or <b>Extended</b>.</p>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDatesProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate">
            <summary>
            Returns or sets the preferred minimum date that can be selected or activated for the control.
            </summary>
            <remarks>
            <p class="body">The MinDate and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> are used to control the range of dates that 
            are available to the end user. Days outside that range will not be displayed.</p>
            <p class="body">The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/> may be 
            used to prevent selection/activation of dates within the MinDate/MaxDate range.</p>
            <p class="note"><b>Note:</b> The actual range available could be smaller than that specified by the 
            MinDate and MaxDate if it is outside the values allowed by the <see cref="P:System.Globalization.Calendar.MaxSupportedDateTime"/> 
            and <see cref="P:System.Globalization.Calendar.MinSupportedDateTime"/> of the culture used by the control. The culture used is 
            based upon the <see cref="P:System.Windows.FrameworkElement.Language"/> property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.MinDateProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode">
            <summary>
            Returns or sets an enumeration that indicates the minimum calendar item type that can be selected within the control.
            </summary>
            <remarks>
            <p class="body">The <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> provides the ability to zoom out to see larger ranges of dates and then zoom back 
            in to change the selection similar to the functionality found in the Microsoft Vista Common Controls MonthCalendar. While the 
            CurrentCalendarMode controls the current mode that the contained <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances use to display its items, the 
            MinCalendarMode determines the minimum mode into which the control may zoom. For example, when set the <b>Months</b>, the control will not 
            be able to zoom in any further to allow selection/viewing of individual dates/days.</p>
            <p class="body">When the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to the same value as the MinCalendarMode, interacting within the items (e.g. 
            via the keyboard and mouse) will affect the current <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>. When the CurrentCalendarMode 
            is higher than the MinCalendarMode (i.e. the user has zoomed out), the selection will not be changed via the ui. Instead, the keyboard and 
            mouse will be used to navigate the calendar without affecting the current selection. When the user then zooms in to the MinCalendarMode, they 
            may then modify the selection.</p>
            <p class="body">The <see cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/> class defines two commands (<see cref="F:Infragistics.Windows.Editors.MonthCalendarCommands.ZoomOutCalendarMode"/> 
            and <see cref="F:Infragistics.Windows.Editors.MonthCalendarCommands.ZoomInCalendarMode"/>) that may be used to change the CurrentCalendarMode.</p>
            <p class="note"><b>Note:</b> The value for this property will restrict the available values for the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarModeProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDate">
            <summary>
            Returns or sets a date that is used to determine the dates that should be displayed within the control.
            </summary>
            <remarks>
            <p class="body">The reference date is used to determine the dates that are displayed within the reference group. The 
            reference group is the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> whose <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ReferenceGroupOffset"/> is 
            zero. By default, the XamMonthCalendar used a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/> that autogenerates the groups 
            and sets the first created group's ReferenceGroupOffset to 0.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ReferenceDateProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibility">
            <summary>
            Returns or sets the visibility of the scroll buttons with the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances.
            </summary>
            <remarks>
            <p class="body">The ScrollButtonVisibility is used to indicate whethe the <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> instances 
            within the control should display the previous and next scroll buttons. The default template for the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> 
            uses a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/> that autogenerates the groups displayed within the control. When scroll buttons 
            are to be displayed, it ensures that the scroll previous of the upper left most group and the scroll next of the 
            upper right most group will display their scroll buttons. If you retemplate the XamMonthCalendar to directly contain 
            CalendarItemGroups then you must selectively bind the <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibility"/> 
            and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibility"/> to this property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollButtonVisibilityProperty"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollNextRepeatButtonStyleKey"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ScrollPreviousRepeatButtonStyleKey"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollNextButtonVisibility"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ScrollPreviousButtonVisibility"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate">
            <summary>
            Returns or sets the date of the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> that should be selected or null if no item is selected.
            </summary>
            <remarks>
            <p class="body">The SelectedDate returns the first date that is selected within the control and is primarily used 
            when using a <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/> of <b>Single</b>. If you are using a SelectionType that allows multiple 
            dates to be selected, then you can use the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/> to get a complete list of the dates that 
            are selected. The SelectedDates will include the SelectedDate.</p>
            <p class="note"><b>Note:</b> When the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> is set to a value other than days, selecting 
            a <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> will only add 1 entry for each selected item. It will not add each date in the item's 
            range into the SelectedDates.</p>
            <p class="note"><b>Note:</b> When in navigation mode (i.e. the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is 
            not equal to the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>), the selection cannot be changed via the ui. Instead 
            using the mouse will change the active item and the <see cref="P:Infragistics.Windows.Editors.CalendarItem.IsSelected"/> state will be based on which 
            item is active (<see cref="P:Infragistics.Windows.Editors.CalendarItem.IsActive"/>).</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDateProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates">
            <summary>
            Returns a collection of <see cref="T:System.DateTime"/> instances that represents the currently selected dates of the items in the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>.
            </summary>
            <remarks>
            <p class="body">The SelectedDates is a collection of DateTime instances that represent the <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> 
            instances that should be selected or have been selected by the end user. When the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/> is set 
            to a value that allows multiple selection such as <b>Range</b> or <b>Extended</b>, the control will allow selection of 
            one more CalendarItems. A single date for each item will be added to the SelectedDates. The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/> 
            property can be used to access the first item.</p>
            <p class="note"><b>Note:</b> When the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> is set to a value other than days, selecting 
            a <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> will only add 1 entry for each selected item. It will not add each date in the item's 
            range into the SelectedDates.</p>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType">
            <summary>
            Determines how many items can be selected.
            </summary>
            <remarks>
            <p class="body">The default selection type is Extended which allows multiple discontiguous 
            ranges of dates to be selected. As dates are selected, the <see cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/> 
            event is raised and the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/> properties 
            are updated. When using a multiple selection type such as Extended or Range, you can use the 
            <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates"/> to control the maximum number of <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> 
            instances that the user can select.</p>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionTypeResolved"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxSelectedDates"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionTypeResolved">
            <summary>
            Returns the resolved value that determines how dates can be selected (read-only).
            </summary>
            <seealso cref="T:Infragistics.Windows.Controls.SelectionType"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowDisabledDaysOfWeek">
            <summary>
            Returns or sets a boolean indicating whether days of the week disabled using the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/> should be displayed in the calendar.
            </summary>
            <remarks>
            <p class="body">By default all days of the week will be displayed within the control including those 
            that are disabled using the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/>. This property can be set to true to 
            hide the disabled days of the week.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ShowDisabledDaysOfWeekProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.DisabledDaysOfWeek"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.ShowLeadingAndTrailingDates">
            <summary>
            Returns or sets a boolean indicating whether to show days from the month before/after the first/last visible month.
            </summary>
            <remarks>
            <p class="body">Leading and trailing dates are those dates displayed within a group that do not belong that to that particular 
            group. For example, when viewing a gregorian calendar that displays August 2008 with a default first day of week of 
            Sunday, a calendar has space available to show the 27-31 of July (leading) and the 1-6 of September (trailing). By default 
            leading and trailing dates are displayed within the first and last <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> within the control.</p>
            <p class="note"><b>Note:</b> The default template for the XamMonthCalendar uses a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupPanel"/> that 
            ensures that only the first and last CalendarItemGroup instances have their <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates"/> 
            and <see cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates"/> initialized based on this property. If you retemplate the control to 
            directly contain CalendarItemGroup instances you will need to control which groups use this property.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ShowLeadingAndTrailingDatesProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowTrailingDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemGroup.ShowLeadingDates"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.TodayButtonVisibility">
            <summary>
            Returns or sets a boolean that indicates whether the today button should be displayed.
            </summary>
            <remarks>
            <p class="body">The Today button is used to allow the user to select and bring into view the 
            <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> that represents the current date. This button uses the <see cref="F:Infragistics.Windows.Editors.MonthCalendarCommands.Today"/> 
            routed command to perform the operation.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.TodayButtonStyleKey"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.WeekNumberVisibility">
            <summary>
            Returns or sets a boolean that indicates whether week numbers should be displayed.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemArea.WeekNumbers"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarItemArea.WeekNumberVisibility"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.Theme">
            <summary>
            Gets/sets the default look for the control.
            </summary>
            <remarks>
            <para class="body">If left set to null then the default 'Generic' theme will be used. 
            This property can be set to the name of any registered theme (see <see cref="M:Infragistics.Windows.Themes.ThemeManager.Register(System.String,System.String,System.Windows.ResourceDictionary)"/> and <see cref="M:Infragistics.Windows.Themes.ThemeManager.GetThemes"/> methods).</para>
            </remarks>
            <seealso cref="T:Infragistics.Windows.Themes.ThemeManager"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ThemeProperty"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMonthCalendar.ThemeChanged">
            <summary>
            Occurs when the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.Theme"/> property has been changed.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.Today">
            <summary>
            Returns a DateTime that represents today's date.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.TodayProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.WeekRule">
            <summary>
            Returns or sets the rule used to determine the first week of the year.
            </summary>
            <remarks>
            <p class="body">By default the <see cref="P:System.Globalization.DateTimeFormatInfo.CalendarWeekRule"/> of the Culture associated 
            with the control's <see cref="P:System.Windows.FrameworkElement.Language"/> is used to determine the week numbers for 
            dates displayed within the control. The WeekRule is used when calculating the 
            <see cref="P:Infragistics.Windows.Editors.CalendarItemArea.WeekNumbers"/>.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.Workdays">
            <summary>
            Returns or sets a flagged enumeration indicating which days of the week represent working days.
            </summary>
            <remarks>
            <p class="body">The Workdays is a flagged enumeration that may be set to one or more days. The WorkDays is 
            used to initialize the <see cref="P:Infragistics.Windows.Editors.CalendarDay.IsWorkday"/> to allow custom styling of days. This property 
            defaults to all days of the week excluding Saturday and Sunday.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.WorkdaysProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.CalendarDay.IsWorkday"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionStrategyFilter">
            <summary>
            Returns or sets a filter for supplying selection stratgeies for items.
            </summary>
            <seealso cref="T:Infragistics.Windows.Selection.ISelectionStrategyFilter"/>
            <seealso cref="T:Infragistics.Windows.Selection.SelectionStrategyBase"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommand">
            <summary>
            Occurs before a command is performed
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ExecutingCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
            <seealso cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.ExecuteCommand(System.Windows.Input.RoutedCommand)"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMonthCalendar.ExecutedCommand">
            <summary>
            Occurs after a command is performed
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.ExecutedCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
            <seealso cref="T:Infragistics.Windows.Editors.MonthCalendarCommands"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.ExecuteCommand(System.Windows.Input.RoutedCommand)"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChanged">
            <summary>
            Occurs after the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/> has been changed.
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnSelectedDatesChanged(Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDatesChangedEvent"/>
            <seealso cref="T:Infragistics.Windows.Editors.Events.SelectedDatesChangedEventArgs"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDates"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectedDate"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMonthCalendar.SelectionType"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMonthCalendar.SelectionCommitted">
            <summary>
            Occurs after the mouse is release after a selection.
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMonthCalendar.OnSelectionCommitted(System.Windows.RoutedEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMonthCalendar.SelectionCommittedEvent"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMonthCalendar.Commands">
            <summary>
            Overriden. Returns the commands supported by the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorBrushes`1">
            <summary>
            Abstract base class used to supply brush resources for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes.
            </summary>
            <typeparam name="T">A <see cref="T:Infragistics.Windows.Themes.ResourceSetLocator"/> derived class that must have a public parameterless constructor.</typeparam>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorBrushes`1.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorBrushes`1"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorBrushes`1.Grouping">
            <summary>
            Returns the grouping that the resources are applied to (read-only)
            </summary>
            <remarks>
            Examples: RibbonBase, Editors, RibbonBase, WPF etc.
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorBrushes`1.Theme">
            <summary>
            Returns the name of the look (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorBrushes`1.Resources">
            <summary>
            Returns the ResourceDictionary containing the associated styles (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsGenericBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsGenericBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsGenericBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGenericBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsGenericBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGenericBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGenericBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGenericBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGenericBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaNormalBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsLunaNormalBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsLunaNormalBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormalBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaNormalBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormalBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormalBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormalBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormalBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaOliveBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsLunaOliveBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsLunaOliveBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOliveBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaOliveBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOliveBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOliveBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOliveBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOliveBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaSilverBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsLunaSilverBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsLunaSilverBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilverBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaSilverBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilverBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilverBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilverBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilverBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsAeroBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsAeroBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsAeroBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAeroBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsAeroBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAeroBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAeroBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAeroBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAeroBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlackBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7BlueBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7SilverBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyaleBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsRoyaleBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsRoyaleBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyaleBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrongBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOnyxBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsOnyxBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsOnyxBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyxBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOnyxBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyxBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyxBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyxBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyxBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDarkBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes">
            <summary>
            Class used to supply brush resources for the default look for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLightBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsPrintBasicBrushes">
            <summary>
            Class used to supply brush resources for <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> derived classes when printing
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.EditorsPrintBasicBrushes.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.EditorsPrintBasicBrushes"/>
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasicBrushes.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsPrintBasicBrushes.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasicBrushes.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasicBrushes.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasicBrushes.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasicBrushes.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.Internal.EditorsThemeTypeConverter">
            <summary>
            A custom type converter for providing a list of themes available for the <see cref="T:Infragistics.Windows.Editors.ValueEditor"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.Internal.EditorsThemeTypeConverter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Themes.Internal.EditorsThemeTypeConverter"/>
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Utils">
            <summary>
            A class with helper routines.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.Utils.GetTextToValueConversionError(System.Type,System.String)">
            <summary>
            Gets an error message to display when user input fails to be converted to the specified
            target type.
            </summary>
            <param name="targetType"></param>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.Utils.IsInfinityOrNaN(System.Object)">
            <summary>
            Returns true if the specified val is double or float and infinity or NaN.
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.Utils.IsNumericType(System.Type)">
            <summary>
            Determines if a given System.Type is a numeric type.
            </summary>
            <param name="type">The System.Type to test.</param>
            <returns>True if the type is a numeric type.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.Utils.Exists(System.Collections.IEnumerable,System.Object)">
            <summary>
            Returns true if the item exists in the specified enumerable.
            </summary>
            <param name="e"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.Utils.IsMouseOverElement(System.Windows.DependencyObject,System.Windows.Input.MouseEventArgs)">
            <summary>
            Returns a value indicating whether the mouse position associated with the specified 
            mouse event args is inside the specified element.
            </summary>
            <param name="element"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.Utils.IsValueEmpty(System.Object)">
            <summary>
            Returns true if the specified val is null, DBNull, empty string, or DependencyProperty.UnsetValue.
            </summary>
            <param name="val">Value to test</param>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValidatedObservableCollection`1">
            <summary>
            An observable collection that allows you to specify a delegate for validating items being
            added to the collection.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Infragistics.Windows.Editors.HorizontalToTextAlignmentConverter">
            <summary>
            A converter that converts HorizontalAlignment to TextAlignment.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SpinInfo.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.InvalidValueBehavior">
            <summary>
            Specifies the <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> property.
            </summary>
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.InvalidValueBehavior.Default">
            <summary>
            Default is resolved to <b>DisplayErrorMessage</b>.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.InvalidValueBehavior.RetainValue">
            <summary>
            Retain value and stay in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.InvalidValueBehavior.RevertValue">
            <summary>
            Revert value to original value.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.InvalidValueBehavior.DisplayErrorMessage">
            <summary>
            Display an error message and retain value.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MonthCalendarStates">
            <summary>
            Enumeration used to indicate the current state of the component.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.MinDateInView">
            <summary>
            The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> is in view
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.MaxDateInView">
            <summary>
            The <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/> is in view
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.TodayIsEnabled">
            <summary>
            Indicates that the current date is within the minimum and maximum date range of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.ActiveDate">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.ActiveDate"/> is non-null.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.CanZoomOutCalendarMode">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> can be changed to a higher scope - e.g. from Days to Months.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.CanZoomInCalendarMode">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> can be changed towards the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> - e.g. from Months to Days.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.CalendarModeDays">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Days</b>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.CalendarModeMonths">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Months</b>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.CalendarModeYears">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Years</b>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.CalendarModeDecades">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Decades</b>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.CalendarModeCenturies">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is set to <b>Centuries</b>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.MinCalendarMode">
            <summary>
            Indicates that the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.CurrentCalendarMode"/> is the same value as the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/>
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MonthCalendarStates.RightToLeft">
            <summary>
            Indicates that the FlowDirection of the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> is RightToLeft.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamCheckEditor">
            <summary>
            An editor control that can be used to display or edit boolean values.
            </summary>
            <remarks>
            <p class="body">The <b>XamCheckEditor</b> inherits from <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> and is designed to be embedded within 
            value editor hosts, like the <b>XamDataGrid</b>, although it can be used as a stand alone control as well. It displays a 
            checkbox which the user can click to change the value.</p>
            <p class="body">The control can represent three states - checked, unchecked and 
            indeterminate. By default, the control only toggles between checked and unchecked. To support indeterminate, the  
            <see cref="P:Infragistics.Windows.Editors.XamCheckEditor.IsThreeState"/> property should be set to true.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.XamCheckEditor"/> instance
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.InitializeValueProperties">
            <summary>
            Overridden. Initializes the value properties. This synchronizes all the value properties if one of
            them is set in xaml since we delay syncrhonization until after initialization in case
            other settings in xaml effect how they are synchronized.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.CanEditType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports editing values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports editing values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            XamCheckEditor's implementation returns True for only the string type since that's
            the only data type it natively renders and edits.
            </p>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanEditType(System.Type)"/> for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.CanRenderType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports displaying of values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports displaying values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            XamCheckEditor's implementation returns True for only the string type since that's
            the only data type it natively renders and edits.
            </p>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanRenderType(System.Type)"/> for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)">
            <summary>
            Overridden. Indicates whether the desired width or the height of the editor is based on the value.
            </summary>
            <param name="orientation">Orientation of the extent being evaluated. Horizontal indicates the width and vertical indicates the height.</param>
            <returns>True if extent is based on the value.</returns>
            <remarks>
            <para class="body">
            XamCheckEditor's implementation returns False since the value of the editor does not have any
            effect on the desired size of the control.
            </para>
            <para class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)"/> for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Windows.Editors.XamCheckEditor"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamCheckEditorAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden. Preview method called when the left mouse button is pressed.
            </summary>
            <param name="e">The event args containing more information on the mouse event.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.SetVisualState(System.Boolean)">
            <summary>
            Called to set the VisualStates of the editor
            </summary>
            <param name="useTransitions">Determines whether transitions should be used.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>
            Overridden. Called to synchronize value and text properties. Derived classes can override this
            method if they have their own value properties (like the XamCheckEditor which has
            IsChecked property) because the Value, Text and all other editor specific value
            related properties need to be kept in sync. Default implementation synchronizes
            Value and Text properties.
            </summary>
            <param name="prop">Property that changed.</param>
            <param name="newValue">New value of the property.</param>
            <param name="error">Set this to the any error message if synchronization fails (for example
            because of type conversion or some other problem with syncrhonizing the new value).</param>
            <returns>Value indicating whether the new value should be considered valid. If false is
            returned, IsValueValid property will be set to false.</returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamCheckEditor.IsCheckedProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamCheckEditor.IsChecked"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamCheckEditor.IsThreeStateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamCheckEditor.IsThreeState"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.ShouldSerializeIsThreeState">
            <summary>
            Returns true if the IsThreeState property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCheckEditor.ResetIsThreeState">
            <summary>
            Resets the IsThreeState property to its default state.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamCheckEditor.IsChecked">
            <summary>
            Gets or sets the checked state of the check editor. Null indicates the check editor is in indeterminate
            state.
            </summary>
            <remarks>
            <para class="body">
            When the check editor is checked the IsChecked will return True. When it's unchecked the property
            will return False. When it's in indeterminate state the property will return null.
            </para>
            <para class="body">
            <b>IsChecked</b>, <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> and <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> are all 
            synchronized. When the editor's value is modified, all three properties will reflect the
            current state of the check editor.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamCheckEditor.IsThreeState">
            <summary>
            Specifies whether the check editor toggles between three states or two states. Default value is <b>false</b>.
            </summary>
            <remarks>
            <para class="body">
            If <b>IsThreeState</b> is set to true then the check editor will toggle between three states: checked, unchecked and indeterminate.
            When the editor is in indeterminate state, the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/> and <see cref="P:Infragistics.Windows.Editors.XamCheckEditor.IsChecked"/> properties will return <b>null</b> value. 
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValueEditorCheckBox">
            <summary>
            Checkbox class used by the <b>XamCheckEditor</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>ValueEditorCheckBox</b> is not meant to be used as a stand-alone control. It's used
            by the <b>XamCheckEditor</b>.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueEditorCheckBox.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden. Used to prevent changes to the checkbox when the owning <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> is not in edit mode.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamNumericEditor">
            <summary>
            Allows editing of numeric data based on a mask.
            </summary>
            <remarks>
            <p class="body">The <b>XamNumericEditor</b> is a derived <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/> that is designed to 
            display and edit numeric data. By default, its <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property is set to 
            <see cref="T:System.Double"/>.</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamMaskedEditor">
            <summary>
            Value editor for displaying and editing data based on a mask.
            </summary>
            <remarks>
            <p class="body">
            <b>XamMaskedEditor</b> is an editor control that lets you display and edit values based on a mask. The mask is 
            specified via its <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property. If a mask is not explicitly set then a default mask 
            is used based on the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property. The default mask is determined using the masks 
            that are registered for specific types using <see cref="M:Infragistics.Windows.Editors.XamMaskedEditor.RegisterDefaultMaskForType(System.Type,System.String)"/>.</p>
            <p class="body">
            There are certain type specific editors that are available that derive from XamMaskedEditor. They include 
            <see cref="T:Infragistics.Windows.Editors.XamCurrencyEditor"/>, <see cref="T:Infragistics.Windows.Editors.XamNumericEditor"/> and <see cref="T:Infragistics.Windows.Editors.XamDateTimeEditor"/>. Although
            the XamMaskedEditor can be used to edit all these types, the derived editors default certain settings and
            provide more specific object model for editing the associated data types.
            </p>
            <seealso cref="T:Infragistics.Windows.Editors.ValueEditor"/>
            <seealso cref="T:Infragistics.Windows.Editors.TextEditorBase"/>
            <seealso cref="T:Infragistics.Windows.Editors.XamCurrencyEditor"/>
            <seealso cref="T:Infragistics.Windows.Editors.XamNumericEditor"/>
            <seealso cref="T:Infragistics.Windows.Editors.XamDateTimeEditor"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CanEditType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports editing values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports editing values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            XamMaskedEditor's implementation returns True for the string, sbyte, byte, 
            short, ushort, int, uint, long, ulong, float, double, decimal and DateTime data types.
            </p>
            <p class="body">
            For these data types the editor will calculate a default mask. For any other
            data type, you should specify a mask that makes sense for the data type other wise
            a default mask will be used. You can change/register default masks for these and other
            data types using the <see cref="M:Infragistics.Windows.Editors.XamMaskedEditor.RegisterDefaultMaskForType(System.Type,System.String)"/> method.
            </p>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanEditType(System.Type)"/> for more information.
            </p>
            </remarks>
            <seealso cref="T:System.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.CanEditType(System.Type)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CanRenderType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports displaying of values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports displaying values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanRenderType(System.Type)"/> for more information.
            </p>
            </remarks>
            <seealso cref="M:Infragistics.Windows.Editors.XamMaskedEditor.CanEditType(System.Type)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.CanRenderType(System.Type)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)">
            <summary>
            Overridden. Indicates whether the desired width or the height of the editor is based on the value.
            </summary>
            <param name="orientation">Orientation of the extent being evaluated. Horizontal indicates the width and vertical indicates the height.</param>
            <returns>True if extent is based on the value.</returns>
            <remarks>
            <para class="body">
            XamMaskedEditor's implementation returns True for horizontal dimension and False for the vertical
            dimension.
            </para>
            <para class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)"/> for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamMaskedEditorAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.DoInitialization">
            <summary>
            Overridden. Called from OnInitialized to provide the derived classes an opportunity to 
            perform appropriate initialization tasks. OnInitialized implementation enters
            the editor into edit mode at the end if AlwaysInEditMode is true. This method 
            is called before that.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnCoerceText(System.String)">
            <summary>
            Overridden. Called from the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property's CoerceValue handler.
            </summary>
            <param name="text">The text to coerce</param>
            <returns>Coerced value</returns>
            <remarks>
            <para class="body">
            XamMaskedEditor's implementation applies mask to the <paramref name="text"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when a property value has changed
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ValidateCurrentValue(System.Exception@)">
            <summary>
            Validates the current value of the editor. This method is called by the editor to perform
            editor specific validation of the current value.
            </summary>
            <returns>True if the value is valid, False otherwise.</returns>
            <remarks>
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.ValidateCurrentValue(System.Exception@)"/> for more information.
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ValidateValue(System.Object,System.Exception@)">
            <summary>
            Returns true if the specified value would be considered to be valid by 
            the editor based on implicit as well as explicit value constraints enforced by the editor. 
            </summary>
            <param name="value">Value to check if it's valid.</param>
            <param name="error">If the value is invalid, this is set to an exception containing appropriate error message.</param>
            <returns>True if the specified value is valid, False otherwise.</returns>
            <remarks>
            <para class="body">
            <b>ValidateValue</b> method is used to determine if a value is valid or not based
            on the implicit as well as explicit value constraints enforced by the editor.
            Implicit value constraints are <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>,
            <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> etc... and explicit constraints are specified
            via <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnFocusSiteChanged">
            <summary>
            Overridden. Called when the focus site changes.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnValueConstraintChanged(System.String)">
            <summary>
            This method is called whenever the ValueConstraint or one of its properties changes.
            </summary>
            <param name="valueConstraintPropertyName">Null if the ValueConstraint itself changed or 
            the name of the property that changed.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.InitializeCachedPropertyValues">
            <summary>
            Initializes the variables used to cache the dependency property values by
            getting the dependency property metadata for this object and getting DefaultValue
            of that metadata for the respective property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.SetText(Infragistics.Windows.Editors.SectionsCollection,System.String,System.Char,System.Char)">
            <summary>
            Sets the text to sections collection.
            </summary>
            <param name="sections">Sections to be updated</param>
            <param name="text">Text used to update the sections</param>
            <param name="promptCharacter">Character interpretted as the prompt character</param>
            <param name="padCharacter">Character interpretted as the pad character</param>
            <returns>Number of characters from text that matched.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.SetText(Infragistics.Windows.Editors.SectionsCollection,System.String,System.Char,System.Char,System.Boolean)">
            <summary>
            Sets the text to sections collection.
            </summary>
            <param name="sections">Sections to be updated</param>
            <param name="text">Text used to update the sections</param>
            <param name="promptCharacter">Character interpretted as the prompt character</param>
            <param name="padCharacter">Character interpretted as the pad character</param>
            <param name="skipDigitSeparator">True if the value may be numeric in which case digit separators should be ignored; otherwise false.</param>
            <returns>Number of characters from text that matched.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.IsDateTimeSection(Infragistics.Windows.Editors.EditSectionBase)">
            <summary>
            Returns true if the specified edit section is year, month, day, hour, minute, second or am/pm section.
            </summary>
            <param name="editSection"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonStyle"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonVisibilityResolvedPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonVisibilityResolved"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonVisibilityResolvedProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonVisibilityResolved"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SpinIncrementProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinIncrement"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SpinWrapProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinWrap"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.Beep">
            <summary>
            Calls the MessageBeep api
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SectionsProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.RegisterDefaultMaskForType(System.Type,System.String)">
            <summary>
            Changes the default mask used by the masked editor for the specified data type.
            </summary>
            <param name="dataType"></param>
            <param name="mask"></param>
            <remarks>
            <para class="body">
            If a mask is not explicitly specified on a masked editor or derived editor, 
            a default is calculated based on the data type. You can override these 
            default calculated masks using this method.
            </para>
            <seealso cref="M:Infragistics.Windows.Editors.XamMaskedEditor.GetDefaultMaskForType(System.Type)"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetDefaultMaskForType(System.Type)">
            <summary>
            Resets the default mask for the specified data type to the default value.
            </summary>
            <param name="dataType"></param>
            <remarks>
            <para class="body">
            This method is used to revert any default masks that were registered using 
            <see cref="M:Infragistics.Windows.Editors.XamMaskedEditor.RegisterDefaultMaskForType(System.Type,System.String)"/> method. The mask will be reverted back
            to the default mask that's calculated by the masked editor.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.GetDefaultMaskForType(System.Type)">
            <summary>
            Returns the default mask that will be used for the specified data type by the masked editor
            and derived editors for the specified data type.
            </summary>
            <param name="dataType"></param>
            <returns></returns>
            <remarks>
            <para class="body">
            You can change the default masks using the <see cref="M:Infragistics.Windows.Editors.XamMaskedEditor.RegisterDefaultMaskForType(System.Type,System.String)"/> static method.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.SupportsDataType(System.Type)">
            <summary>
            Returns true if the data type is supported by the XamMaskedEditor, false otherwise.
            </summary>
            <param name="dataType"><see cref="T:System.Type"/></param>
            <returns><b>True</b> if type is supported, <b>False</b> otherwise.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CalcDefaultTimeMask(System.IFormatProvider)">
            <summary>
            Calculates the default mask for time based on the specified format provider.
            </summary>
            <param name="formatProvider">The format provider to use to get necessary format 
            information to derive the mask from.
            Can be a CultureInfo or a DateTimeFormatInfo instance.
            </param>
            <returns>Mask as a string.</returns>
            <remarks>
            <para class="body">
            Typically there is no need for you to directly call this method. If the ValueType
            is set to DateTime the XamMaskedEditor and derived editors will call this method 
            to calculate the mask if none has been explicitly set. Also if you want to explicitly
            set the mask to make use of culture sensitive date and time mask then use the following
            mask tokens when setting the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property:
            <ul>
            <li><b>{date}</b> - Date mask based on <i>short</i> date pattern setting of the system.</li>
            <li><b>{time}</b> - Time mask based on <i>short</i> time pattern setting of the system. Short time pattern typically does not include seconds portion.</li>
            <li><b>{longtime} - Time mask based on <i>long</i> time pattern setting of the system. Long time pattern typically includes seconds portion.</b></li>
            </ul>
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CalcDefaultLongTimeMask(System.IFormatProvider)">
            <summary>
            Calculates the default mask for long time based on the specified format provider.
            </summary>
            <param name="formatProvider">The format provider to use to get necessary format 
            information to derive the mask from.
            Can be a CultureInfo or a DateTimeFormatInfo instance.
            </param>
            <returns>Mask as a string.</returns>
            <remarks>
            <para class="body">
            Typically there is no need for you to directly call this method. If the ValueType
            is set to DateTime the XamMaskedEditor and derived editors will call this method 
            to calculate the mask if none has been explicitly set. Also if you want to explicitly
            set the mask to make use of culture sensitive date and time mask then use the following
            mask tokens when setting the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property:
            <ul>
            <li><b>{date}</b> - Date mask based on <i>short</i> date pattern setting of the system.</li>
            <li><b>{time}</b> - Time mask based on <i>short</i> time pattern setting of the system. Short time pattern typically does not include seconds portion.</li>
            <li><b>{longtime} - Time mask based on <i>long</i> time pattern setting of the system. Long time pattern typically includes seconds portion.</b></li>
            </ul>
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CalcDefaultDateMask(System.IFormatProvider)">
            <summary>
            Calculates the default mask for date based on the specified format provider.
            </summary>
            <param name="formatProvider">The format provider to use to get necessary format 
            information to derive the mask from.
            Can be a CultureInfo or a DateTimeFormatInfo instance.
            </param>
            <returns>Mask as a string.</returns>
            <remarks>
            <para class="body">
            Typically there is no need for you to directly call this method. If the ValueType
            is set to DateTime the XamMaskedEditor and derived editors will call this method 
            to calculate the mask if none has been explicitly set. Also if you want to explicitly
            set the mask to make use of culture sensitive date and time mask then use the following
            mask tokens when setting the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property:
            <ul>
            <li><b>{date}</b> - Date mask based on <i>short</i> date pattern setting of the system.</li>
            <li><b>{time}</b> - Time mask based on <i>short</i> time pattern setting of the system. Short time pattern typically does not include seconds portion.</li>
            <li><b>{longtime} - Time mask based on <i>long</i> time pattern setting of the system. Long time pattern typically includes seconds portion.</b></li>
            </ul>
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CalcDefaultDateMask(System.IFormatProvider,System.Boolean)">
            <summary>
            Calculates the default mask for date based on the specified format provider.
            </summary>
            <param name="formatProvider">The format provider to use to get necessary format 
            information to derive the mask from.
            Can be a CultureInfo or a DateTimeFormatInfo instance.
            </param>
            <param name="usePostfixSeparatorsFromLongDatePattern">
            This parameter indicates whether to use culture specific date separators that
            are composed of postfix symbols from the long date pattern of the culture's 
            date-time format information. 
            </param>
            <returns>Mask as a string.</returns>
            <remarks>
            <para class="body">
            Typically there is no need for you to directly call this method. If the ValueType
            is set to DateTime the XamMaskedEditor and derived editors will call this method 
            to calculate the mask if none has been explicitly set. Also if you want to explicitly
            set the mask to make use of culture sensitive date and time mask then use the following
            mask tokens when setting the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property:
            <ul>
            <li><b>{date}</b> - Date mask based on <i>short</i> date pattern setting of the system.</li>
            <li><b>{time}</b> - Time mask based on <i>short</i> time pattern setting of the system. Short time pattern typically does not include seconds portion.</li>
            <li><b>{longtime} - Time mask based on <i>long</i> time pattern setting of the system. Long time pattern typically includes seconds portion.</b></li>
            </ul>
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CalcDefaultCurrencyMask(System.IFormatProvider,System.Int32,System.Int32,System.Char,System.Boolean)">
            <summary>
            Calculates the default mask for currency based on the cultureInfo.
            </summary>
            <param name="formatProvider">Format provider to use to construct a default mask with. Can be a CultureInfo or a NumberFormatInfo instance.</param>
            <param name="integerDigits">Number of digits in integer section. -1 means use a default. Can be 0 in which case there won't be an integer portion.</param>
            <param name="fractionDigits">Number of digits in fraction section. -1 means use one specified by culture info. Can be 0 in which case there won't be fraction section.</param>
            <param name="allowNegatives">If '-' or '+' then negative numbers are allowed. '-' specifies that the minus sign should be displayed only when the number is negative. '+' specifies that the plus or minus sign will always be displayed depending on whther the number is negative or positive. If this parameter is any other character then it's ignored.</param>
            <param name="includeCurrencySymbol">Specifies whether the mask should include the currency symbol.</param>
            <returns>Mask as a string.</returns>
            <remarks>
            <para class="body">
            Typically there is no need for you to directly call this method. If the ValueType
            is set to Decimal the XamMaskedEditor and derived editors will call this method 
            to calculate the mask if none has been explicitly set. Also if you want to explicitly
            set the mask to make use of culture sensitive currency mask then use one of the
            currency tokens as documented in the table listing all the mask tokens in the
            help for <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.CalcDefaultDoubleMask(System.IFormatProvider,System.Int32,System.Int32,System.Char)">
            <summary>
            Calculates the default mask for double mask based on the CultureInfo
            </summary>
            <param name="formatProvider">Format provider to use to construct a default mask with. Can be a CultureInfo or a NumberFormatInfo instance.</param>
            <param name="integerDigits">Number of digits in integer section. -1 means use a default. Can be 0 in which case there won't be an integer portion.</param>
            <param name="fractionDigits">Number of digits in fraction section. -1 means use one specified by culture info. Can be 0 in which case there won't be fraction section.</param>
            <param name="allowNegatives">If '-' or '+' then negative numbers are allowed. '-' specifies that the minus sign should be displayed only when the number is negative. '+' specifies that the plus or minus sign will always be displayed depending on whther the number is negative or positive. If this parameter is any other character then it's ignored.</param>
            <returns>Mask as a string.</returns>
            <remarks>
            <para class="body">
            Typically there is no need for you to directly call this method. If the ValueType
            is set to Double or Float, the XamMaskedEditor and derived editors will call this method 
            to calculate the mask if none has been explicitly set. Also if you want to explicitly
            set the mask to make use of culture sensitive double/float mask then use one of the
            double tokens as documented in the table listing all the mask tokens in the
            help for <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.IsMaskValidForDataType(System.Type,System.String,System.IFormatProvider)">
            <summary>
            Returns true if mask is valid for the type.
            </summary>
            <param name="dataType"></param>
            <param name="mask"></param>
            <param name="formatProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.IsMaskValidForDataType(System.Type,Infragistics.Windows.Editors.SectionsCollection)">
            <summary>
            Returns true if mask is valid for the type.
            </summary>
            <param name="dataType"></param>
            <param name="parsedSections"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.GetText(Infragistics.Windows.Editors.MaskMode)">
            <summary>
            Returns the current text of the editor based on the specified mask mode.
            </summary>
            <param name="maskMode">The mode that determines how literals and prompt characters are accounted for.</param>
            <returns>The current text of the editor with the specified mask mode applied to it.</returns>
            <remarks>
            <para class="body">
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property can also be used to retrieve the current text of the editor.
            The Text property will return a value with the mask mode specified by the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DataMode"/>
            property applied to the returned value. This method allows you to use any mode without having to
            set the DataMode property.
            </para>
            <para class="body">
            Any of <see cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>, <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/> 
            properties can also be used to retrieve the current value of the editor.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/>
            <seealso cref="P:Infragistics.Windows.Editors.TextEditorBase.DisplayText"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DataMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.IsTextBoxEntryEnabledPropertyKey">
            <summary>
            Identifies the property key for read-only <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.IsTextBoxEntryEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.IsTextBoxEntryEnabledProperty">
            <summary>
            Identifies the read-only <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.IsTextBoxEntryEnabled"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)">
            <summary>
            Overridden. Occurs when the control is about to enter edit mode.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)">
            <summary>
            Overridden. Occurs when the control has just entered edit mode.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnEditModeEnded(Infragistics.Windows.Editors.Events.EditModeEndedEventArgs)">
            <summary>
            Overridden. Occurs when the control has just exited edit mode
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.InsertModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.InsertMode"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.MaskProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnValueTypeChanged(System.Type)">
            <summary>
            Overridden. Called when the ValueType property changes.
            </summary>
            <param name="newType">New value of the property.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ApplyMask(System.String,System.String,System.IFormatProvider,System.Char,System.Char,Infragistics.Windows.Editors.MaskMode)">
            <summary>
            Applies the specified mask to the specified text and returns the result.
            </summary>
            <param name="text">Text to apply the mask to.</param>
            <param name="mask">The mask to apply.</param>
            <param name="formatProvider">Provides culture specific symbols in the mask. This may not 
            be applicable to all masks - only the masks that have characters (like currency symbol) 
            that need to be represented by culture specific version of the symbol.</param>
            <param name="promptCharacter">The prompt character - only applicable with certain mask modes.</param>
            <param name="padCharacter">The pad character - only applicable with certain mask modes.</param>
            <param name="maskMode">Specifies the mask mode.</param>
            <returns>The result of applying the specified mask to the specified text.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>
            Overridden. Called to synchronize value and text properties. Derived classes can override this
            method if they have their own value properties (like the XamCheckEditor which has
            IsChecked property) because the Value, Text and all other editor specific value
            related properties need to be kept in sync. Default implementation synchronizes
            Value and Text properties.
            </summary>
            <param name="prop">Property that changed.</param>
            <param name="newValue">New value of the property.</param>
            <param name="error">Set this to the any error message if synchronization fails (for example
            because of type conversion or some other problem with syncrhonizing the new value).</param>
            <returns>Value indicating whether the new value should be considered valid. If false is
            returned, IsValueValid property will be set to false.</returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.DataModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DataMode"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializeDataMode">
            <summary>
            Returns true if the DataMode property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetDataMode">
            <summary>
            Resets the DataMode property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.ClipModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.ClipMode"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializeClipMode">
            <summary>
            Returns true if the ClipMode property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetClipMode">
            <summary>
            Resets the ClipMode property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.DisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayMode"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializeDisplayMode">
            <summary>
            Returns true if the DisplayMode property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetDisplayMode">
            <summary>
            Resets the DisplayMode property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.PadCharProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.PadChar"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializePadChar">
            <summary>
            Returns true if the PadChar property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetPadChar">
            <summary>
            Resets the PadChar property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.PromptCharProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.PromptChar"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializePromptChar">
            <summary>
            Returns true if the PromptChar property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetPromptChar">
            <summary>
            Resets the PromptChar property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.SelectAll">
            <summary>
            Selects all the text in the control.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.Delete">
            <summary>
            Deletes currently selected text if possible and shifts characters accordingly.
            </summary>
            <remarks>
            <p class="body">When you invoke this method, the control tries to delete the  currently selected text and shift characters. If nothing is selected, it tries to delete the character at the current input position.</p> 
            <p class="body">This method returns True if the operation was successful. If the operation fails because characters after the selection could not be shifted, the method returns False.</p>
            </remarks>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.Copy">
            <summary>
            Performs a Copy edit operation on the currently selected text, placing it on the clipboard.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.Cut">
            <summary>
            Performs a Cut edit operation on the currently selected text, removing it from the control and placing it on the clipboard.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.Paste">
            <summary>
            Performs a Paste edit operation.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ToggleInsertMode">
            <summary>
            Toggles between insert and overstrike mode.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializeTabNavigation">
            <summary>
            Returns true if the TabNavigation property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetTabNavigation">
            <summary>
            Resets the TabNavigation property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.IsValidPromptChar(System.Char)">
            <summary>
            Indicates if the specified character is valid for use as a prompt character for the <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/>.
            </summary>
            <param name="promptCharacter">Character to evaluate</param>
            <returns>False if the character is a tab, new line or carriage return. Otherwise true is returned.</returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.CaretPositionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.CaretPosition"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.PivotPositionProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.PivotPosition"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.ExecutingCommandEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutingCommand"/> routed event
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutingCommand"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMaskedEditor.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)">
            <summary>
            Occurs before a command is performed
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutingCommand"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMaskedEditor.ExecutingCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.ExecutedCommandEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutedCommand"/> routed event
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutedCommand"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMaskedEditor.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)">
            <summary>
            Occurs after a command is performed
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutedCommand"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMaskedEditor.ExecutedCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ExecuteCommand(Infragistics.Windows.Commands.CommandWrapper)">
            <summary>
            Executes the RoutedCommand represented by the specified CommandWrapper.
            </summary>
            <param name="commandWrapper">The CommandWrapper that contains the RoutedCommand to execute</param>
            <returns>True if command was executed, false if canceled.</returns>
            <seealso cref="T:Infragistics.Windows.Editors.MaskedEditorCommands"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ExecuteCommand(System.Windows.Input.RoutedCommand)">
            <summary>
            Executes the specified RoutedCommand.
            </summary>
            <param name="command">The RoutedCommand to execute.</param>
            <returns>True if command was executed, false if canceled.</returns>
            <seealso cref="T:Infragistics.Windows.Editors.MaskedEditorCommands"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.GetDefaultMask(System.Type,System.IFormatProvider)">
            <summary>
            Gets the default mask for the editor. When the owner doesn't provide any
            mask, value of this property will be used as the default mask. Default value is
            null. You should only override this property if your editor only supports a specific 
            type. For example, DateTimeEditor only supports Date. Editing numbers, or strings 
            do not make sense for a date time editor. So for such editors, override and return
            a default mask for that editor.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehaviorProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializeSelectAllBehavior">
            <summary>
            Returns true if the SelectAllBehavior property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetSelectAllBehavior">
            <summary>
            Resets the SelectAllBehavior property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ShouldSerializeAutoFillDate">
            <summary>
            Returns true if the AutoFillDate property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ResetAutoFillDate">
            <summary>
            Resets the AutoFillDate property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ProcessKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Processes the key down event args. Default implementation does nothing.
            This class overrides OnKeyDown and performs some default processing and
            then calls this method if further key down processing is to be done.
            Derived classes are intended to override this method instead of OnKeyDown.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnTextInput(System.Windows.Input.TextCompositionEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamMaskedEditor.CaretVisibleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.CaretVisible"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.GetVisualChild(System.Int32)">
            <summary>
            Gets the visual child at a specified index.
            </summary>
            <param name="index">The zero-based index of the specific child visual.</param>
            <returns>The visual child at the specified index.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.ArrangeOverride(System.Windows.Size)">
            <summary>
            Positions child elements and determines a size for this element.
            </summary>
            <param name="finalSize">The size available to this element for arranging its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> used by this element to arrange its children.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)">
            <summary>
            Called when the ContextMenu is about to open
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnMouseDoubleClick(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called when the left mouse button is pressed
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e">Event args that contains more information about the event.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamMaskedEditor.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMaskedEditor.InvalidChar">
            <summary>
            Occurs when the user types a character that fails mask validation.
            </summary>
            <remarks>
            <para class="body">
            The InvalidChar event is fired when user types a character that does not match the mask associated with the current input position.
            </para>
            <seealso cref="T:Infragistics.Windows.Editors.Events.InvalidCharEventArgs"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayMode">
            <summary>
            Specifies if and when to display spin buttons which are used to increment or decrement the editor value.
            Default value is <b>Never</b>.
            </summary>
            <remarks>
            <para class="body">
            <b>SpinButtonDisplayMode</b> specifies if and when to display the spin buttons in the control. Spin buttons 
            allow the user to increment and decrement the current value in the editor. By default the value of the current
            section (section where the caret is) is incremented or decremented. If you specify the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinIncrement"/>
            property then the whole value of the editor will be incremented or decremented by that value depending upon
            whether the up or down spin button is pressed, respectively.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinIncrement"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinWrap"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonStyle">
            <summary>
            Used for setting the Style of the spin buttons which are instances of RepeatButton class. Default value is null.
            </summary>
            <remarks>
            <para class="body">
            Default value of this property is null. You can use this property to specify a Style object to use for the
            spin buttons, which are RepeatButton instances, displayed inside the editor.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinIncrement"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonVisibilityResolved">
            <summary>
            Returns the value indicating whether the spin buttons should be displayed.
            </summary>
            <remarks>
            <para class="body">
            <b>SpinButtonVisibilityResolved</b> property returns the resolved value indicating 
            the visibility of the spin buttons in the control. This property is used by the
            control template to control the visibility of the spin buttons.
            </para>
            <para class="body">
            Set the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayMode"/> property to control if and when the
            spin buttons are displayed.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayMode"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinIncrement">
            <summary>
            Specifies the amount by which to increase or decrease the value of the editor when 
            up or down spin button is clicked.
            </summary>
            <remarks>
            <para class="body">
            <b>SpinIncrement</b> property specifies the amount by which the value of the editor
            will be increased or decreased when up or down spin button is clicked, respectively.
            </para>
            <para class="body">
            The amount one specifies depends on the type of values that the editor edits. 
            When the editor is used for numeric values then the spin increment amount can be 
            specified as a numeric value in the form of any numeric type (for example 5, 10.5 etc...), 
            as long as the type can be converted to match the editor's <see cref="T:System.ValueType"/>.
            A special string vlaue of "log" is supported for numeric types where the editor's
            value is incremented in an accelerated fashion when the mouse button is held pressed 
            over the spin button for a certain amount of time.
            </para>
            <para class="body">
            When date and time values are being edited, you can specify the amount as a TimeSpan
            instance or as one of the following tokens.
            <list type="bullet">
            
            <item>
            <term>"1d"</term>
            <description>
            Date will be incremented or decrement by 1 day. You can specify
            a different integer value for the number of days, for example "10d".
            </description>
            </item>
            
            <item>
            <term>"1m"</term>
            <description>
            Date will be incremented or decrement by 1 month. You can specify
            a different integer value for the number of months, for example "2m".
            </description>
            </item>
            
            <item>
            <term>"1y"</term>
            <description>
            Date will be incremented or decrement by 1 year. You can specify
            a different integer value for the number of years, for example "2y".
            </description>
            </item>
            
            </list>
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinWrap"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.HasSpinIncrement">
            <summary>
            Returns true if the SpinIncrement has been set to a valid value.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinWrap">
            <summary>
            Returns or sets a value indicating whether the control's spin buttons should wrap its value. Default value is <b>False</b>.
            </summary>
            <remarks>
            <p class="body">
            If True the spin button will wrap the value incremented/decremented based on its Min/Max value.
            When incrementing the value and the value is already at its maximum, the value will wrap to 
            minimum value. The same applies when decrementing the value.
            </p>
            <p class="body">
            To actually specify the minimum and maximum value, use the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            property.
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections">
            <summary>
            A collection of the sections used in the control. Returns
            a valid collection only if the mask has been parsed yet.
            </summary>
            <remarks>
            <para class="body">
            When mask is parsed the result is a collection of <see cref="T:Infragistics.Windows.Editors.SectionBase"/> derived
            objects. This property returns that collection. Each SectionBase object has 
            a collection of its display characters return via its <see cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/>
            property. XamMaskedEditor also exposes a collection that contains aggregate display characters 
            of all sections via its <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/> property.
            </para>
            <para class="body">
            This property is useful for example if you want to query and find out the structure 
            of the parsed mask or to query and/or manipulate the current user input on a per
            section or per display character basis.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars">
            <summary>
            A collection of the display characters used in the control. Returns
            a valid collection only if the mask has been parsed yet.
            </summary>
            <remarks>
            <para class="body">
            Returns a collection of display characters. When mask is parsed, result is
            a collection of sections where each section corresponds with a part of the
            mask. Each section in turn has a collection of <see cref="T:Infragistics.Windows.Editors.DisplayCharBase"/>
            derived objects each of which correspond to a placeholder character in the 
            part of the mask associated with the section. DisplayChars returns the 
            aggregate display character instances from all sections.
            </para>
            <para class="body">
            See <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/> for more information on potential usage of this
            and Sections property.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.IsTextBoxEntryEnabled">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.InsertMode">
            <summary>
            Returns or sets the editing mode (insert or overstrike).
            </summary>
            <remarks>
            <p class="body">When this property is set to True, characters typed will be inserted at the current caret position and any following characters will be shifted. When set to False, typing at an insertion point that contains an existing character will replace that character. The value of this property also affects how characters are deleted using either The Delete key or the Backspace key. When in insert mode, characters after the character being deleted will be shifted by one to the left within the section.</p>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AllowShiftingAcrossSections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask">
            <summary>
            Returns or sets the mask associated with the masked edit control.
            </summary>
            <remarks>
            <p class="body">When a mask is defined, placeholders are defined by the 
            <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.PromptChar"/> property. When inputting data, the user can only 
            replace a placeholder with a character that is of the same type as the one 
            specified in the mask. If the user enters an invalid character, the control 
            rejects the character and generates the <see cref="E:Infragistics.Windows.Editors.XamMaskedEditor.InvalidChar"/> event. The 
            control can distinguish between numeric and alphabetic characters for 
            validation, as well as validate for valid content for certain types like, 
            date or time or numeric types such as the correct 
            month or time of day etc...</p>
            <p class="body">For a complete list of the various mask tokens as well as 
            examples please refer to <a href="xamEditors_Masks.html">Masks</a> topic.</p>
            <p class="note"><b>Note:</b> When specifying the mask from within XAML and using 
            one of the special tokens that are enclosed within {}, you must preceed the 
            mask with {} - e.g. {}{date}.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.DataMode">
            <summary>
            Returns or sets a value that determines how the control's contents will be stored by 
            the data source when data masking is enabled.
            </summary>
            <remarks>
            <p class="body">This property is used to determine how mask literals and prompt characters are handled when the control's contents are passed to the data source (or are retrieved using the <see cref="P:Infragistics.Windows.Editors.ValueEditor.Text"/> property.) Based on the setting of this property, the text of the control will contain no prompt characters or literals (just the raw data), the data and just the literals, the data and just the prompt characters, or all the text including both prompt characters and literals. The formatted spacing of partially masked values can be preserved by indicating to include literals with padding, which includes data and literal characters, but replaces prompt characters with pad characters (usually spaces).</p>
            <p class="body">Generally, simply the raw data is committed to the data source and data masking is used to format the data when it is displayed. In some cases, however, it may be appropriate in your application to store mask literals as well as data.</p>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayMode"/> <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.ClipMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.ClipMode">
            <summary>
            Returns or sets a value that determines how the control's contents will be copied to the clipboard when data masking is in enabled.
            </summary>
            <remarks>
            <p class="body">This property is used to determine how mask literals and prompt characters are handled when the control's contents are copied to the clipboard. Based on the setting of this property, the text of the control will contain no prompt characters or literals (just the raw data), the data and just the literals, the data and just the prompt characters, or all the text including both prompt characters and literals. The formatted spacing of partially masked values can be preserved by indicating to include literals with padding, which includes data and literal characters, but replaces prompt characters with pad characters (usually spaces).</p>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DataMode"/> <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayMode">
            <summary>
            Returns or sets a value that determines how the control's contents will be displayed when the control is not in edit mode and data masking is enabled.
            </summary>
            <remarks>
            <p class="body">This property is used to determine how mask literals and prompt characters are displayed when the control is not in edit mode. Based on the setting of this property, the text of the control will contain no prompt characters or literals (just the raw data), the data and just the literals, the data and just the prompt characters, or all the text including both prompt characters and literals. The formatted spacing of partially masked values can be preserved by indicating to include literals with padding, which includes data and literal characters, but replaces prompt characters with pad characters (usually spaces).</p>
            <p class="body">Generally, prompt characters disappear when a cell is no longer in edit mode, as a visual cue to the user. In some cases, however, it may be appropriate in your application to display mask literals as well as data when a cell is no longer in edit mode.</p>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DataMode"/> <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.ClipMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.PadChar">
            <summary>
            Returns or sets the character that will be used as the pad character. Default is space character (' ').
            </summary>
            <remarks>
            <p class="body">The pad character is the character that is used to replace the prompt characters when getting the data from the XamMaskedEditor control with DataMode of IncludeLiteralsWithPadding.</p>
            <para class="body">
            For example, if the data in the editor is as follows:<br/>
            111-2_-____<br/>
            and DataMode is set to IncludeLiteralsWithPadding then the returned value will be "111-2 -    ".
            Prompt characters will be replaced by the pad character.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.PromptChar"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.PromptChar">
            <summary>
            Returns or sets the prompt character. The default prompt character is the underscore (_).
            </summary>
            <remarks>
            <para class="body">
            Prompt character is the character that's displayed in place of any blank display characters.
            Each display character is a place holder in the mask where the user enters the characters
            as required by the mask. The default prompt character is underscore (_).
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.PadChar"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayNullTextWhenNotFocused">
            <summary>
            Indicates whether the mask editor displays NullText if the value entered 
            is null and the control doesn't have focus.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayFormattedTextWhenNotFocused">
            <summary>
            Indicates whether the mask editor displays NullText if the value entered 
            is null and the control doesn't have focus.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation">
            <summary>
            Specifies whether to tab between sections when Tab and Shift+Tab keys are pressed.
            The default value is <b>NextControl</b>.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AllowShiftingAcrossSections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.InsertMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.AllowShiftingAcrossSections">
            <summary>
            Specifies whether to shift characters across section boundaries when deleting characters.
            Default value is <b>True</b>.
            </summary>
            <remarks>
            <para class="body">
            This property controls what happens to the characters in the following sections when one or 
            more characters are deleted in the current section. For example, in a simple mask like 
            "###-###" where there are two input sections separated by a '-' character. Each input section
            comprises of three digit placeholders. Let's say the whole mask is currently filled with data. 
            When you delete a character in the first section, this property controls whether the characters
            from the next input section flow into this section or not.
            </para>
            <para class="body">
            Continuing from above example, let's say the editor has the following data:<br/>
            "123-456"<br/>
            If the caret is located before the character '2' and you hit Delete key, the 2 will be deleted 
            and '3' will be shifted left to occupy the position '2' had occupied. This will happen regardless
            of the AllowShiftingAcrossSections setting. However what happens after this depends on the value
            of this property.
            <b>If AllowShiftingAcrossSections is set to False</b>, the position '3' originally occupied will
            become empty and the resulting display characters will be as the following:<br/>
            "13_-456"<br/>
            <b>If AllowShiftingAcrossSections is set to True</b>, characters from the next input section will
            'flow' into current input section to fill in the position vacated by '3' when it got shifted left
            to occpy the position of '2'. Here is how the resulting display characters will look like:<br/>
            "134-56_"<br/>
            </para>
            <para class="body">
            What value you would use for this property depends on the kind of mask that you have. The usability
            is greatly affected by the value of this property depending on the mask being used. For example, in
            a Date mask where each section of the date (month, day, year) is a logically distinct value, you 
            would not want to shift values across sections. As a matter of fact, for certain built in masks
            like date, time etc... shifting across sections can not be enabled even by setting this property to
            True since that is something that would not be desirable under any circumstance for those masks. However 
            for custom masks, you may want to set this property to a value based on whether it makes sense for that 
            particular mask to shift characters across sections.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.InsertMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectionStart">
            <summary>
            Indicates the start location of the selected text. If no text is selected, this property indicates
            the location of the caret.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectionLength">
            <summary>
            Gets/sets the length of the selected text. If nothing is selected then returns 0.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectedText">
            <summary>
            Gets or sets the selected text.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectedText</b> property returns the currently selected text if any. If nothing is selected
            then returns empty string.
            </para>
            <para class="body">
            Setting this property replaces the current selected text with the set value. If nothing
            is selected and the property is set, the set value is inserted at the location of the caret.
            Note that setting this property will modify the contents of the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.TextLength">
            <summary>
            Indicates the total length of the text in the control when in edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.CaretPosition">
            <summary>
            Gets or sets the current caret position. Only valid when the editor is in edit mode.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.PivotPosition">
            <summary>
            Gets or sets the pivot position. Pivot position and caret positions indicate which
            characters are selected in the control.
            </summary>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutingCommand">
            <summary>
            Occurs before a command is performed
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMaskedEditor.OnExecutingCommand(Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMaskedEditor.ExecutingCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutingCommandEventArgs"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamMaskedEditor.ExecutedCommand">
            <summary>
            Occurs after a command is performed
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamMaskedEditor.OnExecutedCommand(Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs)"/>
            <seealso cref="F:Infragistics.Windows.Editors.XamMaskedEditor.ExecutedCommandEvent"/>
            <seealso cref="T:Infragistics.Windows.Controls.Events.ExecutedCommandEventArgs"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior">
            <summary>
            Specifies whether to select only the entered characters or all the characters (including prompt
            characters) when the editor performs the operation of select all text. The default value of
            the property is <b>SelectAllCharacters</b>.
            </summary>
            <remarks>
            <p class="body">
            When this property is set to <b>SelectEnteredCharacters</b>, the select-all-text operation will
            select text starting from the first entered character to the last entered character, including
            adjacent literals.
            </p>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AllowShiftingAcrossSections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.InsertMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate">
            <summary>
            Specifies whether to auto-fill empty date components when the user attempts to leave the editor.
            The default is <b>None</b>.
            </summary>
            <remarks>
            <para class="body">
            If the user types in an incomplete date then the editor will consider the input invalid
            and take appropriate actions based on the <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/>
            property setting. <b>AutoFillDate</b> lets you specify that such partial date inputs be
            auto-filled using the current date.
            </para>
            <para class="body">
            If you set the AutoFillDate to <b>Year</b> then the user will be required to enter both 
            the month and the day. The year if left blank will be filled in with the current year.
            If AutoFillDate is set to <b>MonthAndYear</b> then the user will be required to enter
            the day. The month and year if left blank will be filled in with the current month and
            the current year respectively.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AllowShiftingAcrossSections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.InsertMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.DefaultValueToDisplayTextConverter">
            <summary>
            Overridden. Returns the default converter used for converting between the value and the text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.DefaultValueToTextConverter">
            <summary>
            Overridden. Returns the default converter used for converting between the value and the text.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.Commands">
            <summary>
            Gets the supported commands (read-only) 
            </summary>
            <value>A static instance of the <see cref="T:Infragistics.Windows.Editors.MaskedEditorCommands"/> class.</value>
            <remarks>
            <p class="body">This class exposes properties that return all of the commands that the control understands. 
            </p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.CaretVisible">
            <summary>
            Flag that indicates whether the caret should be shown.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamMaskedEditor.VisualChildrenCount">
            <summary>
            Returns the total numder of visual children (read-only).
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamNumericEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.XamNumericEditor"/>
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamCurrencyEditor">
            <summary>
            Allows editing of currency data based on a mask.
            </summary>
            <remarks>
            <p class="body">The <b>XamCurrencyEditor</b> is a derived <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/> that is designed to 
            display and edit currency data. By default, its <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property is set to 
            <see cref="T:System.Decimal"/>.</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamCurrencyEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.XamCurrencyEditor"/>
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamDateTimeEditor">
            <summary>
            Allows editing of date and/or time based on a mask.
            </summary>
            <remarks>
            <para class="body">
            <b>XamDateTimeEditor</b> can be used to edit a date and/or time. Based on the value of the
            <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property, it can edit date, time or both date and time.
            The following are some example masks:<br/>
            <ul>
            <li><b>{date}</b> - Date mask based on <i>short</i> date pattern setting of the system.</li>
            <li><b>{time}</b> - Time mask based on <i>short</i> time pattern setting of the system. Short time pattern typically does not include seconds portion.</li>
            <li><b>{longtime} - Time mask based on <i>long</i> time pattern setting of the system. Long time pattern typically includes seconds portion.</b></li>
            
            <li><b>{date}</b> - Creates a date only mask based on the short date pattern.</li>
            <li><b>{time}</b> - Creates a time only mask based on the short time pattern.</li>
            <li><b>{longtime}</b> - Creates atime only mask based on the long time pattern, which typically includes seconds.</li>
            <li><b>{date} {time}</b> - Creates a date and time mask based on the short date and short time patterns.</li>
            <li><b>mm/dd/yyyy</b> - Creates a date only mask. Note: This mask specifies the exact order of day, month and year explicitly. The underlying
            culture settings will not be used to determine the order of day, month and year section.</li>
            </ul>
            <br/>
            See help for <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property for a listing of all the supported masks,
            including ones that are relevant for date and time.
            </para>
            <para class="body">
            By default the current culture settings will be used to determine the format of date and time.
            However you can override that by setting the <see cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/> and 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/> properties. If <b>FormatProvider</b> is set then the mask and the 
            formatting will be based on the settings provided by <b>FormatProvider</b>. Otherwise the formatting will 
            be based on the current culture. Note: the <b>Format</b> property only controls what gets displayed when
            the control is not in edit mode. See <see cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/> for more information.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FormatProvider"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Format"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.XamDateTimeEditor"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnApplyTemplate">
            <summary>
            Invoked when the template has been applied to the editor.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnInitialized(System.EventArgs)">
            <summary>
            Overriden. Raises the <see cref="E:System.Windows.FrameworkElement.Initialized"/> event. This method is invoked when the <see cref="P:System.Windows.FrameworkElement.IsInitialized"/> is set to true.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Overridden. Called when a dependency property changes.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.SyncValuePropertiesOverride(System.Windows.DependencyProperty,System.Object,System.Exception@)">
            <summary>
            Overridden. Called to synchronize value and text properties. Derived classes can override this
            method if they have their own value properties (like the XamCheckEditor which has
            IsChecked property) because the Value, Text and all other editor specific value
            related properties need to be kept in sync. Default implementation synchronizes
            Value and Text properties.
            </summary>
            <param name="prop">Property that changed.</param>
            <param name="newValue">New value of the property.</param>
            <param name="error">Set this to the any error message if synchronization fails (for example
            because of type conversion or some other problem with syncrhonizing the new value).</param>
            <returns>Value indicating whether the new value should be considered valid. If false is
            returned, IsValueValid property will be set to false.</returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.AllowDropDownProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.AllowDropDown"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMaxDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMaxDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinCalendarModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinCalendarMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinDateProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinDate"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.DateValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.DateValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonDisplayModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonDisplayMode"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonStyleProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonStyle"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonVisibilityProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.IsDropDownOpenProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.IsDropDownOpen"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnCoerceIsDropDownOpen(System.Windows.DependencyObject,System.Object)">
            <summary>
            When IsDroppedDown is set, we need to make sure that the editor is in edit mode and if not
            enter it into edit mode. That's what this coerce handler does.
            </summary>
            <param name="dependencyObject"></param>
            <param name="valueAsObject"></param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpenedEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpened"/> routed event
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnDropDownOpened(System.Windows.RoutedEventArgs)"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnDropDownOpened(System.Windows.RoutedEventArgs)">
            <summary>
            This method is called when the drop-down list is opened. It raises <see cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpened"/> event.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpened"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosedEvent">
            <summary>
            Event ID for the <see cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/> routed event
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnDropDownClosed(System.Windows.RoutedEventArgs)"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnDropDownClosed(System.Windows.RoutedEventArgs)">
            <summary>
            This method is called when the drop-down list is closed. It raises <see cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/> event.
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.AllowDropDown">
            <summary>
            Returns or sets a value that indicates whether the dropdown should be used to select a date.
            </summary>
            <remarks>
            <p class="body">By default, the XamDateTimeEditor will show a dropdown as long as it it can enter edit mode 
            and has a date mask - i.e. it will not show if the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> is set to a time-only 
            input mask. The AllowDropDown property can be used to prevent the dropdown from being available even when 
            the editor is used to edit a date. When set to false, the editor will not attempt to show the dropdown 
            calendar when using the mouse or keyboard.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamDateTimeEditor.AllowDropDownProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMaxDate">
            <summary>
            Returns the calculated maximum date value for the control
            </summary>
            <remarks>
            <p class="body">The ComputedMaxDate and <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinDate"/> are read-only properties that 
            expose resolved DateTime values from the minimum and maximum properties of the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> 
            and is meant to be used from within the template of the editor. The default template contains a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> 
            that uses these properties to control its <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMaxDateProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinDate"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinCalendarMode">
            <summary>
            Returns the preferred MinCalendarMode for the XamMonthCalendar within the dropdown of the control.
            </summary>
            <remarks>
            <p class="body">The ComputedMinCalendarMode is a read only property that returns a <see cref="T:Infragistics.Windows.Editors.CalendarMode"/> 
            that identifies the smallest date unit that should be available within the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> 
            used in the dropdown of the control. For example, when the <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> is set 
            to a mask that includes days, this property will return <b>Days</b> but if the smallest date unit 
            in the mask is months (e.g. mm/yyyy), then this property will return <b>Months</b> to indicate the 
            dropdown should only allow the user to see months and not days. This property is used within the default 
            template to control the <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinCalendarMode"/> of the contained 
            <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>.</p>
            </remarks>
            <seealso cref="F:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinCalendarModeProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinDate">
            <summary>
            Returns the calculated minimum date value for the control
            </summary>
            <p class="body">The ComputedMinDate and <see cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMaxDate"/> are read-only properties that 
            expose resolved DateTime values from the minimum and maximum properties of the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> 
            and is meant to be used from within the template of the editor. The default template contains a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> 
            that uses these properties to control its <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MinDate"/> and <see cref="P:Infragistics.Windows.Editors.XamMonthCalendar.MaxDate"/>.</p>
            <seealso cref="F:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMinDateProperty"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.ComputedMaxDate"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.DateValue">
            <summary>
            Gets or sets the date portion of the editor's value.
            </summary>
            <remarks>
            <para class="body">
            <b>DateValue</b> property returns the date portion of the editor's value. If the 
            editor's current value is null or has invalid date in it, this property returns
            null.
            </para>
            <para class="body">
            Setting this property updates only the date portion of the editor's value. If
            the current value is null and the editor is in edit mode, only the date portion 
            of the editor's content is be updated, leaving the time portion empty. If the
            editor is not edit mode and the the current value is null, then setting DateValue
            property also sets the Value property to the same DateTime instance.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.Value"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonDisplayMode">
            <summary>
            Specifies when to display the drop down button. Default is <b>MouseOver</b>.
            </summary>
            <remarks>
            <p class="body">The <b>DropDownButtonDisplayMode</b> determines when the drop down button should be displayed.</p>
            <p class="note"><b>Note</b> that the drop down button will always be displayed when the editor 
            is in edit mode. Therefore if the <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> is true, this property 
            will be ignored and the button will always be displayed.</p>
            <para class="body">
            Note that the default value of the property is <b>MouseOver</b> however styles 
            of some of the themes may explicitly set this property to some other value to
            ensure consistency with the default operating system behavior. For example, 
            the default XamComboEditor style in "Aero" theme used in Windows Vista sets this 
            property to <b>Always</b>.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonStyle">
            <summary>
            Used for setting the Style of the drop-down button. Default value is null.
            </summary>
            <remarks>
            <para class="body">
            Default value of this property is null. You can use this property to specify a Style object to use for the
            drop-down button displayed inside the editor.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonVisibility">
            <summary>
            Indicates whether the drop down button is currently visible or not.
            </summary>
            <remarks>
            <para class="body">
            This property can be used to find out if the drop down button is visible or not.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownButtonDisplayMode"/>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamDateTimeEditor.IsDropDownOpen">
            <summary>
            Specifies whether the drop down is currently open.
            </summary>
            <remarks>
            <para class="body">
            <b>IsDropDownOpen</b> returns a value indicating whether the drop down is currently open.
            You can set this property to open or close drop down as well. If you set this property
            to true and the editor is not in edit mode, it will be put in edit mode.
            </para>
            <para class="body">
            You can also hook into <see cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpened"/> and <see cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/> events
            to be notified when the drop-down is opened and closed.
            </para>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpened"/> <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/>
            </remarks>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpened">
            <summary>
            Occurs when the drop-down calendar is opened.
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnDropDownOpened(System.Windows.RoutedEventArgs)"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.IsDropDownOpen"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed"/>
        </member>
        <member name="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownClosed">
            <summary>
            Occurs when the drop-down calendar is closed.
            </summary>
            <seealso cref="M:Infragistics.Windows.Editors.XamDateTimeEditor.OnDropDownClosed(System.Windows.RoutedEventArgs)"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamDateTimeEditor.IsDropDownOpen"/>
            <seealso cref="E:Infragistics.Windows.Editors.XamDateTimeEditor.DropDownOpened"/>
        </member>
        <member name="T:Infragistics.Windows.Editors.DisplayCharBase">
            <summary>
            Base type for all DisplayCharacter classes.
            </summary>
            <remarks>
            <para class="body">
            When XamMaskedEditor parses a mask (specified via XamMaskedEditor's <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property),
            the result is a collection of <see cref="T:Infragistics.Windows.Editors.SectionBase"/>
            derived classes. Each Section in turn is a collection of display characters. Section's
            <see cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/> property returns the display characters of a section.
            XamMaskedEditor returns the collection of sections via its <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            property. It also exposes <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/> property that returns 
            a collection of display characters that contains the aggregate display characters from all sections.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharBase.MatchChar(System.Char)">
            <summary>
            Returns true if the specified character <paramref name="c"/> matches the mask
            </summary>
            <param name="c">Character to match</param>
            <remarks>
            <para class="body">
            MatchChar method is an abstract method that derived display character classes implement.
            This method returns a value indicating whether the specified character matches
            this display character. If this method returns False for a character, the user can not enter 
            that character in the place of this display character.
            </para>
            <para class="body">
            <b>Note:</b> Typically you don't need to use this method directly as the XamMaskedEditor will
            automatically validate the user input against the specified mask.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharBase.DrawSelected">
            <summary>
            This is used to determine whether to draw the display character selected or not.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharBase.IncludeMethod">
            <summary>
            Returns or sets a value that specifies how MaskMode is used in deciding whether or not to include the character. 
            </summary>
            <remarks>
            <p class="body">When <b>IncludeMethod</b> is set to Always, the display character will always be included except when it is empty, in which case normal processing takes effect. (The mask is examined to determine whether a prompt character ot a pad character should be used.) If this property is set to Never, it will never be included in the text. The default setting (DisplayCharIncludeMethod.Default) is to look at the MaskMode that's being applied to the text and determine which character to use accordingly.</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharBase.DrawString">
            <summary>
            Returns the string that will be drawn by this display character.
            </summary>
            <remarks>
            <para class="body">
            DrawString property returns text that is to be drawn in place
            of this dislay character. This is the property that's used by the DisplayCharacterPresenter
            control template to display the display character. 
            It takes into account the focused state of the control as well
            as whether the display character is empty and if so it returns the prompt character.
            </para>
            <para class="body">
            As any state (for example focused) changes that affects this display character, the DrawString
            is updated to reflect the change.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to use this property. You would need to use
            this for example if you are writing a control template for an element that will display this
            display character.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharBase.Visibility">
            <summary>
            Returns whether this display character should be displayed.
            </summary>
            <remarks>
            <para class="body">
            This property is used by the control template of the <see cref="T:Infragistics.Windows.Editors.DisplayCharacterPresenter"/>
            to hide the element. This property takes into account the state of the control (for example
            focused state) and gets updated to reflect changes in the states.
            </para>
            <para class="body">
            <b>Note:</b> Typically you don't need to use this property unless for example you are creating 
            a control template for a ui element that will display this display character.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharBase.IsEditable">
            <summary>
            Indicates if the character position is an editable position, one that
            user can input a character into. The literal characters will return False.
            </summary>
            <remarks>
            <para class="body">
            Literal display characters return False from this property where as the display 
            characters that are place holder for user input return True from this property.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharBase.Char">
            <summary>
            Returns the char associated with this character position.
            If it's an InputPositionBase derivative (character placeholder),
            it will return the character that the user has input, or 0 if it's empty.
            
            For LiteralPosition and derivatives, it will return the associated
            literal character.
            
            Set of this property will only work if IsEditable returns true, otherwise it 
            will throw an exception.
            </summary>
            <remarks>
            <para class="body">
            Gets or sets the character associated with this display character. When the user
            enters text into the editor, this property is updated with the entered character.
            As characters are entered, the caret moves so the next character will capture the
            next character user enters.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.InputCharBase">
            <summary>
            Class that represents an editable position in the mask edit control
            </summary>
            <remarks>
            <para class="body">
            This DisplayCharBase derived class is an abstract base class for representing 
            character positions in the mask that are editable. See <see cref="T:Infragistics.Windows.Editors.DisplayCharBase"/> for
            more information.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.InputCharBase.IsEditable">
            <summary>
            Overridden, returns true to indicate that InputPositionBase derivatives
            are editable character positions.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.InputCharBase.Char">
            <summary>
            returns the char associated with this character position.
            If it's an InputPositionBase derivative (character placeholder),
            it will return the character that the user has input, or 0 if it's empty
            
            For LiteralPosition and derivatives, it will return the 
            literal character that will be used in storing the text (if one
            of the DataMaskModes is to include literals)
            
            set will only work if IsEditable returns true, otherwise it will
            throw an exception
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.LiteralChar">
            <summary>
            Class for matching literal characters.
            </summary>
            <remarks>
            <para class="body">
            LiteralChar represents literals in the mask. Literal characters are the characters that the user
            can not modify. For example, in the "###-##-####" mask the two occurrences of '-' are literal characters.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.LiteralChar.MatchChar(System.Char)">
            <summary>
            returns true if the character passed in as parameter matches the 
            the literal this instance represents
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.LiteralChar.Char">
            <summary>
            returns the char associated with this character position.
            If it's an InputPositionBase derivative (character placeholder),
            it will return the character that the user has input, or 0 if it's empty
            
            For LiteralPosition and derivatives, it will return the 
            literal character that will be used in storing the text (if one
            of the DataMaskModes is to include literals)
            
            set will only work if IsEditable returns true, otherwise it will
            throw an exception
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DecimalSeperatorChar">
            <summary>
            Class for representing the decimal seperators ('.') in number and currency
            sections.
            </summary>
            <remarks>
            <para class="body">
            DecimalSeperatorChar is a literal character that separates integer and fraction parts of
            a numeric mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.DecimalSeperatorChar.Char">
            <summary>
            returns the char associated with this character position.
            If it's an InputPositionBase derivative (character placeholder),
            it will return the character that the user has input, or 0 if it's empty
            
            For LiteralPosition and derivatives, it will return the 
            literal character that will be used in storing the text (if one
            of the DataMaskModes is to include literals)
            
            set will only work if IsEditable returns true, otherwise it will
            throw an exception
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DigitChar">
            <summary>
            Class for matching digits.
            </summary>
            <remarks>
            <para class="body">
            DigitChar is a dispaly character that accepts a numeric character (0-9).
            Char.IsDigit is used to check if a character is numeric.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.DigitChar.MatchChar(System.Char)">
            <summary>
            checks to see if specified character c mathces a digit
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.AlphaChar">
            <summary>
            Class for matching alpha characters [A-Za-z]
            </summary>
            <remarks>
            <para class="body">
            AlphaChar is a dispaly character that accepts a alphabetic characters (A-Z and a-z).
            Char.IsLetter is used to check if a character is alphabetic character.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.AlphaChar.MatchChar(System.Char)">
            <summary>
            checks to see if specified character c matches
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.AlphanumericChar">
            <summary>
            Class for matching alpha and digits [A-Za-z0-9].
            </summary>
            <remarks>
            <para class="body">
            AlphanumericChar is a dispaly character that accepts a alpha-numeric characters (A-Z, a-z and 0-9).
            Char.IsLetterOrDigit is used to check if a character is alpha-numeric.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.AlphanumericChar.MatchChar(System.Char)">
            <summary>
            checks to see if specified character c matches
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.CharacterSet">
            <summary>
            Class for matching an arbitrary set of characters.
            </summary>
            <remarks>
            <para class="body">
            CharacterSet is a dispaly character that accepts any character that's part of
            an arbitrarily defined set. You can specify a character set in the mask using
            {char:n:set} mask token where n is number of display characters to create and
            set specifies the set of characters that are acceptable. Here is an example
            that creates two display characters that accept a, b, c, d, e, f and 0 to 9
            digit characters:<br/>
            "{char:2:abcdef0-9}"<br/>
            The set can include list of arbitrary characters as well as ranges. In above
            example, 'abcdef' is arbitrary character list where as 0-9 is a range. Ranges
            are inclusize.
            </para>
            <para class="body">
            <b>Note:</b> The character sets are case sensitive. If you want to accept both
            the upper and lower case of a character, include both the upper and lower case
            character in the list.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.CharacterSet.MatchChar(System.Char)">
            <summary>
            checks to see if specified character c matches
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.HexDigitChar">
            <summary>
            Class for matching hexadecimal digit.
            </summary>
            <para class="body">
            HexDigitChar is a dispaly character that accepts an hexadecimal digit (0-9, A-F and a-f).
            to include a hexadecimal character in the mask, use 'h' or 'H' mask character.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use display characters.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
        </member>
        <member name="M:Infragistics.Windows.Editors.HexDigitChar.MatchChar(System.Char)">
            <summary>
            checks to see if specified character c matches
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.KeyboardAndForeignChar.MatchChar(System.Char)">
            <summary>
            checks to see if specified character c matches
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.DisplayCharsCollection">
            <summary>
            Read-only collection that contains <see cref="T:Infragistics.Windows.Editors.DisplayCharBase"/> derived class instances.
            </summary>
            <remarks>
            <para class="body">
            Each section exposes a <see cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/> property that returns the
            display characters of that section. The XamMaskedEditor's <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            property also returns a DisplayCharsCollection that contains all the display characters of 
            all the mask sections in the editor.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use this class as
            the XamMaskedEditor automatically creates and manages this when it parses the mask.
            </para>
            <para class="body">
            See <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/> for more information.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharsCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharsCollection.Section">
            <summary>
            Returns the associated section object.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.EditInfo.CanSpin(System.Boolean,System.Object)">
            <summary>
            Indicates whether current section can be incremented or decremented.
            </summary>
            <param name="up">True for incremenet, false for decrement.</param>
            <param name="amount">Optional - amount by which to increment or decrement.</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.SectionPresenter">
            <summary>
            Represents each section in the masked editor when it's in edit mode.
            </summary>
            <remarks>
            <para class="body">
            This element is used only when the masked editor is in edit mode. When not in edit mode,
            the XamMaskedEditor uses a TextBlock to display the value. <b>Note:</b> Whether 
            XamMaskedEditor remains in edit mode at all times or not can be controlled using its
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> property.
            </para>
            <para class="body">
            Each section in the parsed mask has a SectionPresenter in the visual tree of the
            XamMaskedEditor when it's in edit mode. <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            property returns all sections of a XamMaskedEditor.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need to deal with the elements in the visual tree
            directly as they are managed by the XamMaskedEditor itself.
            </para>
            <seealso cref="T:Infragistics.Windows.Editors.SectionBase"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionPresenter.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.SectionPresenter"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionPresenter.Initialize(Infragistics.Windows.Editors.SectionBase)">
            <summary>
            Initializes this SectionPresenter with the specified section object.
            </summary>
            <param name="section"></param>
        </member>
        <member name="F:Infragistics.Windows.Editors.SectionPresenter.SectionProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.SectionPresenter.Section"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionPresenter.Section">
            <summary>
            Returns the section object associated with this section presenter.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DisplayCharacterPresenter">
            <summary>
            Represents individual character of MaksedEditor when it's in edit mode.
            </summary>
            <remarks>
            <para class="body">
            This element is used only when the masked editor is in edit mode. When not in edit mode,
            the XamMaskedEditor uses a TextBlock to display the value. <b>Note:</b> Whether 
            XamMaskedEditor remains in edit mode at all times or not can be controlled using its
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> property.
            </para>
            <para class="body">
            Each display character in the parsed mask has a DisplayCharacterPresenter in
            the visual tree of the XamMaskedEditor when it's in edit mode. 
            <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/> returns all display characters of
            a XamMaskedEditor. Also each Section has a collection of display characters
            (<see cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/>).
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need to deal with the elements in the visual tree
            directly as they are managed by the XamMaskedEditor itself.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            <seealso cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharacterPresenter.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharacterPresenter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.DisplayCharacterPresenter"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharacterPresenter.Initialize(Infragistics.Windows.Editors.DisplayCharBase)">
            <summary>
            Initializes this DisplayCharacterPresenter with the specified display character object.
            </summary>
            <param name="displayCharacter">The display character associated with the element</param>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayCharacterPresenter.DisplayCharacterProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.DisplayCharacterPresenter.DisplayCharacter"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayCharacterPresenter.DrawAsSelectedProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.DisplayCharacterPresenter.DrawAsSelected"/> dependency property
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharacterPresenter.DisplayCharacter">
            <summary>
            Returns the display character object associated with this display character presenter.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharacterPresenter.DrawAsSelected">
            <summary>
            Returns a value indicating whether the display character should be drawn as selected.
            This property takes into consideration whether the editor has keyboard focus or not.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.SectionsList">
            <summary>
            UI element that displays sections of masked editor.
            </summary>
            <remarks>
            <para class="body">
            This element is used only when the masked editor is in edit mode. When not in edit mode,
            the XamMaskedEditor uses a TextBlock to display the value. <b>Note:</b> Whether 
            XamMaskedEditor remains in edit mode at all times or not can be controlled using its
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> property.
            </para>
            <para class="body">
            SectionsList element is an ItemsControl in the visual tree of the XamMaskedEditor that 
            is responsible for displaying all the sections of the parsed mask. XamMaskedEditor exposes 
            section collection via its <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/> property.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need to deal with the elements in the visual tree
            directly as they are managed by the XamMaskedEditor itself.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionsList.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionsList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.SectionsList"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionsList.GetContainerForItemOverride">
            <summary>
            Creates the container to wrap an item.
            </summary>
            <returns>The newly created container</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionsList.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the container to 'host' the item.
            </summary>
            <param name="element">The container that wraps the item.</param>
            <param name="item">The data item that is wrapped.</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionsList.Sections">
            <summary>
            Returns the associated sections.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DisplayCharactersList">
            <summary>
            UI element that displays display characters of a section in masked editor.
            </summary>
            <remarks>
            <para class="body">
            This element is used only when the masked editor is in edit mode. When not in edit mode,
            the XamMaskedEditor uses a TextBlock to display the value. <b>Note:</b> Whether 
            XamMaskedEditor remains in edit mode at all times or not can be controlled using its
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsAlwaysInEditMode"/> property.
            </para>
            <para class="body">
            DisplayCharactersList element displays display characters of a Section. This element
            is a child of <see cref="T:Infragistics.Windows.Editors.SectionPresenter"/>. Section exposes its display characters
            via its <see cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/> property.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need to deal with the elements in the visual tree
            directly as they are managed by the XamMaskedEditor itself.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharactersList.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharactersList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.DisplayCharactersList"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharactersList.GetContainerForItemOverride">
            <summary>
            Creates the container to wrap an item.
            </summary>
            <returns>The newly created container</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharactersList.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the container to 'host' the item.
            </summary>
            <param name="element">The container that wraps the item.</param>
            <param name="item">The data item that is wrapped.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharactersList.MeasureOverride(System.Windows.Size)">
            <summary>
            Invoked to measure the element and its children.
            </summary>
            <param name="availableSize">The size that reflects the available size that this element can give to its children.</param>
            <returns>The <see cref="T:System.Windows.Size"/> that represents the desired size of the element.</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.CaretElement">
            <summary>
            Represents caret element inside a masked editor.
            </summary>
            <remarks>
            <para class="body">
            XamMaskedEditor control uses this element to display caret when it's in edit mode.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.CaretElement.#cctor">
            <summary>
            Static constructor
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CaretElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.CaretElement"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.CaretElement.ArrangeOverride(System.Windows.Size)">
            <summary>
            Overridden. Called to arrange the child elements.
            </summary>
            <param name="arrangeBounds"></param>
            <returns></returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.CaretElement.BlinkVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.CaretElement.BlinkVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.CaretElement.ResetBlinkingEvent">
            <summary>
            This event is raised to indicate that the caret is to reset 
            its blinking timer and start with the blinking state of on.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.CaretElement.BlinkVisibility">
            <summary>
            Specifies the current blinking state - whether it's visible or blinked out.
            </summary>
            <remarks>
            <para class="body">
            This property is animated in the style of the CaretElement. This property
            in turn sets the Visibility property of the element.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.CaretElement.CaretBlinkDuration">
            <summary>
            Returns the caret blink duration.
            </summary>
            <remarks>
            <para class="body">
            System settings are used to determine the caret blink duration. <b>Note:</b>
            This property returns a value that's double the caret blink time as returned
            by the OS. This is because this property indicates the time duration between
            successive caret blinks.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.EditOrientation">
            <summary>
            Enum associated with the <see cref="P:Infragistics.Windows.Editors.EditSectionBase.Orientation"/> property of the <see cref="T:Infragistics.Windows.Editors.EditSectionBase"/> class.
            </summary>
            <remarks>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to specify this property or use this enum
            directly. The XamMaskedEditor will set the associated property automatically based on the
            mask.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.EditSectionBase.Orientation"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditOrientation.LeftToRight">
            <summary>
            The section is a left-to-right section.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.EditOrientation.RightToLeft">
            <summary>
            The section is a right-to-left section.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DisplayCharIncludeMethod">
            <summary>
            This enumeration is used to specify the value for <see cref="P:Infragistics.Windows.Editors.DisplayCharBase.IncludeMethod"/> 
            property. It dictates how a value of a DisplayChar is included when applying
            mask to get the text.
            </summary>
            <remarks>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to specify this property or use this enum
            directly. The XamMaskedEditor will set the associated property automatically based on the
            mask.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.DisplayCharBase.IncludeMethod"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayCharIncludeMethod.Default">
            <summary>
            Default is to look at the mask mode in deciding whether to include
            or not.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayCharIncludeMethod.Always">
            <summary>
            Always include the DisplayChar
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.DisplayCharIncludeMethod.Never">
            <summary>
            Never include the DisplayChar
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.FilterType">
            <summary>
            Used to specify the type of converting is to be done on an input character.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.FilterType.Unchanged">
            <summary>
            Unchanged, character will be unchanged
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.FilterType.LowerCase">
            <summary>
            character will be converted to lower case
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.FilterType.UpperCase">
            <summary>
            character will be converted to upper case
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MaskMode">
            <summary>
            Used for specifying the mode to be applied when getting text from a 
            masked editor.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DataMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayMode"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.ClipMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.XamMaskedEditor.GetText(Infragistics.Windows.Editors.MaskMode)"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskMode.Raw">
            <summary>
            Raw Data Mode. Only significant characters will be
            returned. Any prompt characters or literals will be excluded 
            from the text.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskMode.IncludeLiterals">
            <summary>
            (Default) Include Literal Characters. Data and literal characters will 
            be returned. Prompt characters will be omitted.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskMode.IncludePromptChars">
            <summary>
            Include Prompt Characters. Data and prompt characters will be 
            returned. Literals will be omitted.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskMode.IncludeBoth">
            <summary>
            Include both Prompt Characters and Literals. Text will be 
            returned exactly as it appears in the object when a cell is
            in edit mode. Data, prompt character and literals will all be 
            included.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskMode.IncludeLiteralsWithPadding">
            <summary>
            Include Literals With Padding. Prompt characters will be 
            converted into pad characters (by default they are spaces,
            which are then included with literals and data when text 
            is returned.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.SignDisplayType.None">
            <summary>
            No sign support in the section, so the section will always contain positive numbers.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.SignDisplayType.ShowWhenNegative">
            <summary>
            Sign will only be displayed when the value is negative.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.SignDisplayType.ShowAlways">
            <summary>
            Sign will always be displayed (+ when positive, - when negative).
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MaskedEditTabNavigation">
            <summary>
            Used for specifying XamMaskedEditor's <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation"/> property.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.TabNavigation"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditTabNavigation.NextControl">
            <summary>
            Tab to the next control
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditTabNavigation.NextSection">
            <summary>
            Tab to the next section or to the next control if focus is in the last section. 
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MaskSelectAllBehavior">
            <summary>
            Used for specifying XamMaskedEditor's <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior"/> property.
            </summary>
            <remarks>
            <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SelectAllBehavior"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskSelectAllBehavior.SelectAllCharacters">
            <summary>
            Select all characters.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskSelectAllBehavior.SelectEnteredCharacters">
            <summary>
            Select entered characters, including intervening empty characters and adjacent literals.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.AutoFillDate">
            <summary>
            Used for specifying XamMaskedEditor's <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate"/> property.
            </summary>
            <remarks>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.AutoFillDate"/>
            </remarks>
        </member>
        <member name="F:Infragistics.Windows.Editors.AutoFillDate.None">
            <summary>
            Do not auto-fill.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.AutoFillDate.Year">
            <summary>
            Auto-fill year.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.AutoFillDate.MonthAndYear">
            <summary>
            Auto-fill month and year.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.SpinButtonDisplayMode">
            <summary>
            Used for specifying the XamMaskedEditor's <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayMode"/> property.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.SpinButtonDisplayMode"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.SpinButtonDisplayMode.Never">
            <summary>
            Never display the button.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.SpinButtonDisplayMode.Always">
            <summary>
            Always display the button.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.SpinButtonDisplayMode.MouseOver">
            <summary>
            Display the button when the mouse is over. Note that this option will always display
            the button when the editor is in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.SpinButtonDisplayMode.Focused">
            <summary>
            Display the button when the editor is focus.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.SpinButtonDisplayMode.OnlyInEditMode">
            <summary>
            Display the button only when in edit mode.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.InvalidOperationEventArgs">
            <summary>
            InvalidOperationEventArgs class for firing InvalidOperation event.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.InvalidOperationEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.InvalidOperationEventArgs.Message">
            <summary>
            gets the message associated with an illegal operation user was
            trying to perform
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.InvalidOperationEventArgs.Beep">
            <summary>
            you can set this property to false to prevent the masked edit from 
            beeping.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.InvalidCharEventArgs">
            <summary>
            InvalidCharEventArgs class for firing <see cref="E:Infragistics.Windows.Editors.XamMaskedEditor.InvalidChar"/> event of the XamMaskedEditor.
            </summary>
            <remarks>
            <seealso cref="E:Infragistics.Windows.Editors.XamMaskedEditor.InvalidChar"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.InvalidCharEventArgs.#ctor(System.Char,Infragistics.Windows.Editors.DisplayCharBase)">
            <summary>
            Constructor
            </summary>
            <param name="c">Invalid character that was typed</param>
            <param name="dc">The display character placeholder where the invalid character was typed</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.InvalidCharEventArgs.Char">
            <summary>
            Gets the invalid character that the user attempted to input.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.InvalidCharEventArgs.DisplayChar">
            <summary>
            Gets the display character instance where the user attempted to enter the invalid character.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.InvalidCharEventArgs.Beep">
            <summary>
            Gets or sets a value indicating whether the XamMaskedEditor should beep.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MaskParser.AdjustNonstandardForeignDateMask(System.String@)">
            <summary>
            If the current culture requires a non-standard mask for dates (such as in Japan) then
            this method inserts a '/' character after the last date section in the mask.  This
            allows the analyze method to successfully insert the special postfix character after that
            last date section.
            </summary>
            <param name="mask">A reference to the mask to be analyzed and modified, if appropriate.</param>
        </member>
        <member name="T:Infragistics.Windows.Editors.ParsedMask">
            <summary>
            A class for applying a mask to data.
            </summary>
            <remarks>
            <para class="body">
            <b>ParsedMask</b> parses and stores the parsed mask. It exposes <see cref="M:Infragistics.Windows.Editors.ParsedMask.ApplyMask(System.String,Infragistics.Windows.Editors.MaskMode)"/>
            method for applying the associated mask to the specified data.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ParsedMask.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="mask">The mask</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ParsedMask.#ctor(System.String,System.IFormatProvider)">
            <summary>
            Constructor.
            </summary>
            <param name="mask">The mask</param>
            <param name="formatProvider">The format provider to use to get culture sensitive symbols</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ParsedMask.#ctor(System.String,System.IFormatProvider,System.Char,System.Char)">
            <summary>
            Constructor.
            </summary>
            <param name="mask">The mask</param>
            <param name="formatProvider">The format provider to use to get culture sensitive symbols</param>
            <param name="promptCharacter">The prompt character - only applicable when applying mask with certain mask modes.</param>
            <param name="padCharacter">The prompt character - only applicable when applying mask with certain mask modes.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ParsedMask.ApplyMask(System.String,Infragistics.Windows.Editors.MaskMode)">
            <summary>
            Applies the mask to the specified data.
            </summary>
            <param name="data">Data to apply the mask to.</param>
            <param name="maskMode">Mask mode to use.</param>
            <returns>String that results from applying mask to the specified data.</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.ParsedMask.Mask">
            <summary>
            Returns the associated mask.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ParsedMask.PromptCharacter">
            <summary>
            Returns the associated prompt character. Used only when applying mask with certain mask modes.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ParsedMask.PadCharacter">
            <summary>
            Returns the associated pad character. Used only when applying mask with certain mask modes.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MaskedEditorStates">
            <summary>
            Represents the different states of the masked editor control.  Used to evaluate whether a specific command can be executed.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.Character">
            <summary>
            caret is positioned right before a display char
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.FirstCharacter">
            <summary>
            the caret is positioned right before the first display char
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.LastCharacter">
            <summary>
            the caret is positioned right before the last display char 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.FirstSection">
            <summary>
            the caret is in the first section
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.LastSection">
            <summary>
            the caret is in the last section
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.FirstCharacterInSection">
            <summary>
            the caret is positioned right before the first character in a section
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.LastCharacterInSection">
            <summary>
            the caret is positioned right before the last character in a section
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.AfterLastCharacter">
            <summary>
            the caret is positioned after the last display character		
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.Selected">
            <summary>
            some text is selected
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.Uninitialized">
            <summary>
            Mask has not been initialized, and thus no sections or
            display chars collection exists
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.FirstEditSection">
            <summary>
            the caret is in the first edit section
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.LastEditSection">
            <summary>
            the caret is in the last edit section
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.NotInEditMode">
            <summary>
            State where the editor is not in edit mode.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.TabBySections">
            <summary>
            State where the editor permits tabbing by sections based on the TabNavigation proeprty.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.NextSectionFraction">
            <summary>
            Next edit section is a fraction part.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.CanSpinDown">
            <summary>
            Current section can be decremented.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.CanSpinUp">
            <summary>
            Current section can be incremented.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.CanUndo">
            <summary>
            Can perform Undo action.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.CanRedo">
            <summary>
            Can perform Redo action.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.HasDropDown">
            <summary>
            There is an associated dropdown
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.IsDropDownOpen">
            <summary>
            The associated dropdown is open
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorStates.All">
            <summary>
            The associated dropdown is open
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MaskedEditorCommands">
            <summary>
            Provides the list of RoutedCommands supported by the XamMaskedEditor. 
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.NotACommand">
            <summary>
            Represents a command which is always ignored.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.NextCharacter">
            <summary>
            Command for moving the caret position to the next character.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.NextSection">
            <summary>
            Command for moving the caret position to the next section.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.AfterLastCharacter">
            <summary>
            Command for moving the caret position after the last character.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.SetPivot">
            <summary>
            Command for setting the pivot at where the caret is currently.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.PreviousCharacter">
            <summary>
            Command for moving the caret position to the previous character.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.PreviousSection">
            <summary>
            Command for moving the caret position to the previous section.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.FirstCharacter">
            <summary>
            Command for moving the caret position to the first character.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.SelectSection">
            <summary>
            Command for selecting all the characters of the current section.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.SelectAll">
            <summary>
            Command for selecting all the characters.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.Delete">
            <summary>
            Command for deleting selected text. If nothing is selected then the character at 
            the current caret position will be deleted.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.Backspace">
            <summary>
            Command for performing a 'Backspace' key operation. This command deletes the selected text. If nothing 
            is selected then the character before the current caret position will be deleted.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.Copy">
            <summary>
            Command for copying the selected text.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.Cut">
            <summary>
            Command for cutting the selected text.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.Paste">
            <summary>
            Command for pasting clipboard contents into the editor.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.Undo">
            <summary>
            Command for undoing last change to the value.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.Redo">
            <summary>
            Command for undoing last change to the value.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.ToggleInsertionMode">
            <summary>
            Command for toggling insert mode.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.SpinUp">
            <summary>
            Command for spinning up the value of the section.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.SpinDown">
            <summary>
            Command for spinning down the value of the section.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.MaskedEditorCommands.ToggleDropDown">
            <summary>
            Command for toggling the drop down state of the <see cref="T:Infragistics.Windows.Editors.XamDateTimeEditor"/>. If the editor is not in edit mode,
            this command will put the editor in edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MaskedEditorCommands.GetCommandWrappers">
            <summary>
            The list of CommandWrappers for each supported command.
            </summary>
            <seealso cref="T:Infragistics.Windows.Commands.CommandWrapper"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.MaskedEditorCommands.LoadCommands">
            <summary>
            This method is provided as a convenience for initializing the statics in this class which kicks off
            the process of setting up and registering the commands.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MaskInfo.InternalRefreshValue(System.Object)">
            <summary>
            Gets the value from the owner and sets it on the display chars
            collection.
            </summary>
            <returns>
            If a value indicating whether the value was successfully set.
            </returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.MaskInfo.InternalRefreshValue(System.Object,System.Exception@)">
            <summary>
            Gets the value from the owner and sets it on the display chars
            collection.
            </summary>
            <returns>
            If there's an error (for example the specified value doesn't match the mask), 
            returns the error information. Otherwise returns null.
            </returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.MaskInfo.IsBeingEditedAndFocused">
            <summary>
            Returns true if in edit mode and the associated control is focused.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.MaskInfo.IsBeingEdited">
            <summary>
            Returns true if in edit mode.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MaskInfo.MaskCache.Equals(System.Object)">
            <summary>
            Indicates whether this object is equal to the passed in obj.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.MaskInfo.MaskCache.GetHashCode">
            <summary>
            Rerturns thehas code of the object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.SectionBase">
            <summary>
            Abstract base class for all section classes.
            </summary>
            <remarks>
            <para class="body">
            When XamMaskedEditor parses a mask (specified via XamMaskedEditor's <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Mask"/> property),
            the result is a collection of SectionBase derived classes. Each Section in turn is a collection of display 
            characters. Section's <see cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/> property returns the display characters of a 
            section. XamMaskedEditor returns the collection of sections via its <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            property. It also exposes <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/> property that returns 
            a collection of display characters that contains the aggregate display characters from all sections.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionBase.ValidateString(System.String@)">
            <summary>
            Checks if str is a valid string for this section.
            Either returns <paramref name="str"/> itself or returns a modified string that is to be displayed.
            Returns null to indicate that validation failed
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.SectionBase.GetText">
            <summary>
            Returns the text for this section.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.Sections">
            <summary>
            Returns the sections collection this section belongs to.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.DisplayChars">
            <summary>
            Returns the display characters of this section.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.PreviousSection">
            <summary>
            Finds the previous section.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.PreviousLiteralSection">
            <summary>
            Returns the previous literal section, skipping any edit sections.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.NextSection">
            <summary>
            Returns the next section.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.PreviousEditSection">
            <summary>
            Returns the previous edit section.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.NextEditSection">
            <summary>
            Returns the next edit section, skipping any literal sections.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.SectionBase.NextLiteralSection">
            <summary>
            Returns the next literal section, skipping any edit sections.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.LiteralSection">
            <summary>
            LiteralSection class.
            </summary>
            <remarks>
            <para class="body">
            A LiteralSection is created for each continous occurrences of literals in the mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.LiteralSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.LiteralSection"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.LiteralSection.SetFilterToAllChars(Infragistics.Windows.Editors.FilterType)">
            <summary>
            overridden method does nothing
            </summary>
            <param name="filter"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.LiteralSection.ValidateString(System.String@)">
            <summary>
            Validates the string for this section.
            </summary>
            This method checks to see if the specified string is a valid string for this section. It may modify the specified string in which case the new string will be close to the specified string, but one that matches the section. This method returns False to indicate that validation failed.
            <param name="str">string to validate</param>
            <returns><b>True</b> if string is valid, <b>false</b> otherwise</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.EditSectionBase">
            <summary>
            Abstract base class for non-literal sections.
            </summary>
            <remarks>
            <para class="body">
            EditSectionBase is a base class for all editable sections.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.EditSectionBase.SafeDisplayCharAt(System.Int32)">
            <summary>
            Returns character in DisplayChars collection at index.
            </summary>
            <param name="index">index of char to display</param>
            <returns>character at position or null if not found.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.EditSectionBase.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.EditSectionBase.ValidateSection">
            <summary>
            Validates the section
            </summary>
            This method is usually invoked when the input position is being removed from the section. It returns True if an appropriate value has been input in the section. This function may modify the values of display characters.
            <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.EditSectionBase.ValidateSection(System.Boolean)">
            <summary>
            Validates the section.
            </summary>
            <remarks>
            This method is usually invoked when the input position is being removed from the section. It returns True if an appropriate value has been input in the section. This function may modify the values of display characters.
            </remarks>
            <param name="contentModificationsAllowed">Whether the implementation should modify the contents.</param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.EditSectionBase.Orientation">
            <summary>
            Returns whether editing is left-to-right or right-to-left.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.DisplayCharsEditSection">
            <summary>
            This is an edit section that can contain an arbitrary list of editable display characters.
            </summary>
            <remarks>
            <para class="body">
            DisplayCharsEditSection is created for each group of consecutive editable characters in the mask.
            Note that this section is create for editable characters that do not have their own special sections
            associated with. For example, "mm", "dd", and "yyyy" have <see cref="T:Infragistics.Windows.Editors.MonthSection"/>, 
            <see cref="T:Infragistics.Windows.Editors.DaySection"/> and <see cref="T:Infragistics.Windows.Editors.YearSection"/> associated with them so for these the
            DisplayCharsEditSection is not created. However for other mask characters for which there are
            no special sections associated with them, this object will be created for a group of continuous
            edit mask character in the mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharsEditSection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharsEditSection.ValidateString(System.String@)">
            <summary>
            Checks if str is a valid string for this section.
            Either returns itself or returns a modified string that is to be displayed.
            Returns false to indicate that validation failed
            </summary>
            <param name="str">string to validate</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.DisplayCharsEditSection.ValidateSection(System.Boolean)">
            <summary>
            checks to see if the so far input chars in the section
            satisfy the input requirement for the section
            </summary>
            <param name="contentModificationsAllowed">Whether or not to allow content modification</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise.</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.DisplayCharsEditSection.Orientation">
            <summary>
            indicates whether this section is a right-to-left edit section (number section)
            or a left-to-right (regular edit sections)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.NumberSection">
            <summary>
            A number section that will edit from right to left.
            </summary>
            <remarks>
            <para class="body">
            DisplayCharsEditSection is created for each group of consecutive editable characters in the mask.
            Note that this section is create for editable characters that do not have their own special sections
            associated with. For example, "mm", "dd", and "yyyy" have <see cref="T:Infragistics.Windows.Editors.MonthSection"/>, 
            <see cref="T:Infragistics.Windows.Editors.DaySection"/> and <see cref="T:Infragistics.Windows.Editors.YearSection"/> associated with them so for these the
            DisplayCharsEditSection is not created. However for other mask characters for which there are
            no special sections associated with them, this object will be created for a group of continuous
            edit mask characters in the mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.NumberSection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.NumberSection.ShiftLeft(System.Int32,System.Int32)">
             <summary>
            Overridden. Throws an InvalidOperationException exception
             since this function is invalid for a number section 
             </summary>
             <param name="from"></param>
             <param name="positionsToShift"></param>
             <returns></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.NumberSection.ValidateString(System.String@)">
            <summary>
            Returns true if string str matches the mask associated with this section
            </summary>
            <param name="str">string to validate</param>
            <returns><b>true</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.NumberSection.ValidateSection(System.Boolean)">
            <summary>
            if the input in this section matches the mask.
            </summary>
            <param name="contentModificationsAllowed">Whether or not modifications are allowed</param>
            <returns><b>true</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.NumberSection.CreateDisplayChars">
            <summary>
            Creates display chars associated with this edit section to the passed
            in displayChars collection.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.NumberSection.MinValue">
            <summary>
            min value for this section
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.NumberSection.MaxValue">
            <summary>
            max value for this section
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.NumberSection.Orientation">
            <summary>
            overridden. returns RightToLeft to indicate that this section
            is to be edited right-to-left
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MonthSection">
            <summary>
            Month section part of a date mask.
            </summary>
            <remarks>
            <para class="body">
            MonthSection represents the month portion of a date mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.MonthSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.MonthSection"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MonthSection.ValidateString(System.String@)">
            <summary>
            ValidateString
            </summary>
            <param name="str">string to validate</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.MonthSection.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.MonthSection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:Infragistics.Windows.Editors.DaySection">
            <summary>
            Day section part of a date mask.
            </summary>
            <remarks>
            <para class="body">
            DaySection represents the day portion of a date mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.DaySection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.DaySection"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.DaySection.ValidateString(System.String@)">
            <summary>
            ValidateString
            </summary>
            <param name="str">string to validate</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.DaySection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.DaySection.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.YearSection">
            <summary>
            Year section of a date mask.
            </summary>
            <remarks>
            <para class="body">
            YearSection represents the year portion of a date mask. The section can be two digits year section
            or four digits year section.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.YearSection.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.YearSection"/> class
            </summary>
            <param name="isFourDigits">indicates if year section is 4 digits or 2 digits</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.YearSection.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.YearSection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:Infragistics.Windows.Editors.HourSection">
            <summary>
            Hour section of a time mask.
            </summary>
            <remarks>
            <para class="body">
            HourSection represents the hour portion of a time mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.HourSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.HourSection"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.HourSection.ValidateString(System.String@)">
            <summary>
            ValidateString
            </summary>
            <param name="str">string to validate</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.HourSection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.HourSection.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.AMPMSection">
            <summary>
            Class for AM-PM section of a time mask.
            </summary>
            <remarks>
            <para class="body">
            AMPMSection represents the AM/PM portion of a time mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.AMPMSection.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.AMPMSection.CustomDisplayChar.MatchChar(System.Char)">
            <summary>
            checks to see if specified character c matches
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.AMPMSection.CustomDisplayChar.Char">
            <summary>
            Overridden
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.MinuteSection">
            <summary>
            Minute section of a time mask.
            </summary>
            <remarks>
            <para class="body">
            MinuteSection represents minute portion of a time mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.MinuteSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.MinuteSection"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.MinuteSection.ValidateString(System.String@)">
            <summary>
            ValidateString
            </summary>
            <param name="str">string to validate</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.MinuteSection.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.MinuteSection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="T:Infragistics.Windows.Editors.SecondSection">
            <summary>
            Second section of a time mask.
            </summary>
            <remarks>
            <para class="body">
            SecondSection represents second portion of a time mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.SecondSection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.SecondSection"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.SecondSection.ValidateString(System.String@)">
            <summary>
            ValidateString
            </summary>
            <param name="str">string to validate</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.SecondSection.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.SecondSection.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="T:Infragistics.Windows.Editors.FractionPart">
            <summary>
            Edit section implementation for a fraction part.
            </summary>
            <remarks>
            <para class="body">
            FractionPart represents the fraction part of a numeric mask.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.FractionPart.SetText(System.String)">
            <summary>
            Assigns the text to the section. Call to this method with an invalid text will result in an exception.
            </summary>
            <param name="text"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.FractionPart.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection.
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.FractionPart.ValidateString(System.String@)">
            <summary>
            ValidateString.
            </summary>
            <param name="str">string to validate</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.FractionPart.NumberOfDigits">
            <summary>
            Number of digits in this fraction part.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.FractionPart.Orientation">
            <summary>
            Returns whether editing is left-to-right or right-to-left.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.FractionPartContinuous">
            <summary>
            Edit section implementation for a fraction part.
            </summary>
            <remarks>
            <para class="body">
            FractionPartContinous represents the fraction part of a numeric mask. This differs from
            <see cref="T:Infragistics.Windows.Editors.FractionPart"/> in that this section will allow digits entered into the fraction
            part to flow into the integer part as the fraction part gets filled up. This allows for
            convenient entering of values without having to enter the '.' character. You specify
            this kind of fraction section in the mask using "{double:-n.m:c}" mask token where 'n'
            is the number of digits in integer portion, 'm' the number of digits in the fraction portion
            and 'c' for continous fraction part. See the associated entry in the table of masks
            in the <a href="xamEditors_Masks.html">Masks</a> topic for more information.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use sections.
            XamMaskedEditor will automatically create and manage these objects based on the supplied mask.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.FractionPartContinuous.ValidateSection(System.Boolean)">
            <summary>
            ValidateSection.
            </summary>
            <param name="contentModificationsAllowed">Whether or not contents can be modified</param>
            <returns><b>True</b> if valid, <b>false</b> otherwise</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.FractionPartContinuous.Orientation">
            <summary>
            Returns whether editing is left-to-right or right-to-left.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.SectionsCollection">
            <summary>
            Read-only collection that contains <see cref="T:Infragistics.Windows.Editors.SectionBase"/> derived class instances.
            </summary>
            <remarks>
            <para class="body">
            XamMaskedEditor creates this collection when it parses its mask. XamMaskedEditor's
            <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/> property returns this collection.
            See <see cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/> for more information.
            </para>
            <para class="body">
            <b>Note:</b> Typically there is no need for you to directly create or use this class as
            the XamMaskedEditor automatically creates and manages this when it parses the mask.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.Sections"/>
            <seealso cref="P:Infragistics.Windows.Editors.SectionBase.DisplayChars"/>
            <seealso cref="P:Infragistics.Windows.Editors.XamMaskedEditor.DisplayChars"/>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValuePresenter">
            <summary>
            Abstract base class used for in place editing.
            </summary>
            <remarks>
            <para class="body">
            <b>ValuePresenter</b> is an abstract base class from which various value presenters
            are derived from. These value presenters are used by controls like <b>XamDataGrid</b>.
            However typically there is no need to use them directly. This is mainly as supporting
            infrastructure for other complex controls that embed value editors inside them.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.#ctor">
            <summary>
            Initializes a new <see cref="T:Infragistics.Windows.Editors.ValuePresenter"/>
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnApplyTemplate">
            <summary>
            Called when the template is applied
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Overridden.
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValuePresenter.IsInEditModeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValuePresenter.IsInEditMode"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.EndEditMode(System.Boolean,System.Boolean)">
            <summary>
            Takes the editor out of edit mode
            </summary>
            <param name="acceptChanges">If true will accept any cchanges that were made while in edit mode.</param>
            <param name="force">If true means the EditModeEnding event can't be cancelled.</param>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.StartEditMode"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.StartEditMode">
            <summary>
            Puts the editor into edit mode
            </summary>
            <returns>True if successful.</returns>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.EndEditMode(System.Boolean,System.Boolean)"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.InitializeEditorSettings(System.Type,System.Type,System.Windows.Style)">
            <summary>
            Sets multiple editor settings in one atomic operation.
            </summary>
            <param name="editorType">The type of the editor to use.</param>
            <param name="valueType">The type to use when editng the value, i.e. 'edit as type'.</param>
            <param name="editorStyle">The style of the editor.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.IsCurrentValueValid(System.Exception@)">
            <summary>
            Performs any additional validation required.
            </summary>
            <param name="error">out param containing the error if method returns false.</param>
            <remarks>
            <para class="note"><b>Note:</b> the default implementaion always returns true. This method is intended 
            for use by derived classes that need to perform some additional validatio logic.</para>
            </remarks>
            <returns>True if the current value is valid, otherwise false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnEditorCreated(Infragistics.Windows.Editors.ValueEditor)">
            <summary>
            Called after the editor has been created but before its Content is set, its Style has been applied and before it has been sited.
            </summary>
            <param name="editor">The ValueEditor that was just created</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)">
            <summary>
            Called when the embedded editor is about to enter edit mode
            </summary>
            <param name="e">The event arguments</param>
            <remarks>Setting the <see cref="P:Infragistics.Windows.Editors.Events.EditModeStartingEventArgs.Cancel"/> property to true will prevent the editor from entering edit mode.</remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnded(Infragistics.Windows.Editors.Events.EditModeEndedEventArgs)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)">
            <summary>
            Called when the embedded editor has just entered edit mode
            </summary>
            <param name="e">The event arguments</param>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnded(Infragistics.Windows.Editors.Events.EditModeEndedEventArgs)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)">
            <summary>
            Called when the embedded editor is about to exit edit mode
            </summary>
            <param name="e">The event arguments</param>
            <remarks>
            <para>
            Setting the <see cref="P:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs.Cancel"/> property to true will prevent the editor from exiting edit mode.
            </para>
            <para></para>
            <para>However, if the <see cref="P:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs.Force"/> read-only property is true the action is not cancellable and setting Cancel to true will raise an exception.</para>
            </remarks>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnded(Infragistics.Windows.Editors.Events.EditModeEndedEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnded(Infragistics.Windows.Editors.Events.EditModeEndedEventArgs)">
            <summary>
            Called when the embedded editor has just exited edit mode
            </summary>
            <param name="e">The event arguments</param>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeEnding(Infragistics.Windows.Editors.Events.EditModeEndingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarting(Infragistics.Windows.Editors.Events.EditModeStartingEventArgs)"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeStarted(Infragistics.Windows.Editors.Events.EditModeStartedEventArgs)"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnEditModeValidationError(Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs)">
            <summary>
            Called when the embedded editor has input validation error
            </summary>
            <param name="e">The event arguments</param>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnEditorValueChanged(System.Windows.RoutedEventArgs)">
            <summary>
            Called when the editor's value has changed but it's <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/> event has been suppressed.
            </summary>
            <param name="args">The event arguments</param>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.ValueChanged"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.CommitEditValue(System.Object,System.Boolean@)">
            <summary>
            Called after OnEditModeEnding however before OnEditModeEnded. This is called after
            input validation succeeds to let the host know to commit the value.
            </summary>
            <param name="editedValue">The edited value that is to be committed.</param>
            <param name="stayInEditMode">Whether the editor should cancel the operation of exitting edit mode.</param>
            <returns>Returns true if commit succeeded, false otherwise.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnValueChanged">
            <summary>
            Called when the value has been changed.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnValueEditorKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called by the ValueEditor before it process its OnKeyDown. Default implementation
            returns false. You can override and return true from this method if you want to
            prevent the ValueEditor from processing the key.
            </summary>
            <param name="e"></param>
            <returns>Return true to prevent the value editor from processing the key.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.OnValueValidated">
            <summary>
            Called whenever the value editor validates the value.
            </summary>
            <remarks>
            <para class="body">
            <b>Note</b> that this method is called whenever the value editor validates 
            the value to be valid or invalid.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfo"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.ProcessPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            This class overrides OnPreviewMouseLeftButtonDown. This method is called by
            OnPreviewMouseLeftButtonDown implementation for derived editors to go into
            edit mode and do any processing required from this event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValuePresenter.ShouldSuppressEvent(System.Windows.RoutedEventArgs)">
            <summary>
            Determines whether the event associated with the specified event arguments should be suppressed.
            </summary>
            <param name="args">The event arguments which will be fired with the event if it is not suppressed.</param>
            <returns>True if the event should be suppressed; False otherwise.</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.Editor">
            <summary>
            Returns the associated <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> (read-only). 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.IsEditingAllowed">
            <summary>
            Returns true if editing is allowed
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.IsInEditMode">
            <summary>
            Gets/sets whether the editor is in edit mode
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.ValuePresenter.IsInEditModeProperty"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.StartEditMode"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValuePresenter.EndEditMode(System.Boolean,System.Boolean)"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.AlwaysValidate">
            <summary>
            Indicates whether the editor should always validate its value even if the user doesn't modify it.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.DefaultInvalidValueBehavior">
            <summary>
            Returns the <see cref="T:Infragistics.Windows.Editors.InvalidValueBehavior"/> that should be used by the <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> if the <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> has not been set.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.EditorSite">
            <summary>
            Returns the ContentPresenter in the visual tree that was named 'PART_EditorSite'. 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.EditorStyle">
            <summary>
            Gets/sets the style to use for the editor
            </summary>
            <remarks>
            <para>
            Note: that the TargetType property of the style must be a type that is derived from <see cref="T:Infragistics.Windows.Editors.ValueEditor"/>
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.EditorType">
            <summary>
            Gets/sets the type of the editor
            </summary>
            <remarks>
            <para>
            Note: that the property must be a type that is derived from <see cref="T:Infragistics.Windows.Editors.ValueEditor"/>
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.EditorTypeResolved">
            <summary>
            Returns the resolved editor type based on <see cref="P:Infragistics.Windows.Editors.ValuePresenter.EditorType"/>
            and the target type of the <see cref="P:Infragistics.Windows.Editors.ValuePresenter.EditorStyle"/>.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValuePresenter.ValueType">
            <summary>
            Specifies the type of value this ValuePresenter will be presenting.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.EditModeStartingEventArgs">
            <summary>
            Event arguments for routed event <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeStartingEvent"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.EditModeStartingEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.Events.EditModeStartingEventArgs"/> class
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeStartingEventArgs.Cancel">
            <summary>
            If set to true will cancel the operation
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.EditModeStartedEventArgs">
            <summary>
            Event arguments for routed event <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeStartedEvent"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.EditModeStartedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.Events.EditModeStartedEventArgs"/> class
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs">
            <summary>
            Event arguments for routed event <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeEndingEvent"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs"/> class
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs.AcceptChanges">
            <summary>
            Gets/sets whether the changes will be accepted.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs.Cancel">
            <summary>
            If set to true will cancel the operation
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeEndingEventArgs.Force">
            <summary>
            Indicates a forced exit of edit mode (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.EditModeEndedEventArgs">
            <summary>
            Event arguments for routed event <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
            <seealso cref="F:Infragistics.Windows.Editors.ValueEditor.EditModeEndedEvent"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.EditModeEndedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.Events.EditModeEndedEventArgs"/> class
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeEndedEventArgs.ChangesAccepted">
            <summary>
            Returns whether the changes were accepted (read-only).
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs">
            <summary>
            Event arguments for routed event <see cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeValidationError"/>
            </summary>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarting"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeStarted"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnding"/>
            <seealso cref="E:Infragistics.Windows.Editors.ValueEditor.EditModeEnded"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs.#ctor(Infragistics.Windows.Editors.ValueEditor,System.Boolean,System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs"/> class
            </summary>
            <param name="editor">The editor for which the event is being raised.</param>
            <param name="forceExitEditMode">A boolean indicating whether edit mode is required to exit.</param>
            <param name="exception">The exception associated with the validation error</param>
            <param name="errorMessage">A string containing the error message associated with the validation error</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs.Editor">
            <summary>
            Gets the associated value editor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs.ForceExitEditMode">
            <summary>
            Indicates if the edit mode is being exitted forcefully. For example, when the
            application is being closed.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs.InvalidValueBehavior">
            <summary>
            Gets or sets the invalid value behavior.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.Events.EditModeValidationErrorEventArgs.Exception">
            <summary>
            Gets any exception associated with the validation error.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Shared.ResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Windows.Editors.Resources.GetString(System.String,System.Object[])">
            <summary>
            Returns the resource string using the specified name and default culture.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.Resources.GetString(System.String)">
            <summary>
            Returns the resource string using the specified resource name and default culture. The string is then formatted using the arguments specified.
            </summary>
            <param name="name">Name of the string resource to return.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.Resources.GetDynamicResourceString(System.String)">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Resources.GetDynamicResourceString(System.String,System.Object[])">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Resources.GetDynamicResourceString(System.String,System.Object[],System.Globalization.CultureInfo)">
            <summary>
            Returns a DynamicResourceString object that tracks customization changes to a resource and raises an event when the resource value is changed.
            </summary>
            <param name="name">Name of the string resource to return.</param>
            <param name="args">Arguments supplied to the string.Format method when formatting the string.</param>
            <param name="culture">Culture whose resource should loaded. The resource will go through a fallback process to locate the appropriate resources.</param>
            <returns>A <see cref="T:Infragistics.Shared.DynamicResourceString"/> object to track changes in the resource customizations.</returns>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.SetCustomizedString(System.String,System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetCustomizedString(System.String)"/>
            <seealso cref="M:Infragistics.Shared.ResourceCustomizer.ResetAllCustomizedStrings"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.Resources.GetObject(System.String)">
            <summary>
            Returns the resource object using the specified name.
            </summary>
            <param name="name">Name of the resource item</param>
            <returns>An object containing the specified resource</returns>
        </member>
        <member name="P:Infragistics.Windows.Editors.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Shared.ResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="P:Infragistics.Windows.Editors.Resources.TodayButtonCaption">
            <summary>
            Returns a <see cref="T:Infragistics.Shared.DynamicResourceString"/> instance that contains the localized resource for the content of the today button in the <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/>
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.Internal.EditorsAssemblyResourceSetLoader">
            <summary>
            Loads the themes contained in this assembly.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Themes.Internal.EditorsAssemblyResourceSetLoader.OnRegisterResourceSets(System.String)">
            <summary>
            Loads and registers the resource sets
            </summary>
            <param name="groupingName">The name of the grouping whose resources should be loaded or null if all resource sets should be loaded.</param>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsResourceSet`1">
            <summary>
            Abstract base class used to supply style resources for a specific look for editor elements that are shared.
            </summary>
            <typeparam name="T">A <see cref="T:Infragistics.Windows.Themes.ResourceSetLocator"/> derived class that must have a public parameterless constructor.</typeparam>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.Grouping">
            <summary>
            Returns the grouping that the resources are applied to (read-only)
            </summary>
            <remarks>
            Examples: DataPresenter, Editors, Editors, WPF etc.
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.Theme">
            <summary>
            Returns the name of the look (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.Resources">
            <summary>
            Returns the ResourceDictionary containing the associated styles (read-only)
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.Location">
            <summary>
            Returns the <see cref="T:Infragistics.Windows.Themes.ResourceSetLocator"/> that describes the theme information for the resource set.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CaretElement">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CaretElement"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.DisplayCharactersList">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.DisplayCharactersList"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.DisplayCharacterPresenter">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.DisplayCharacterPresenter"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.SectionsList">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.SectionsList"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.SectionPresenter">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.SectionPresenter"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamCurrencyEditor">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamCurrencyEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamDateTimeEditor">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamDateTimeEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamMaskedEditor">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamMaskedEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamNumericEditor">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamNumericEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamComboEditor">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamComboEditorComboBox">
            <summary>
            The style for a XamComboEditor.ComboEditorComboBox in a <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamComboEditorDropDownButton">
            <summary>
            The style for a XamComboEditor.DropDownButtonStyle in a <see cref="T:Infragistics.Windows.Editors.XamComboEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CalendarItem">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CalendarItem"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CalendarItemGroup">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroup"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CalendarDayOfWeek">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CalendarDayOfWeek"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CalendarItemArea">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CalendarItemArea"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CalendarItemGroupTitle">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CalendarItemGroupTitle"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CalendarDay">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CalendarDay"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamMonthCalendar">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamMonthCalendar"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.CalendarWeekNumber">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.CalendarWeekNumber"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamCheckEditor">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamCheckEditor"/> 
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsResourceSet`1.XamTextEditor">
            <summary>
            The style for a <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> 
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsGeneric">
            <summary>
            Class used to supply style resources for the Generic look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGeneric.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsGeneric.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGeneric.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGeneric.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGeneric.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsGeneric.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOnyx">
            <summary>
            Class used to supply style resources for the Onyx look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyx.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOnyx.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyx.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyx.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyx.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOnyx.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsAero">
            <summary>
            Class used to supply style resources for the Aero look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAero.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsAero.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAero.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAero.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAero.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsAero.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyale">
            <summary>
            Class used to supply style resources for the Royale look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyale.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyale.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyale.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyale.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyale.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyale.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyaleStrong">
            <summary>
            Class used to supply style resources for the RoyaleStrong look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrong.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsRoyaleStrong.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrong.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrong.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrong.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsRoyaleStrong.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaNormal">
            <summary>
            Class used to supply style resources for the LunaNormal look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormal.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaNormal.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormal.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormal.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormal.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaNormal.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaOlive">
            <summary>
            Class used to supply style resources for the LunaOlive look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOlive.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaOlive.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOlive.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOlive.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOlive.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaOlive.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaSilver">
            <summary>
            Class used to supply style resources for the LunaSilver look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilver.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsLunaSilver.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilver.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilver.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilver.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsLunaSilver.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7Black">
            <summary>
            Class used to supply style resources for the Office2k7Black look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Black.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7Black.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Black.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Black.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Black.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Black.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7Blue">
            <summary>
            Class used to supply style resources for the Office2k7Blue look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Blue.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7Blue.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Blue.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Blue.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Blue.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Blue.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7Silver">
            <summary>
            Class used to supply style resources for the Office2k7Silver look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Silver.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2k7Silver.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Silver.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Silver.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Silver.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2k7Silver.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2010Blue">
            <summary>
            Class used to supply style resources for the Office2010Blue look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2010Blue.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsOffice2010Blue.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2010Blue.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2010Blue.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2010Blue.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsOffice2010Blue.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseDark">
            <summary>
            Class used to supply style resources for the WashBaseDark look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDark.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseDark.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDark.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDark.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDark.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseDark.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseLight">
            <summary>
            Class used to supply style resources for the WashBaseLight look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLight.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsWashBaseLight.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLight.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLight.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLight.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsWashBaseLight.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsPrintBasic">
            <summary>
            Class used to supply style resources for the Print look for a editor elements that are shared
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasic.Instance">
            <summary>
            Returns a static instance of this type (read-only)
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Themes.EditorsPrintBasic.Locator">
            <summary>
            Identifies the location of a specific theme grouping
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasic.Locator.Assembly">
            <summary>The assembly containg the resource set</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasic.Locator.Theme">
            <summary>The name of the theme</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasic.Locator.Grouping">
            <summary>The name of the grouping</summary>
        </member>
        <member name="P:Infragistics.Windows.Themes.EditorsPrintBasic.Locator.ResourcePath">
            <summary>The path to the embedded resources within the assembly</summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.XamTextEditor">
            <summary>
            An editor for editing values as strings.
            </summary>
            <remarks>
            <para class="body">
            <b>XamTextEditor</b> is a value editor that can be used for editing various data types as strings.
            You can specify the data type being edited by setting the <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueType"/> property.
            </para>
            <para class="body">
            The default <b>ValueType</b> for this editor is string. However, you can set the data type to a different type such 
            as <see cref="T:System.DateTime"/> in which case the editor will ensure that the value entered by the user is a valid date.
            It will parse the input into object of type specified by the <b>ValueType</b> property. If parsing fails,
            the input will be considered invalid and appropriate action will be taken by the editor. The action
            taken is based on the <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueBehavior"/> property setting. You can use the 
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueToTextConverter"/> and <see cref="P:Infragistics.Windows.Editors.TextEditorBase.ValueToDisplayTextConverter"/> 
            properties to specify custom conversion logic for converting between the text and the value type.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> class
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.CanEditType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports editing values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports editing values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            XamTextEditor's implementation returns True for only the string type since that's
            the only data type it natively renders and edits.
            </p>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanEditType(System.Type)"/> for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.CanRenderType(System.Type)">
            <summary>
            Overridden. Determines if the editor natively supports displaying of values of specified type.
            </summary>
            <param name="type">The data type to check.</param>
            <returns>Returns True if the editor natively supports displaying values of specified type, False otherwise.</returns>
            <remarks>
            <p class="body">
            XamTextEditor's implementation returns True for only the string type since that's
            the only data type it natively renders and edits.
            </p>
            <p class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.CanRenderType(System.Type)"/> for more information.
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)">
            <summary>
            Overridden. Indicates whether the desired width or the height of the editor is based on the value.
            </summary>
            <param name="orientation">Orientation of the extent being evaluated. Horizontal indicates the width and vertical indicates the height.</param>
            <returns>True if extent is based on the value.</returns>
            <remarks>
            <para class="body">
            XamTextEditor's implementation returns True for horizontal dimension since the value of the editor 
            affects the width of the control. It returns True or False for the vertical dimension based
            on whether <see cref="P:Infragistics.Windows.Editors.XamTextEditor.TextWrapping"/> property is set to True or False respectively.
            </para>
            <para class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.IsExtentBasedOnValue(System.Windows.Controls.Orientation)"/> for more information.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.ValidateFocusSite(System.Object,System.Exception@)">
            <summary>
            Validates the focus site. Returns true if the focus site is acceptable.
            </summary>
            <param name="focusSite">The focus site to validate.</param>
            <param name="errorMessage">If the foucs site is invalid then this out parameter will be assigned relevant error message.</param>
            <returns>True if the focus site is valid, False otherwise.</returns>
            <remarks>
            <para class="body">
            XamTextEditor's implementation of ValidateFocusSite makes sure that the focus site is a TextBox.
            </para>
            <para class="body">
            See ValueEditor's <see cref="M:Infragistics.Windows.Editors.ValueEditor.ValidateFocusSite(System.Object,System.Exception@)"/> for more information.
            </para>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FocusSite"/>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.OnCreateAutomationPeer">
            <summary>
            Returns an automation peer that exposes the <see cref="T:Infragistics.Windows.Editors.XamTextEditor"/> to UI Automation.
            </summary>
            <returns>A <see cref="T:Infragistics.Windows.Automation.Peers.Editors.XamTextEditorAutomationPeer"/></returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.OnFocusSiteChanged">
            <summary>
            Overridden. Called when the focus site changes.
            </summary>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.FocusSite"/>
            <seealso cref="M:Infragistics.Windows.Editors.ValueEditor.ValidateFocusSite(System.Object,System.Exception@)"/>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamTextEditor.HorizontalScrollBarVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamTextEditor.HorizontalScrollBarVisibility"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamTextEditor.TextWrappingProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamTextEditor.TextWrapping"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamTextEditor.TextAlignmentProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamTextEditor.TextAlignment"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.ShouldSerializeTextAlignment">
            <summary>
            Returns true if the TextAlignment property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.ResetTextAlignment">
            <summary>
            Resets the TextAlignment property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamTextEditor.TextAlignmentResolvedProperty">
            <summary>
            Identifies the Read-Only <see cref="P:Infragistics.Windows.Editors.XamTextEditor.TextAlignmentResolved"/> dependency property
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.XamTextEditor.VerticalScrollBarVisibilityProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.XamTextEditor.VerticalScrollBarVisibility"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.InitializeCachedPropertyValues">
            <summary>
            Initializes the variables used to cache the dependency property values by
            getting the dependency property metadata for this object and getting DefaultValue
            of that metadata for the respective property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.XamTextEditor.SelectAll">
            <summary>
            Selects all text in the editor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.HorizontalScrollBarVisibility">
            <summary>
            Determines if a horizontal scrollbar is visible.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamTextEditor.HorizontalScrollBarVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.TextWrapping">
            <summary>
            Gets/sets whether the text will wrap if there is not enough space for it to fit on one line.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamTextEditor.TextWrappingProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.TextAlignment">
            <summary>
            Specifies the text horizontal alignment. Default is to base the text alignment on
            the <b>HorizontalContentAlignment</b> property settings.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.TextAlignmentResolved">
            <summary>
            Returns the resolved text alignment.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.VerticalScrollBarVisibility">
            <summary>
            Determines if a vertical scrollbar is visible.
            </summary>
            <seealso cref="F:Infragistics.Windows.Editors.XamTextEditor.VerticalScrollBarVisibilityProperty"/>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.SelectionStart">
            <summary>
            Gets or sets the location of the selected text. If no text is selected, this property returns 
            the location of the caret.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectionStart</b> returns the starting location of the current text selection. If nothing
            is selected, it returns the location of the caret. You can set this property to change the 
            selected text. Note that setting this property does not modify the contents of the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.SelectionLength">
            <summary>
            Gets or sets the length of the selected text. If nothing is selected then returns 0.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectionLength</b> returns the length of the currently selected text. If nothing
            is currently selected then returns 0.
            </para>
            <para class="body">
            Setting this property will modify the text that's selected. It can be used to increase
            or decrease the amount of text that's currently selected. Setting it to 0 deselects
            the selected text. Note that setting this property does not modify the contents of
            the control.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.TextLength">
            <summary>
            Indicates the length of the current text in the editor.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.XamTextEditor.SelectedText">
            <summary>
            Gets or sets the selected text.
            </summary>
            <remarks>
            <para class="body">
            <b>SelectedText</b> property returns the currently selected text if any. If nothing is selected
            then returns empty string.
            </para>
            <para class="body">
            Setting this property replaces the current selected text with the set value. If nothing
            is selected and the property is set, the set value is inserted at the location of the caret.
            Note that setting this property will modify the contents of the control.
            </para>
            </remarks>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValueConstraintFlags">
            <summary>
            Used for specifying which constraints should be applied to the input value of the 
            <see cref="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Windows.Editors.ValueConstraintFlags)"/> method.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.Enumeration">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.Enumeration"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.FixedValue">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.FixedValue"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.ImplicitValueAsTypeConstraints">
            <summary>
            Specifies that the implicit constraints imposed by the pseudo-datatype supplied by the 
            <see cref="P:Infragistics.Windows.Editors.ValueConstraint.ValidateAsType"/> property should be enforced during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.ImplicitTypeParameterConstraints">
            <summary>
            Specifies that the implicit constraints imposed by the Type argument to the 
            <see cref="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Windows.Editors.ValueConstraintFlags)"/>
            method should be enforced during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.MaxExclusive">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxExclusive"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.MaxInclusive">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxInclusive"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.MaxLength">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxLength"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.MinExclusive">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinExclusive"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.MinInclusive">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinInclusive"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.MinLength">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinLength"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.Nullable">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.Nullable"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.RegexPattern">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.RegexPattern"/> constraint should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.ValidationRules">
            <summary>
            Specifies that the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.ValidationRules"/> should be applied during validation.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraintFlags.All">
            <summary>
            Specifies that all constraints, both implicit and explicit, should be applied during validation.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValidateAsType">
            <summary>
            Used to specify how the <see cref="T:Infragistics.Windows.Editors.ValueConstraint"/> class should validate a value.  Each of these
            values represents a data type which has implicit constraints, such as a minimal value, etc.  Those
            constraints are used by the <see cref="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type)"/> method to enforce data validity.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Unknown">
            <summary>
            Represents an unrecognized or unspecified type.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Boolean">
            <summary>
            Represents a value which can either be true or false.  Corresponds to System.Boolean.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Byte">
            <summary>
            Represents a signed byte.  Corresponds to System.SByte.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.DateTime">
            <summary>
            Represents a date and time.  Corresponds to System.DateTime.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Decimal">
            <summary>
            Represents a high precision floating point value.  Corresponds to System.Decimal.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Double">
            <summary>
            Represents a high magnitude floating point value.  Corresponds to System.Double.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Float">
            <summary>
            Represents a floating point value.  Corresponds to System.Single.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Integer16">
            <summary>
            Represents a signed 16 bit integral value.  Corresponds to System.Int16.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Integer32">
            <summary>
            Represents a signed 32 bit integral value.  Corresponds to System.Int32.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Integer64">
            <summary>
            Represents a signed 64 bit integral value.  Corresponds to System.Int64.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.NegativeInteger64">
            <summary>
            Represents a signed 64 bit integral number whose maximal value is -1, inclusive.  Corresponds to System.Int64.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.NonNegativeInteger64">
            <summary>
            Represents a signed 64 bit integral number whose minimal value is 0, inclusive.  Corresponds to System.Int64.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.NonPositiveInteger64">
            <summary>
            Represents a signed 64 bit integral number whose maximal value is 0, inclusive.  Corresponds to System.Int64.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.PositiveInteger64">
            <summary>
            Represents a signed 64 bit integral number whose minimal value is -1, inclusive.  Corresponds to System.Int64.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Text">
            <summary>
            Represents textual data.  Corresponds to System.String.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.TimeSpan">
            <summary>
            Represents a length of time.  Corresponds to System.TimeSpan.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.UnsignedByte">
            <summary>
            Represents an unsigned byte value.  Corresponds to System.Byte.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.UnsignedInteger16">
            <summary>
            Represents an unsigned 16 bit number.  Corresponds to System.UInt16.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.UnsignedInteger32">
            <summary>
            Represents an unsigned 32 bit number.  Corresponds to System.UInt32.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.UnsignedInteger64">
            <summary>
            Represents an unsigned 64 bit number.  Corresponds to System.UInt64.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValidateAsType.Uri">
            <summary>
            Represents a Uniform Resource Identifier.  Corresponds to System.Uri.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValueConstraint">
            <summary>
            Contains various constraints that can be applied to a data value.
            </summary>
            <remarks>
            <para class="body">
            ValueConstraint object contains various properties that you can set to create constraints
            for data values. The ValueConstraint will check to see if a data value matches all the
            constraints.
            </para>
            <para class="body">
            <see cref="T:Infragistics.Windows.Editors.ValueEditor"/> class exposes <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/> property 
            that is of this object type. ValueEditor's ValueConstraint property can be
            used to constraint what values the user can input in the editors. See <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            for more information.
            </para>
            <para class="body">
            You can use the ValueConstraint directly to validate a value by calling its
            <see cref="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type)"/> or one of the other overloads.
            </para>
            </remarks>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Infragistics.Windows.Editors.ValueConstraint"/> class without any constraints.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.EnumerationProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.Enumeration"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeEnumeration">
            <summary>
            Returns true if the Enumeration property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetEnumeration">
            <summary>
            Resets the Enumeration property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.FixedValueProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.FixedValue"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeFixedValue">
            <summary>
            Returns true if the FixedValue property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetFixedValue">
            <summary>
            Resets the FixedValue property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.MaxExclusiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxExclusive"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeMaxExclusive">
            <summary>
            Returns true if the MaxExclusive property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetMaxExclusive">
            <summary>
            Resets the MaxExclusive property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.MaxInclusiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxInclusive"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeMaxInclusive">
            <summary>
            Returns true if the MaxInclusive property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetMaxInclusive">
            <summary>
            Resets the MaxInclusive property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.MaxLengthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxLength"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeMaxLength">
            <summary>
            Returns true if the MaxLength property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetMaxLength">
            <summary>
            Resets the MaxLength property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.MinExclusiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinExclusive"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeMinExclusive">
            <summary>
            Returns true if the MinExclusive property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetMinExclusive">
            <summary>
            Resets the MinExclusive property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.MinInclusiveProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinInclusive"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeMinInclusive">
            <summary>
            Returns true if the MinInclusive property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetMinInclusive">
            <summary>
            Resets the MinInclusive property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.MinLengthProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinLength"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeMinLength">
            <summary>
            Returns true if the MinLength property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetMinLength">
            <summary>
            Resets the MinLength property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.NullableProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.Nullable"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeNullable">
            <summary>
            Returns true if the Nullable property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetNullable">
            <summary>
            Resets the Nullable property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.RegexPatternProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.RegexPattern"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeRegexPattern">
            <summary>
            Returns true if the RegexPattern property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetRegexPattern">
            <summary>
            Resets the RegexPattern property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.ValidateAsTypeProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.ValidateAsType"/> dependency property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeValidateAsType">
            <summary>
            Returns true if the ValidateAsType property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetValidateAsType">
            <summary>
            Resets the ValidateAsType property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeValidationRules">
            <summary>
            Returns true if the ValidationRules property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetValidationRules">
            <summary>
            Resets the ValidationRules property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.GetTypeFromValidateAsType(Infragistics.Windows.Editors.ValidateAsType)">
            <summary>
            Returns the System.Type object which corresponds to the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.ValidateAsType"/> argument.
            </summary>
            <param name="validateAsType">The psuedo-data type for which the corresponding CLR Type is needed.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.GetValidateAsTypeFromType(System.Type)">
            <summary>
            Returns a <see cref="P:Infragistics.Windows.Editors.ValueConstraint.ValidateAsType"/> value which represents the <see cref="T:System.Type"/> argument.
            </summary>
            <param name="type">A Type object for which the corresponding ValidateAsType is needed.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.InitializeFrom(Infragistics.Windows.Editors.ValueConstraint,System.Boolean)">
            <summary>
            Copies the state of the argument into this object.
            </summary>
            <param name="source">The ValueConstraint to copy the state of.</param>
            <param name="copyEnumeration">Pass false if the 'enumeration' field should not be copied.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.InitializeFrom(Infragistics.Windows.Editors.ValueConstraint)">
            <summary>
            Copies the state of the argument into this object.
            </summary>
            <param name="source">The ValueConstraint to copy the state of.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.Merge(Infragistics.Windows.Editors.ValueConstraint,Infragistics.Windows.Editors.ValueConstraintFlags)">
            <summary>
            Copies constraint settings from the source ValueConstraint to the target (i.e. the instance on which this method was invoked).
            Only constraint settings which have default values on the target will be assigned values from the source.
            Only constraint settings specified by the 'constraintFlags' flags argument will be copied.
            Note, this method does not copy the ValidateAsType property.
            </summary>
            <param name="source">A ValueConstraint object which contains constraint settings to be copied.</param>
            <param name="constraintFlags">A bit flag which specifies the constraint settings to be copied.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.Merge(Infragistics.Windows.Editors.ValueConstraint)">
            <summary>
            Copies constraint settings from the source ValueConstraint to the target (i.e. the instance on which this method was invoked).
            Only constraint settings which have default values on the target will be assigned values from the source.
            Note, this method does not copy the ValidateAsType property.
            </summary>
            <param name="source">A ValueConstraint object which contains constraint settings to be copied.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.Reset(Infragistics.Windows.Editors.ValueConstraintFlags)">
            <summary>
            Resets all of the constraint settings in this object to their initial (not set) state
            which are specified in the 'constraintFlags' bit flag argument.
            Note, this method does not reset the ValidateAsType property.
            </summary>
            <param name="constraintFlags">A bit flag which specifies which constraint settings to reset.</param>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.Reset">
            <summary>
            Resets all of the constraint settings in this object to their initial (not set) state.
            Note, this method does not reset the ValidateAsType property.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Windows.Editors.ValueConstraintFlags,System.IFormatProvider,System.String,System.String@)">
            <summary>
            Returns true if the argument is considered valid with regards to the current constraint settings.
            </summary>
            <param name="dataValue">
            The data value to validate.
            </param>
            <param name="targetType">
            A Type object representing the data type which the 'dataValue' should be validated as.
            </param>
            <param name="constraintFlags">
            A bit flag which indicates which constraints to apply during validation.
            </param>
            <param name="formatProvider">
            An IFormatProvider used when converting values to and from strings.
            </param>
            <param name="format">
            A format string to use when converting values to and from strings.
            </param>
            <param name="errorMessage">
            If the data value is invalid, this out param will reference an error message.
            </param>
            <returns>Returns true if the input value satisfies all of the applicable constraints set on this object, else false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type,Infragistics.Windows.Editors.ValueConstraintFlags)">
            <summary>
            Returns true if the argument is considered valid with regards to the current constraint settings.
            </summary>
            <param name="dataValue">
            The data value to validate.
            </param>
            <param name="targetType">
            A Type object representing the data type which the 'dataValue' should be validated as. 
            </param>
            <param name="constraintFlags">
            A bit flag which indicates which constraints to apply during validation.
            </param>
            <returns>Returns true if the input value satisfies all of the applicable constraints set on this object, else false.</returns>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type)">
            <summary>
            Returns true if the argument is considered valid with regards to the current constraint settings.
            This overload uses <see cref="T:Infragistics.Windows.Editors.ValueConstraintFlags"/> <b>All</b>.
            </summary>
            <param name="dataValue">
            The data value to validate.
            </param>
            <param name="targetType">
            A Type object representing the data type which the 'dataValue' should be validated as. 
            </param>
            <returns>Returns true if the input value satisfies all of the applicable constraints set on this object, else false.</returns>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.FractionDigitsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.FractionDigits"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeFractionDigits">
            <summary>
            Returns true if the FractionDigits property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetFractionDigits">
            <summary>
            Resets the FractionDigits property to its default state.
            </summary>
        </member>
        <member name="F:Infragistics.Windows.Editors.ValueConstraint.TotalDigitsProperty">
            <summary>
            Identifies the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.TotalDigits"/> dependency property
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ShouldSerializeTotalDigits">
            <summary>
            Returns true if the TotalDigits property is set to a non-default value.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.ResetTotalDigits">
            <summary>
            Resets the TotalDigits property to its default state.
            </summary>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValueConstraint.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Overridden. Called when a property changes.
            </summary>
            <param name="e">Event args</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.Enumeration">
            <summary>
            Gets/sets an object implementing <see cref="T:System.Collections.IEnumerable"/> which contains a list of value options.
            Note, this property defaults to a null (Nothing) value.
            </summary>
            <remarks>
            <para class="body">
            Enumeration constraints data value to be one of the elements that are part of the enumeration.
            In other words the value being validated by this ValueConstraint object will not be considered
            valid if the value is not part of this enumeration.
            </para>
            <para class="note">
            <b>Note:</b> The Enumeration is IEnumerable interface type. Therefore it can be set to any object
            that implements this interface, including Array, ArrayList etc...
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasEnumeration">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.Enumeration"/> list is not null.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.FixedValue">
            <summary>
            Gets/sets the value which the constrained value must be equal to.
            </summary>
            <remarks>
            <para class="body">
            If FixedValue is set then the data value being validated must be equal to this property's value.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasFixedValue">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.FixedValue"/> property is not null (Nothing).
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.MaxExclusive">
            <summary>
            Gets/sets the value that will constraint the data value to be less than it.
            </summary>
            <remarks>
            <para class="body">
            The data value being validated must be less than the MaxExclusive. It can not be the same as
            MaxExclusive.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasMaxExclusive">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxExclusive"/> property is not null (Nothing).
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.MaxInclusive">
            <summary>
            Gets/sets the maximum value which the constrained value is allowed to be.
            </summary>
            <remarks>
            <para class="body">
            The data value being validated must be less than or equal to the MaxInclusive.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasMaxInclusive">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxInclusive"/> property is not null (Nothing).
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.MaxLength">
            <summary>
            Gets/sets the maximum length (inclusive) allowed for the constrained value.
            This constraint applies to values of type 'string'.
            The default value is 0, which means that there is no limit.
            </summary>
            <remarks>
            <para class="body">
            MaxLength constraint will ensure that the data value being validated has
            a length that's less than or equal the value of this property.
            </para>
            <para class="body">
            <b>Note:</b> If the data value being validated is not a string object then it
            will be converted to string before performing this validation.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasMaxLength">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MaxLength"/> property has a value greater than 0.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.MinExclusive">
            <summary>
            Gets/sets the value that will constraint the data value to be greater than it.
            </summary>
            <remarks>
            <para class="body">
            The data value being validated must be greater than the MinExclusive. It can not be the same as
            MinExclusive.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasMinExclusive">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinExclusive"/> property is not null (Nothing).
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.MinInclusive">
            <summary>
            Gets/sets the minimum value which the constrained value is allowed to be.
            </summary>
            <remarks>
            <para class="body">
            The data value being validated must be greater than or equal to the MinInclusive.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasMinInclusive">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinInclusive"/> property is not null (Nothing).
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.MinLength">
            <summary>
            Gets/sets the minimum length (inclusive) allowed for the constrained value.
            This constraint applies to values of type 'string'.
            The default value is 0, which means there is no minimum length constraint.
            </summary>
            <remarks>
            <para class="body">
            MinLength constraint will ensure that the data value being validated has
            a length that's greater than or equal the value of this property.
            </para>
            <para class="body">
            <b>Note:</b> If the data value being validated is not a string object then it
            will be converted to string before performing this validation.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasMinLength">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.MinLength"/> property has a value greater than 0.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.Nullable">
            <summary>
            Gets/sets a flag which indicates if the constrained value is allowed to be null (Nothing).
            Default value of this property is null which is to allow null values.
            </summary>
            <remarks>
            <para class="body">
            Nullable property if set to False constraints the value to be non-null. The value must not
            be one of null (Nothing in VB) or DBNull.
            </para>
            <para class="body">
            If the ValueConstraint object is associated with an editor's <see cref="P:Infragistics.Windows.Editors.ValueEditor.ValueConstraint"/>
            property, <b>Nullable</b> indicates if the user is allowed to delete all the contents of the editor.
            If Nullable is set to False then the user is not allowed to delete all the contents. The user must
            enter a value in the editor.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasNullable">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.Nullable"/> property returns a non-default value.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.RegexPattern">
            <summary>
            Gets/sets the regular expression to which the constrained value must adhere.
            </summary>
            <remarks>
            <para class="body">
            RegexPattern validates the data value against a regular expression pattern. The value
            must match this patter for it be considered valid.
            </para>
            <para class="body">
            Here are some examples of regular expressions:<br/>
            <ul>
            <li><b>\d*</b> - the text must be zero or more digits</li>
            <li><b>\d+</b> - the text must be one or more digits</li>
            <li><b>[a-d]+</b> - the text must be one or more instances of a, b, c, d characters</li>
            <li><b>\d{3}-?\d{3}-?\d{4}</b> - U.S. phone number pattern where '-' are optional</li>
            </ul>
            </para>
            <para class="body">
            See .NET <see cref="T:System.Text.RegularExpressions.Regex"/> class for more information
            on the syntax of regular expressions. The Regex class is used to perform the matching.
            </para>
            <para class="body">
            <b>Note:</b> If the data value being validated is not a string object then it
            will be converted to string before performing this validation.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasRegexPattern">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.RegexPattern"/> is not null (Nothing).
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.ValidateAsType">
            <summary>
            Gets/sets the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.ValidateAsType"/> value which the <see cref="M:Infragistics.Windows.Editors.ValueConstraint.Validate(System.Object,System.Type)"/> method should
            use to constrain the input value.  By default this value is set to <b>Unknown</b>.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.ValidationRules">
            <summary>
            Specifies a list of ValidationRule objects to validate the constraned value.
            </summary>
            <remarks>
            <para class="body">
            <b>ValidationRules</b> property lets you specify one or more ValidationRule objects
            with which to validate the data value. The value being tested against this ValueConstraint
            object much match all the validation rules specified via this property for it be considered
            a valid value.
            </para>
            <para class="body">
            <i>ValidationRule</i> class lets you provide custom validation logic by deriving
            a class from it and supplying the custom validation logic in the Validate method,
            which is an abstract method on the ValidationRule.
            </para>
            </remarks>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasValidationRules">
            <summary>
            Returns true if the <see cref="P:Infragistics.Windows.Editors.ValueConstraint.ValidationRules"/> is not null (Nothing).
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.HasAnyConstraints">
            <summary>
            Returns true if any of the constraint properties are set on this object or if the ValidateAsType
            property is set to something other than 'Unknown'.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.FractionDigits">
            <summary>
            Currently this is not being used.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValueConstraint.TotalDigits">
            <summary>
            Currently this is not being used.
            </summary>
        </member>
        <member name="E:Infragistics.Windows.Editors.ValueConstraint.PropertyChanged">
            <summary>
            Raised whenever a property's value changes.
            </summary>
        </member>
        <member name="T:Infragistics.Windows.Editors.ValidationErrorInfo">
            <summary>
            Contains error information regarding why a value is invalid.
            </summary>
            <remarks>
            <para class="body">
            When an editor value is invalid, editor's <see cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/> property returns
            false. To get the error information regarding why the value is invalid, use the editor's
            <see cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfo"/> property which returns an instance of this class.
            </para>
            </remarks>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.InvalidValueErrorInfo"/>
            <seealso cref="P:Infragistics.Windows.Editors.ValueEditor.IsValueValid"/>
        </member>
        <member name="M:Infragistics.Windows.Editors.ValidationErrorInfo.#ctor(System.Exception)">
            <summary>
            Constructor.
            </summary>
            <param name="exception">Exception if any.</param>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValidationErrorInfo.ErrorMessage">
            <summary>
            Error message indicating why the value is invalid.
            </summary>
        </member>
        <member name="P:Infragistics.Windows.Editors.ValidationErrorInfo.Exception">
            <summary>
            Returns the exception if any that caused validation error.
            </summary>
        </member>
    </members>
</doc>
